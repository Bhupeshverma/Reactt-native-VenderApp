["c298bc2d94d6f2f51f3f37c5f80c66c827e4ef3d","17934840177137bd7192589b0a628350f3b0aa08",["sc-emitter","sc-channel","./response","./auth","sc-formatter","./sctransport","querystring","linked-list","base-64","clone","sc-errors"],[24,73,121,170,216,259,315,356,393,425,459],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/socketcluster-client/lib/scsocket.js"],"names":["SCEmitter","require","SCChannel","Response","AuthEngine","formatter","SCTransport","querystring","LinkedList","base64","clone","scErrors","InvalidArgumentsError","InvalidMessageError","SocketProtocolError","TimeoutError","isBrowser","window","SCSocket","opts","self","call","id","state","CLOSED","authState","PENDING","signedAuthToken","authToken","pendingReconnect","pendingReconnectTimeout","pendingConnectCallback","connectTimeout","ackTimeout","channelPrefix","disconnectOnUnload","pingTimeout","maxTimeout","Math","pow","verifyDuration","propertyName","_localEvents","connectAttempts","_emitBuffer","_channels","options","_cid","callIdGenerator","_callIdGenerator","autoReconnect","autoReconnectOptions","reconnectOptions","initialDelay","randomness","multiplier","maxDelay","subscriptionRetryOptions","authEngine","auth","codecEngine","codec","path","replace","query","parse","autoConnect","connect","_channelEmitter","unloadHandler","disconnect","global","attachEvent","addEventListener","prototype","Object","create","CONNECTING","OPEN","AUTHENTICATED","UNAUTHENTICATED","ignoreStatuses","socketProtocolIgnoreStatuses","errorStatuses","socketProtocolErrorStatuses","_privateEventHandlerMap","data","undecoratedChannelName","_undecorateChannelName","channel","isSubscribed","emit","message","_triggerChannelUnsubscribe","response","triggerAuthenticate","err","error","_onSCError","_changeToAuthenticatedState","token","end","saveToken","authTokenName","removeToken","oldToken","_changeToUnauthenticatedState","transport","close","code","getState","getBytesReceived","deauthenticate","callback","open","clearTimeout","_reconnectTimeoutRef","_changeToPendingAuthState","off","on","status","_onSCOpen","_onSCClose","event","res","_onSCEvent","reconnect","oldState","stateChangeData","newState","_extractAuthTokenData","processPendingSubscriptions","decodeBase64","encodedString","decodedString","Buffer","atob","decode","buffer","toString","encodeBase64","btoa","encode","tokenParts","split","encodedTokenData","tokenData","JSON","e","getAuthToken","getSignedAuthToken","authenticate","authStatus","authError","hydrateError","isAuthenticated","_tryReconnect","exponent","timeout","initialTimeout","round","random","setTimeout","autoProcessSubscriptions","_flushEmitBuffer","listeners","length","_suspendSubscriptions","channelName","hasOwnProperty","SUBSCRIBED","UNSUBSCRIBED","openAbort","failureMessage","handler","apply","arguments","object","currentNode","head","nextNode","next","eventObject","detach","emitObject","_handleEventAckTimeout","eventNode","_emit","Item","cloneData","append","send","publish","pubData","_decorateChannelName","_triggerChannelSubscribe","subscriptionOptions","name","_triggerChannelSubscribeFail","meetsAuthRequirements","waitForAuth","_cancelPendingSubscribeCallback","_pendingSubscriptionCid","cancelPendingResponse","decoratedChannelName","indexOf","_trySubscribe","noTimeout","subscribe","setOptions","_tryUnsubscribe","unsubscribe","currentChannel","destroyChannel","unwatch","subscriptions","includePending","subs","includeChannel","push","i","watch","removeListener","removeAllListeners","watchers","module","exports"],"mappings":"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","sourcesContent":["var SCEmitter = require('sc-emitter').SCEmitter;\r\nvar SCChannel = require('sc-channel').SCChannel;\r\nvar Response = require('./response').Response;\r\nvar AuthEngine = require('./auth').AuthEngine;\r\nvar formatter = require('sc-formatter');\r\nvar SCTransport = require('./sctransport').SCTransport;\r\nvar querystring = require('querystring');\r\nvar LinkedList = require('linked-list');\r\nvar base64 = require('base-64');\r\nvar clone = require('clone');\r\n\r\nvar scErrors = require('sc-errors');\r\nvar InvalidArgumentsError = scErrors.InvalidArgumentsError;\r\nvar InvalidMessageError = scErrors.InvalidMessageError;\r\nvar SocketProtocolError = scErrors.SocketProtocolError;\r\nvar TimeoutError = scErrors.TimeoutError;\r\n\r\nvar isBrowser = typeof window != 'undefined';\r\n\r\n\r\nvar SCSocket = function (opts) {\r\n  var self = this;\r\n\r\n  SCEmitter.call(this);\r\n\r\n  this.id = null;\r\n  this.state = this.CLOSED;\r\n  this.authState = this.PENDING;\r\n  this.signedAuthToken = null;\r\n  this.authToken = null;\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  this.pendingConnectCallback = false;\r\n\r\n  this.connectTimeout = opts.connectTimeout;\r\n  this.ackTimeout = opts.ackTimeout;\r\n  this.channelPrefix = opts.channelPrefix || null;\r\n  this.disconnectOnUnload = opts.disconnectOnUnload == null ? true : opts.disconnectOnUnload;\r\n\r\n  // pingTimeout will be ackTimeout at the start, but it will\r\n  // be updated with values provided by the 'connect' event\r\n  this.pingTimeout = this.ackTimeout;\r\n\r\n  var maxTimeout = Math.pow(2, 31) - 1;\r\n\r\n  var verifyDuration = function (propertyName) {\r\n    if (self[propertyName] > maxTimeout) {\r\n      throw new InvalidArgumentsError('The ' + propertyName +\r\n        ' value provided exceeded the maximum amount allowed');\r\n    }\r\n  };\r\n\r\n  verifyDuration('connectTimeout');\r\n  verifyDuration('ackTimeout');\r\n  verifyDuration('pingTimeout');\r\n\r\n  this._localEvents = {\r\n    'connect': 1,\r\n    'connectAbort': 1,\r\n    'disconnect': 1,\r\n    'message': 1,\r\n    'error': 1,\r\n    'raw': 1,\r\n    'fail': 1,\r\n    'kickOut': 1,\r\n    'subscribe': 1,\r\n    'unsubscribe': 1,\r\n    'subscribeStateChange': 1,\r\n    'authStateChange': 1,\r\n    'authenticate': 1,\r\n    'deauthenticate': 1,\r\n    'removeAuthToken': 1,\r\n    'subscribeRequest': 1\r\n  };\r\n\r\n  this.connectAttempts = 0;\r\n\r\n  this._emitBuffer = new LinkedList();\r\n  this._channels = {};\r\n\r\n  this.options = opts;\r\n\r\n  this._cid = 1;\r\n\r\n  this.options.callIdGenerator = function () {\r\n    return self._callIdGenerator();\r\n  };\r\n\r\n  if (this.options.autoReconnect) {\r\n    if (this.options.autoReconnectOptions == null) {\r\n      this.options.autoReconnectOptions = {};\r\n    }\r\n\r\n    // Add properties to the this.options.autoReconnectOptions object.\r\n    // We assign the reference to a reconnectOptions variable to avoid repetition.\r\n    var reconnectOptions = this.options.autoReconnectOptions;\r\n    if (reconnectOptions.initialDelay == null) {\r\n      reconnectOptions.initialDelay = 10000;\r\n    }\r\n    if (reconnectOptions.randomness == null) {\r\n      reconnectOptions.randomness = 10000;\r\n    }\r\n    if (reconnectOptions.multiplier == null) {\r\n      reconnectOptions.multiplier = 1.5;\r\n    }\r\n    if (reconnectOptions.maxDelay == null) {\r\n      reconnectOptions.maxDelay = 60000;\r\n    }\r\n  }\r\n\r\n  if (this.options.subscriptionRetryOptions == null) {\r\n    this.options.subscriptionRetryOptions = {};\r\n  }\r\n\r\n  if (this.options.authEngine) {\r\n    this.auth = this.options.authEngine;\r\n  } else {\r\n    this.auth = new AuthEngine();\r\n  }\r\n\r\n  if (this.options.codecEngine) {\r\n    this.codec = this.options.codecEngine;\r\n  } else {\r\n    // Default codec engine\r\n    this.codec = formatter;\r\n  }\r\n\r\n  this.options.path = this.options.path.replace(/\\/$/, '') + '/';\r\n\r\n  this.options.query = opts.query || {};\r\n  if (typeof this.options.query == 'string') {\r\n    this.options.query = querystring.parse(this.options.query);\r\n  }\r\n\r\n  if (this.options.autoConnect) {\r\n    this.connect();\r\n  }\r\n\r\n  this._channelEmitter = new SCEmitter();\r\n\r\n  if (isBrowser && this.disconnectOnUnload) {\r\n    var unloadHandler = function () {\r\n      self.disconnect();\r\n    };\r\n\r\n    if (global.attachEvent) {\r\n      global.attachEvent('onunload', unloadHandler);\r\n    } else if (global.addEventListener) {\r\n      global.addEventListener('beforeunload', unloadHandler, false);\r\n    }\r\n  }\r\n};\r\n\r\nSCSocket.prototype = Object.create(SCEmitter.prototype);\r\n\r\nSCSocket.CONNECTING = SCSocket.prototype.CONNECTING = SCTransport.prototype.CONNECTING;\r\nSCSocket.OPEN = SCSocket.prototype.OPEN = SCTransport.prototype.OPEN;\r\nSCSocket.CLOSED = SCSocket.prototype.CLOSED = SCTransport.prototype.CLOSED;\r\n\r\nSCSocket.AUTHENTICATED = SCSocket.prototype.AUTHENTICATED = 'authenticated';\r\nSCSocket.UNAUTHENTICATED = SCSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\r\nSCSocket.PENDING = SCSocket.prototype.PENDING = 'pending';\r\n\r\nSCSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\r\nSCSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\r\n\r\nSCSocket.prototype._privateEventHandlerMap = {\r\n  '#publish': function (data) {\r\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    var isSubscribed = this.isSubscribed(undecoratedChannelName, true);\r\n\r\n    if (isSubscribed) {\r\n      this._channelEmitter.emit(undecoratedChannelName, data.data);\r\n    }\r\n  },\r\n  '#kickOut': function (data) {\r\n    var undecoratedChannelName = this._undecorateChannelName(data.channel);\r\n    var channel = this._channels[undecoratedChannelName];\r\n    if (channel) {\r\n      SCEmitter.prototype.emit.call(this, 'kickOut', data.message, undecoratedChannelName);\r\n      channel.emit('kickOut', data.message, undecoratedChannelName);\r\n      this._triggerChannelUnsubscribe(channel);\r\n    }\r\n  },\r\n  '#setAuthToken': function (data, response) {\r\n    var self = this;\r\n\r\n    if (data) {\r\n      var triggerAuthenticate = function (err) {\r\n        if (err) {\r\n          // This is a non-fatal error, we don't want to close the connection\r\n          // because of this but we do want to notify the server and throw an error\r\n          // on the client.\r\n          response.error(err);\r\n          self._onSCError(err);\r\n        } else {\r\n          self._changeToAuthenticatedState(data.token);\r\n          response.end();\r\n        }\r\n      };\r\n\r\n      this.auth.saveToken(this.options.authTokenName, data.token, {}, triggerAuthenticate);\r\n    } else {\r\n      response.error(new InvalidMessageError('No token data provided by #setAuthToken event'));\r\n    }\r\n  },\r\n  '#removeAuthToken': function (data, response) {\r\n    var self = this;\r\n\r\n    this.auth.removeToken(this.options.authTokenName, function (err, oldToken) {\r\n      if (err) {\r\n        // Non-fatal error - Do not close the connection\r\n        response.error(err);\r\n        self._onSCError(err);\r\n      } else {\r\n        SCEmitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\r\n        self._changeToUnauthenticatedState();\r\n        response.end();\r\n      }\r\n    });\r\n  },\r\n  '#disconnect': function (data) {\r\n    this.transport.close(data.code, data.data);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._callIdGenerator = function () {\r\n  return this._cid++;\r\n};\r\n\r\nSCSocket.prototype.getState = function () {\r\n  return this.state;\r\n};\r\n\r\nSCSocket.prototype.getBytesReceived = function () {\r\n  return this.transport.getBytesReceived();\r\n};\r\n\r\nSCSocket.prototype.deauthenticate = function (callback) {\r\n  var self = this;\r\n\r\n  this.auth.removeToken(this.options.authTokenName, function (err, oldToken) {\r\n    if (err) {\r\n      // Non-fatal error - Do not close the connection\r\n      self._onSCError(err);\r\n    } else {\r\n      self.emit('#removeAuthToken');\r\n      SCEmitter.prototype.emit.call(self, 'removeAuthToken', oldToken);\r\n      self._changeToUnauthenticatedState();\r\n    }\r\n    callback && callback(err);\r\n  });\r\n};\r\n\r\nSCSocket.prototype.connect = SCSocket.prototype.open = function () {\r\n  var self = this;\r\n\r\n  if (this.state == this.CLOSED) {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n\r\n    this.state = this.CONNECTING;\r\n    SCEmitter.prototype.emit.call(this, 'connecting');\r\n\r\n    this._changeToPendingAuthState();\r\n\r\n    if (this.transport) {\r\n      this.transport.off();\r\n    }\r\n\r\n    this.transport = new SCTransport(this.auth, this.codec, this.options);\r\n\r\n    this.transport.on('open', function (status) {\r\n      self.state = self.OPEN;\r\n      self._onSCOpen(status);\r\n    });\r\n\r\n    this.transport.on('error', function (err) {\r\n      self._onSCError(err);\r\n    });\r\n\r\n    this.transport.on('close', function (code, data) {\r\n      self.state = self.CLOSED;\r\n      self._onSCClose(code, data);\r\n    });\r\n\r\n    this.transport.on('openAbort', function (code, data) {\r\n      self.state = self.CLOSED;\r\n      self._onSCClose(code, data, true);\r\n    });\r\n\r\n    this.transport.on('event', function (event, data, res) {\r\n      self._onSCEvent(event, data, res);\r\n    });\r\n  }\r\n};\r\n\r\nSCSocket.prototype.reconnect = function () {\r\n  this.disconnect();\r\n  this.connect();\r\n};\r\n\r\nSCSocket.prototype.disconnect = function (code, data) {\r\n  code = code || 1000;\r\n\r\n  if (typeof code != 'number') {\r\n    throw new InvalidArgumentsError('If specified, the code argument must be a number');\r\n  }\r\n\r\n  if (this.state == this.OPEN || this.state == this.CONNECTING) {\r\n    this.transport.close(code, data);\r\n  } else {\r\n    this.pendingReconnect = false;\r\n    this.pendingReconnectTimeout = null;\r\n    clearTimeout(this._reconnectTimeoutRef);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._changeToPendingAuthState = function () {\r\n  if (this.authState != this.PENDING) {\r\n    var oldState = this.authState;\r\n    this.authState = this.PENDING;\r\n    var stateChangeData = {\r\n      oldState: oldState,\r\n      newState: this.authState\r\n    };\r\n    SCEmitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._changeToUnauthenticatedState = function () {\r\n  if (this.authState != this.UNAUTHENTICATED) {\r\n    var oldState = this.authState;\r\n    this.authState = this.UNAUTHENTICATED;\r\n    this.signedAuthToken = null;\r\n    this.authToken = null;\r\n\r\n    var stateChangeData = {\r\n      oldState: oldState,\r\n      newState: this.authState\r\n    };\r\n    SCEmitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\r\n    if (oldState == this.AUTHENTICATED) {\r\n      SCEmitter.prototype.emit.call(this, 'deauthenticate');\r\n    }\r\n    SCEmitter.prototype.emit.call(this, 'authTokenChange', this.signedAuthToken);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._changeToAuthenticatedState = function (signedAuthToken) {\r\n  this.signedAuthToken = signedAuthToken;\r\n  this.authToken = this._extractAuthTokenData(signedAuthToken);\r\n\r\n  if (this.authState != this.AUTHENTICATED) {\r\n    var oldState = this.authState;\r\n    this.authState = this.AUTHENTICATED;\r\n    var stateChangeData = {\r\n      oldState: oldState,\r\n      newState: this.authState,\r\n      signedAuthToken: signedAuthToken,\r\n      authToken: this.authToken\r\n    };\r\n    this.processPendingSubscriptions();\r\n\r\n    SCEmitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\r\n    SCEmitter.prototype.emit.call(this, 'authenticate', signedAuthToken);\r\n  }\r\n  SCEmitter.prototype.emit.call(this, 'authTokenChange', signedAuthToken);\r\n};\r\n\r\nSCSocket.prototype.decodeBase64 = function (encodedString) {\r\n  var decodedString;\r\n  if (typeof Buffer == 'undefined') {\r\n    if (global.atob) {\r\n      decodedString = global.atob(encodedString);\r\n    } else {\r\n      decodedString = base64.decode(encodedString);\r\n    }\r\n  } else {\r\n    var buffer = new Buffer(encodedString, 'base64');\r\n    decodedString = buffer.toString('utf8');\r\n  }\r\n  return decodedString;\r\n};\r\n\r\nSCSocket.prototype.encodeBase64 = function (decodedString) {\r\n  var encodedString;\r\n  if (typeof Buffer == 'undefined') {\r\n    if (global.btoa) {\r\n      encodedString = global.btoa(decodedString);\r\n    } else {\r\n      encodedString = base64.encode(decodedString);\r\n    }\r\n  } else {\r\n    var buffer = new Buffer(decodedString, 'utf8');\r\n    encodedString = buffer.toString('base64');\r\n  }\r\n  return encodedString;\r\n};\r\n\r\nSCSocket.prototype._extractAuthTokenData = function (signedAuthToken) {\r\n  var tokenParts = (signedAuthToken || '').split('.');\r\n  var encodedTokenData = tokenParts[1];\r\n  if (encodedTokenData != null) {\r\n    var tokenData = encodedTokenData;\r\n    try {\r\n      tokenData = this.decodeBase64(tokenData);\r\n      return JSON.parse(tokenData);\r\n    } catch (e) {\r\n      return tokenData;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nSCSocket.prototype.getAuthToken = function () {\r\n  return this.authToken;\r\n};\r\n\r\nSCSocket.prototype.getSignedAuthToken = function () {\r\n  return this.signedAuthToken;\r\n};\r\n\r\n// Perform client-initiated authentication by providing an encrypted token string\r\nSCSocket.prototype.authenticate = function (signedAuthToken, callback) {\r\n  var self = this;\r\n\r\n  this._changeToPendingAuthState();\r\n\r\n  this.emit('#authenticate', signedAuthToken, function (err, authStatus) {\r\n    if (authStatus && authStatus.authError) {\r\n      authStatus.authError = scErrors.hydrateError(authStatus.authError);\r\n    }\r\n    if (err) {\r\n      self._changeToUnauthenticatedState();\r\n      callback && callback(err, authStatus);\r\n    } else {\r\n      self.auth.saveToken(self.options.authTokenName, signedAuthToken, {}, function (err) {\r\n        callback && callback(err, authStatus);\r\n        if (err) {\r\n          self._changeToUnauthenticatedState();\r\n          self._onSCError(err);\r\n        } else {\r\n          if (authStatus.isAuthenticated) {\r\n            self._changeToAuthenticatedState(signedAuthToken);\r\n          } else {\r\n            self._changeToUnauthenticatedState();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nSCSocket.prototype._tryReconnect = function (initialDelay) {\r\n  var self = this;\r\n\r\n  var exponent = this.connectAttempts++;\r\n  var reconnectOptions = this.options.autoReconnectOptions;\r\n  var timeout;\r\n\r\n  if (initialDelay == null || exponent > 0) {\r\n    var initialTimeout = Math.round(reconnectOptions.initialDelay + (reconnectOptions.randomness || 0) * Math.random());\r\n\r\n    timeout = Math.round(initialTimeout * Math.pow(reconnectOptions.multiplier, exponent));\r\n  } else {\r\n    timeout = initialDelay;\r\n  }\r\n\r\n  if (timeout > reconnectOptions.maxDelay) {\r\n    timeout = reconnectOptions.maxDelay;\r\n  }\r\n\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this.pendingReconnect = true;\r\n  this.pendingReconnectTimeout = timeout;\r\n  this._reconnectTimeoutRef = setTimeout(function () {\r\n    self.connect();\r\n  }, timeout);\r\n};\r\n\r\nSCSocket.prototype._onSCOpen = function (status) {\r\n  var self = this;\r\n\r\n  if (status) {\r\n    this.id = status.id;\r\n    this.pingTimeout = status.pingTimeout;\r\n    this.transport.pingTimeout = this.pingTimeout;\r\n    if (status.isAuthenticated) {\r\n      this._changeToAuthenticatedState(status.authToken);\r\n    } else {\r\n      this._changeToUnauthenticatedState();\r\n    }\r\n  } else {\r\n    this._changeToUnauthenticatedState();\r\n  }\r\n\r\n  this.connectAttempts = 0;\r\n  if (this.options.autoProcessSubscriptions) {\r\n    this.processPendingSubscriptions();\r\n  } else {\r\n    this.pendingConnectCallback = true;\r\n  }\r\n\r\n  // If the user invokes the callback while in autoProcessSubscriptions mode, it\r\n  // won't break anything - The processPendingSubscriptions() call will be a no-op.\r\n  SCEmitter.prototype.emit.call(this, 'connect', status, function () {\r\n    self.processPendingSubscriptions();\r\n  });\r\n\r\n  this._flushEmitBuffer();\r\n};\r\n\r\nSCSocket.prototype._onSCError = function (err) {\r\n  var self = this;\r\n\r\n  // Throw error in different stack frame so that error handling\r\n  // cannot interfere with a reconnect action.\r\n  setTimeout(function () {\r\n    if (self.listeners('error').length < 1) {\r\n      throw err;\r\n    } else {\r\n      SCEmitter.prototype.emit.call(self, 'error', err);\r\n    }\r\n  }, 0);\r\n};\r\n\r\nSCSocket.prototype._suspendSubscriptions = function () {\r\n  var channel, newState;\r\n  for (var channelName in this._channels) {\r\n    if (this._channels.hasOwnProperty(channelName)) {\r\n      channel = this._channels[channelName];\r\n      if (channel.state == channel.SUBSCRIBED ||\r\n        channel.state == channel.PENDING) {\r\n\r\n        newState = channel.PENDING;\r\n      } else {\r\n        newState = channel.UNSUBSCRIBED;\r\n      }\r\n\r\n      this._triggerChannelUnsubscribe(channel, newState);\r\n    }\r\n  }\r\n};\r\n\r\nSCSocket.prototype._onSCClose = function (code, data, openAbort) {\r\n  var self = this;\r\n\r\n  this.id = null;\r\n\r\n  if (this.transport) {\r\n    this.transport.off();\r\n  }\r\n  this.pendingReconnect = false;\r\n  this.pendingReconnectTimeout = null;\r\n  clearTimeout(this._reconnectTimeoutRef);\r\n\r\n  this._changeToPendingAuthState();\r\n  this._suspendSubscriptions();\r\n\r\n  // Try to reconnect\r\n  // on server ping timeout (4000)\r\n  // or on client pong timeout (4001)\r\n  // or on close without status (1005)\r\n  // or on handshake failure (4003)\r\n  // or on socket hung up (1006)\r\n  if (this.options.autoReconnect) {\r\n    if (code == 4000 || code == 4001 || code == 1005) {\r\n      // If there is a ping or pong timeout or socket closes without\r\n      // status, don't wait before trying to reconnect - These could happen\r\n      // if the client wakes up after a period of inactivity and in this case we\r\n      // want to re-establish the connection as soon as possible.\r\n      this._tryReconnect(0);\r\n\r\n      // Codes 4500 and above will be treated as permanent disconnects.\r\n      // Socket will not try to auto-reconnect.\r\n    } else if (code != 1000 && code < 4500) {\r\n      this._tryReconnect();\r\n    }\r\n  }\r\n\r\n  if (openAbort) {\r\n    SCEmitter.prototype.emit.call(self, 'connectAbort', code, data);\r\n  } else {\r\n    SCEmitter.prototype.emit.call(self, 'disconnect', code, data);\r\n  }\r\n\r\n  if (!SCSocket.ignoreStatuses[code]) {\r\n    var failureMessage;\r\n    if (data) {\r\n      failureMessage = 'Socket connection failed: ' + data;\r\n    } else {\r\n      failureMessage = 'Socket connection failed for unknown reasons';\r\n    }\r\n    var err = new SocketProtocolError(SCSocket.errorStatuses[code] || failureMessage, code);\r\n    this._onSCError(err);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._onSCEvent = function (event, data, res) {\r\n  var handler = this._privateEventHandlerMap[event];\r\n  if (handler) {\r\n    handler.call(this, data, res);\r\n  } else {\r\n    SCEmitter.prototype.emit.call(this, event, data, function () {\r\n      res && res.callback.apply(res, arguments);\r\n    });\r\n  }\r\n};\r\n\r\nSCSocket.prototype.decode = function (message) {\r\n  return this.transport.decode(message);\r\n};\r\n\r\nSCSocket.prototype.encode = function (object) {\r\n  return this.transport.encode(object);\r\n};\r\n\r\nSCSocket.prototype._flushEmitBuffer = function () {\r\n  var currentNode = this._emitBuffer.head;\r\n  var nextNode;\r\n\r\n  while (currentNode) {\r\n    nextNode = currentNode.next;\r\n    var eventObject = currentNode.data;\r\n    currentNode.detach();\r\n    this.transport.emitObject(eventObject);\r\n    currentNode = nextNode;\r\n  }\r\n};\r\n\r\nSCSocket.prototype._handleEventAckTimeout = function (eventObject, eventNode) {\r\n  if (eventNode) {\r\n    eventNode.detach();\r\n  }\r\n  var callback = eventObject.callback;\r\n  if (callback) {\r\n    delete eventObject.callback;\r\n    var error = new TimeoutError(\"Event response for '\" + eventObject.event + \"' timed out\");\r\n    callback.call(eventObject, error, eventObject);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._emit = function (event, data, callback) {\r\n  var self = this;\r\n\r\n  if (this.state == this.CLOSED) {\r\n    this.connect();\r\n  }\r\n  var eventObject = {\r\n    event: event,\r\n    data: data,\r\n    callback: callback\r\n  };\r\n\r\n  var eventNode = new LinkedList.Item();\r\n\r\n  if (this.options.cloneData) {\r\n    eventNode.data = clone(eventObject);\r\n  } else {\r\n    eventNode.data = eventObject;\r\n  }\r\n\r\n  eventObject.timeout = setTimeout(function () {\r\n    self._handleEventAckTimeout(eventObject, eventNode);\r\n  }, this.ackTimeout);\r\n\r\n  this._emitBuffer.append(eventNode);\r\n\r\n  if (this.state == this.OPEN) {\r\n    this._flushEmitBuffer();\r\n  }\r\n};\r\n\r\nSCSocket.prototype.send = function (data) {\r\n  this.transport.send(data);\r\n};\r\n\r\nSCSocket.prototype.emit = function (event, data, callback) {\r\n  if (this._localEvents[event] == null) {\r\n    this._emit(event, data, callback);\r\n  } else {\r\n    SCEmitter.prototype.emit.call(this, event, data);\r\n  }\r\n};\r\n\r\nSCSocket.prototype.publish = function (channelName, data, callback) {\r\n  var pubData = {\r\n    channel: this._decorateChannelName(channelName),\r\n    data: data\r\n  };\r\n  this.emit('#publish', pubData, callback);\r\n};\r\n\r\nSCSocket.prototype._triggerChannelSubscribe = function (channel, subscriptionOptions) {\r\n  var channelName = channel.name;\r\n\r\n  if (channel.state != channel.SUBSCRIBED) {\r\n    var oldState = channel.state;\r\n    channel.state = channel.SUBSCRIBED;\r\n\r\n    var stateChangeData = {\r\n      channel: channelName,\r\n      oldState: oldState,\r\n      newState: channel.state,\r\n      subscriptionOptions: subscriptionOptions\r\n    };\r\n    channel.emit('subscribeStateChange', stateChangeData);\r\n    channel.emit('subscribe', channelName, subscriptionOptions);\r\n    SCEmitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\r\n    SCEmitter.prototype.emit.call(this, 'subscribe', channelName, subscriptionOptions);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._triggerChannelSubscribeFail = function (err, channel, subscriptionOptions) {\r\n  var channelName = channel.name;\r\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState == this.AUTHENTICATED;\r\n\r\n  if (channel.state != channel.UNSUBSCRIBED && meetsAuthRequirements) {\r\n    channel.state = channel.UNSUBSCRIBED;\r\n\r\n    channel.emit('subscribeFail', err, channelName, subscriptionOptions);\r\n    SCEmitter.prototype.emit.call(this, 'subscribeFail', err, channelName, subscriptionOptions);\r\n  }\r\n};\r\n\r\n// Cancel any pending subscribe callback\r\nSCSocket.prototype._cancelPendingSubscribeCallback = function (channel) {\r\n  if (channel._pendingSubscriptionCid != null) {\r\n    this.transport.cancelPendingResponse(channel._pendingSubscriptionCid);\r\n    delete channel._pendingSubscriptionCid;\r\n  }\r\n};\r\n\r\nSCSocket.prototype._decorateChannelName = function (channelName) {\r\n  if (this.channelPrefix) {\r\n    channelName = this.channelPrefix + channelName;\r\n  }\r\n  return channelName;\r\n};\r\n\r\nSCSocket.prototype._undecorateChannelName = function (decoratedChannelName) {\r\n  if (this.channelPrefix && decoratedChannelName.indexOf(this.channelPrefix) == 0) {\r\n    return decoratedChannelName.replace(this.channelPrefix, '');\r\n  }\r\n  return decoratedChannelName;\r\n};\r\n\r\nSCSocket.prototype._trySubscribe = function (channel) {\r\n  var self = this;\r\n\r\n  var meetsAuthRequirements = !channel.waitForAuth || this.authState == this.AUTHENTICATED;\r\n\r\n  // We can only ever have one pending subscribe action at any given time on a channel\r\n  if (this.state == this.OPEN && !this.pendingConnectCallback &&\r\n    channel._pendingSubscriptionCid == null && meetsAuthRequirements) {\r\n\r\n    var options = {\r\n      noTimeout: true\r\n    };\r\n\r\n    var subscriptionOptions = {\r\n      channel: this._decorateChannelName(channel.name)\r\n    };\r\n    if (channel.waitForAuth) {\r\n      options.waitForAuth = true;\r\n      subscriptionOptions.waitForAuth = options.waitForAuth;\r\n    }\r\n    if (channel.data) {\r\n      subscriptionOptions.data = channel.data;\r\n    }\r\n\r\n    channel._pendingSubscriptionCid = this.transport.emit(\r\n      '#subscribe', subscriptionOptions, options,\r\n      function (err) {\r\n        delete channel._pendingSubscriptionCid;\r\n        if (err) {\r\n          self._triggerChannelSubscribeFail(err, channel, subscriptionOptions);\r\n        } else {\r\n          self._triggerChannelSubscribe(channel, subscriptionOptions);\r\n        }\r\n      }\r\n    );\r\n    SCEmitter.prototype.emit.call(this, 'subscribeRequest', channel.name, subscriptionOptions);\r\n  }\r\n};\r\n\r\nSCSocket.prototype.subscribe = function (channelName, options) {\r\n  var channel = this._channels[channelName];\r\n\r\n  if (!channel) {\r\n    channel = new SCChannel(channelName, this, options);\r\n    this._channels[channelName] = channel;\r\n  } else if (options) {\r\n    channel.setOptions(options);\r\n  }\r\n\r\n  if (channel.state == channel.UNSUBSCRIBED) {\r\n    channel.state = channel.PENDING;\r\n    this._trySubscribe(channel);\r\n  }\r\n\r\n  return channel;\r\n};\r\n\r\nSCSocket.prototype._triggerChannelUnsubscribe = function (channel, newState) {\r\n  var channelName = channel.name;\r\n  var oldState = channel.state;\r\n\r\n  if (newState) {\r\n    channel.state = newState;\r\n  } else {\r\n    channel.state = channel.UNSUBSCRIBED;\r\n  }\r\n  this._cancelPendingSubscribeCallback(channel);\r\n\r\n  if (oldState == channel.SUBSCRIBED) {\r\n    var stateChangeData = {\r\n      channel: channelName,\r\n      oldState: oldState,\r\n      newState: channel.state\r\n    };\r\n    channel.emit('subscribeStateChange', stateChangeData);\r\n    channel.emit('unsubscribe', channelName);\r\n    SCEmitter.prototype.emit.call(this, 'subscribeStateChange', stateChangeData);\r\n    SCEmitter.prototype.emit.call(this, 'unsubscribe', channelName);\r\n  }\r\n};\r\n\r\nSCSocket.prototype._tryUnsubscribe = function (channel) {\r\n  var self = this;\r\n\r\n  if (this.state == this.OPEN) {\r\n    var options = {\r\n      noTimeout: true\r\n    };\r\n    // If there is a pending subscribe action, cancel the callback\r\n    this._cancelPendingSubscribeCallback(channel);\r\n\r\n    // This operation cannot fail because the TCP protocol guarantees delivery\r\n    // so long as the connection remains open. If the connection closes,\r\n    // the server will automatically unsubscribe the socket and thus complete\r\n    // the operation on the server side.\r\n    var decoratedChannelName = this._decorateChannelName(channel.name);\r\n    this.transport.emit('#unsubscribe', decoratedChannelName, options);\r\n  }\r\n};\r\n\r\nSCSocket.prototype.unsubscribe = function (channelName) {\r\n\r\n  var channel = this._channels[channelName];\r\n\r\n  if (channel) {\r\n    if (channel.state != channel.UNSUBSCRIBED) {\r\n\r\n      this._triggerChannelUnsubscribe(channel);\r\n      this._tryUnsubscribe(channel);\r\n    }\r\n  }\r\n};\r\n\r\nSCSocket.prototype.channel = function (channelName, options) {\r\n  var currentChannel = this._channels[channelName];\r\n\r\n  if (!currentChannel) {\r\n    currentChannel = new SCChannel(channelName, this, options);\r\n    this._channels[channelName] = currentChannel;\r\n  }\r\n  return currentChannel;\r\n};\r\n\r\nSCSocket.prototype.destroyChannel = function (channelName) {\r\n  var channel = this._channels[channelName];\r\n  channel.unwatch();\r\n  channel.unsubscribe();\r\n  delete this._channels[channelName];\r\n};\r\n\r\nSCSocket.prototype.subscriptions = function (includePending) {\r\n  var subs = [];\r\n  var channel, includeChannel;\r\n  for (var channelName in this._channels) {\r\n    if (this._channels.hasOwnProperty(channelName)) {\r\n      channel = this._channels[channelName];\r\n\r\n      if (includePending) {\r\n        includeChannel = channel && (channel.state == channel.SUBSCRIBED ||\r\n          channel.state == channel.PENDING);\r\n      } else {\r\n        includeChannel = channel && channel.state == channel.SUBSCRIBED;\r\n      }\r\n\r\n      if (includeChannel) {\r\n        subs.push(channelName);\r\n      }\r\n    }\r\n  }\r\n  return subs;\r\n};\r\n\r\nSCSocket.prototype.isSubscribed = function (channelName, includePending) {\r\n  var channel = this._channels[channelName];\r\n  if (includePending) {\r\n    return !!channel && (channel.state == channel.SUBSCRIBED ||\r\n      channel.state == channel.PENDING);\r\n  }\r\n  return !!channel && channel.state == channel.SUBSCRIBED;\r\n};\r\n\r\nSCSocket.prototype.processPendingSubscriptions = function () {\r\n  var self = this;\r\n\r\n  this.pendingConnectCallback = false;\r\n\r\n  for (var i in this._channels) {\r\n    if (this._channels.hasOwnProperty(i)) {\r\n      (function (channel) {\r\n        if (channel.state == channel.PENDING) {\r\n          self._trySubscribe(channel);\r\n        }\r\n      })(this._channels[i]);\r\n    }\r\n  }\r\n};\r\n\r\nSCSocket.prototype.watch = function (channelName, handler) {\r\n  if (typeof handler != 'function') {\r\n    throw new InvalidArgumentsError('No handler function was provided');\r\n  }\r\n  this._channelEmitter.on(channelName, handler);\r\n};\r\n\r\nSCSocket.prototype.unwatch = function (channelName, handler) {\r\n  if (handler) {\r\n    this._channelEmitter.removeListener(channelName, handler);\r\n  } else {\r\n    this._channelEmitter.removeAllListeners(channelName);\r\n  }\r\n};\r\n\r\nSCSocket.prototype.watchers = function (channelName) {\r\n  return this._channelEmitter.listeners(channelName);\r\n};\r\n\r\nmodule.exports = SCSocket;\r\n"]}]