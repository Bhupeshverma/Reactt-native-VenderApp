["75c8c166660c9acd9c66f7c41d7622d0d6cf835c","1911fca7e823bac4ede7d6e6f9efbd2166d975cd",["react","react-native","react-native-material-dialog","react-redux","../actions","react-native-router-flux"],[87,184,243,303,343,396],{"version":3,"sources":["/home/ziddi/Desktop/venders/src/screens/SyncScreen.js"],"names":["SyncScreen","props","state","visible","ClearProducts","pop","flex","justifyContent","alignItems","response","handleSync","spinner","error","show","SHORT","mapStateToProps","syncReducer"],"mappings":";;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA,oIACVA,KADU;;AAEhB,UAAKC,KAAL,GAAW;AACTC,eAAQ;AADC,KAAX;AAFgB;AAKjB;;;;iCACW;AACV,WAAKF,KAAL,CAAWG,aAAX;AACA,qCAAQC,GAAR;AAED;;;6BACO;AACN,aACE;AAAA;AAAA,UAAM,OAAO,EAACC,MAAM,CAAP,EAAUC,gBAAgB,QAA1B,EAAoCC,YAAY,QAAhD,EAAb;AACG,aAAKP,KAAL,CAAWQ,QAAX,GAAqB;AAAA;AAAA;AAAO,eAAKC,UAAL;AAAP,SAArB,GAAuD,IAD1D;AAEG,aAAKT,KAAL,CAAWU,OAAX,GAAqB,gEAAmB,MAAK,OAAxB,GAArB,GAAyD,IAF5D;AAGG,aAAKV,KAAL,CAAWW,KAAX,GAAmB,0BAAaC,IAAb,CAAkB,kBAAlB,EAAsC,0BAAaC,KAAnD,CAAnB,GAA8E;AAHjF,OADF;AAOD;;;;;AAEH,SAAUC,eAAV,CAA0Bb,KAA1B,EAAgC;AAC5B,SAAO;AACHS,aAAST,MAAMc,WAAN,CAAkBL,OADxB;AAEHF,cAAUP,MAAMc,WAAN,CAAkBP,QAFzB;AAGHG,WAAOV,MAAMc,WAAN,CAAkBJ;AAHtB,GAAP;AAKH;kBACc,yBAAQG,eAAR,EAAwB,EAACX,qCAAD,EAAxB,EAAyCJ,UAAzC,C","sourcesContent":["import React, {Component} from 'react';\nimport {View, Text, ActivityIndicator, ToastAndroid} from 'react-native';\nimport { MaterialDialog } from 'react-native-material-dialog';\nimport { connect } from 'react-redux';\nimport {  ClearProducts} from '../actions';\nimport {Actions} from 'react-native-router-flux'\n\nclass SyncScreen extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      visible:true\n    }\n  }\n  handleSync(){\n    this.props.ClearProducts()\n    Actions.pop()\n\n  }\n  render(){\n    return(\n      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n        {this.props.response? <View>{this.handleSync()}</View> :null}\n        {this.props.spinner ? <ActivityIndicator size=\"large\"/> : null}\n        {this.props.error ? ToastAndroid.show(\"ERROR IN SYNCING\", ToastAndroid.SHORT): null }\n      </View>\n    )\n  }\n}\nfunction  mapStateToProps(state){\n    return {\n        spinner: state.syncReducer.spinner,\n        response: state.syncReducer.response,\n        error: state.syncReducer.error\n    }\n}\nexport default connect(mapStateToProps,{ClearProducts})(SyncScreen);\n"]}]