Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PageIndicators = undefined;

var _class,
    _temp,
    _jsxFileName = '/home/ziddi/Desktop/venders/node_modules/@shoutem/ui/components/PageIndicators.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _theme = require('@shoutem/theme');

var _View = require('./View');

var PageIndicators = (_temp = _class = function (_Component) {
  babelHelpers.inherits(PageIndicators, _Component);

  function PageIndicators(props) {
    babelHelpers.classCallCheck(this, PageIndicators);

    var _this = babelHelpers.possibleConstructorReturn(this, (PageIndicators.__proto__ || Object.getPrototypeOf(PageIndicators)).call(this, props));

    _this.renderPageIndicator = _this.renderPageIndicator.bind(_this);
    return _this;
  }

  babelHelpers.createClass(PageIndicators, [{
    key: 'renderPageIndicator',
    value: function renderPageIndicator(index, count, activeIndex, indicatorStyle) {
      var style = this.props.style;

      return _react2.default.createElement(
        _View.View,
        {
          style: style.indicatorContainer,
          key: 'pageIndicator' + index,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 38
          }
        },
        _react2.default.createElement(_View.View, { styleName: indicatorStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 42
          }
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          count = _props.count,
          maxCount = _props.maxCount,
          activeIndex = _props.activeIndex;


      var pageIndicators = [];
      var maxIndicatorsCount = Math.min(count, maxCount);

      for (var i = 0; i < maxIndicatorsCount; i += 1) {
        var indicatorStyle = '';

        if (activeIndex === i) {
          indicatorStyle = 'selected';
        } else if (activeIndex >= i && maxIndicatorsCount - 1 === i) {
          indicatorStyle = 'selected';
        }

        pageIndicators.push(this.renderPageIndicator(i, maxIndicatorsCount, activeIndex, indicatorStyle));
      }

      return _react2.default.createElement(
        _View.View,
        { style: style.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 72
          }
        },
        pageIndicators
      );
    }
  }]);
  return PageIndicators;
}(_react.Component), _class.propTypes = {
  activeIndex: _react.PropTypes.number,

  count: _react.PropTypes.number,

  maxCount: _react.PropTypes.number,

  style: _react.PropTypes.object
}, _class.defaultProps = {
  maxCount: 10
}, _temp);


var StyledPageIndicators = (0, _theme.connectStyle)('shoutem.ui.PageIndicators')(PageIndicators);

exports.PageIndicators = StyledPageIndicators;