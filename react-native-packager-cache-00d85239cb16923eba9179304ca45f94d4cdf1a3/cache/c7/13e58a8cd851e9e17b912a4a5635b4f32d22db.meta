["1a161b7bf85605e67e314d2eadbd4d067477e904","78fb41c718168e92f9f5f8de688df01ec232aae1",["react","react-native"],[116,213],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-material-cards/CardAction.js"],"names":["CardAction","returnChildren","props","children","inColumn","Children","map","child","type","name","cloneElement","newStyle","style","directionStyle","styles","cardActionInColumn","cardActionInRow","seperator","isDark","seperatorAdd","renderChildren","create","flexDirection","alignItems","justifyContent","alignSelf","borderTopColor","borderTopWidth"],"mappings":";;;;;AAAA;;;;AACA;;IAKqBA,U;;;;;;;;;;qCAEF;AACf,UAAIC,iBAAiB,KAAKC,KAAL,CAAWC,QAAhC;AACA,UAAG,KAAKD,KAAL,CAAWE,QAAX,KAAsB,IAAzB,EAA+B;AAC7BH,yBAAiB,gBAAMI,QAAN,CAAeC,GAAf,CAAmBL,cAAnB,EAAmC,UAACM,KAAD,EAAW;AAC7D,cAAGA,MAAMC,IAAN,CAAWC,IAAX,KAAkB,YAArB,EAAmC;AACjC,mBAAO,gBAAMC,YAAN,CAAmBH,KAAnB,EAA0B;AAC/BH,wBAAU;AADqB,aAA1B,CAAP;AAGD,WAJD,MAKK;AACH,mBAAOG,KAAP;AACD;AACF,SATgB,CAAjB;AAUD;AACD,aAAON,cAAP;AACD;;;6BAES;AACR,UAAMU,WAAW,KAAKT,KAAL,CAAWU,KAAX,IAAoB,EAArC;AACA,UAAIC,iBAAiB,KAAKX,KAAL,CAAWE,QAAX,KAAsB,IAAtB,GAA6BU,OAAOC,kBAApC,GAAyDD,OAAOE,eAArF;AACA,aACE;AAAA;AAAA,UAAM,OAAQ,KAAKd,KAAL,CAAWe,SAAZ,IAAyB,CAAC,KAAKf,KAAL,CAAWgB,MAArC,GAA+C,CAACL,cAAD,EAAiBC,OAAOK,YAAxB,EAAsCR,QAAtC,CAA/C,GAAiG,CAACE,cAAD,EAAiBF,QAAjB,CAA9G;AACG,aAAKS,cAAL;AADH,OADF;AAKD;;;;;kBA3BkBpB,U;;;AA+BrB,IAAMc,SAAS,wBAAWO,MAAX,CAAkB;AAC/BL,mBAAiB;AACfM,mBAAe,KADA;AAEfC,gBAAY,QAFG;AAGfC,oBAAgB,YAHD;AAIfC,eAAW;AAJI,GADc;AAO/BV,sBAAoB;AAClBO,mBAAe,QADG;AAElBC,gBAAY,SAFM;AAGlBC,oBAAgB,YAHE;AAIlBC,eAAW;AAJO,GAPW;AAa/BN,gBAAc;AACZO,oBAAgB,SADJ;AAEZC,oBAAgB;AAFJ;AAbiB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {\n  StyleSheet,\n  View\n} from 'react-native';\n\nexport default class CardAction extends Component {\n\n  renderChildren() {\n    let returnChildren = this.props.children;\n    if(this.props.inColumn===true) {\n      returnChildren = React.Children.map(returnChildren, (child) => {\n        if(child.type.name===\"CardButton\") {\n          return React.cloneElement(child, {\n            inColumn: true\n          });\n        }\n        else {\n          return child;\n        }\n      })\n    }\n    return returnChildren;\n  }\n\n  render () {\n    const newStyle = this.props.style || {};\n    let directionStyle = this.props.inColumn===true ? styles.cardActionInColumn : styles.cardActionInRow;\n    return (\n      <View style={(this.props.seperator)&&(!this.props.isDark) ? [directionStyle, styles.seperatorAdd, newStyle] : [directionStyle, newStyle]}>\n        {this.renderChildren()}\n      </View>\n    );\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  cardActionInRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    alignSelf: 'stretch'\n  },\n  cardActionInColumn: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'flex-start',\n    alignSelf: 'stretch'\n  },\n  seperatorAdd: {\n    borderTopColor: '#E9E9E9',\n    borderTopWidth: 1\n  }\n});"]}]