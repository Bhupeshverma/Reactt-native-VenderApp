Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var CardContent = function (_Component) {
  babelHelpers.inherits(CardContent, _Component);

  function CardContent() {
    babelHelpers.classCallCheck(this, CardContent);
    return babelHelpers.possibleConstructorReturn(this, (CardContent.__proto__ || Object.getPrototypeOf(CardContent)).apply(this, arguments));
  }

  babelHelpers.createClass(CardContent, [{
    key: 'render',
    value: function render() {
      var newStyle = this.props.style || {};
      return _react2.default.createElement(
        _reactNative.View,
        { style: [styles.cardContent, newStyle] },
        this.props.avatarSource !== undefined && _react2.default.createElement(_reactNative.Image, { source: this.props.avatarSource, resizeMode: 'stretch', style: styles.avatarStyle }),
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.CardContentTextCont },
          this.props.text !== undefined ? _react2.default.createElement(
            _reactNative.Text,
            { style: this.props.isDark ? [styles.contentText, styles.lightText] : styles.contentText },
            this.props.text
          ) : this.props.children
        )
      );
    }
  }]);
  return CardContent;
}(_react.Component);

exports.default = CardContent;


var styles = _reactNative.StyleSheet.create({
  darkText: {
    color: 'rgba(0 ,0 ,0 , 0.87)'
  },
  lightText: {
    color: 'rgba(255 ,255 ,255 , 0.87)'
  },
  cardContent: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'flex-start',
    paddingRight: 16,
    paddingLeft: 16,
    paddingBottom: 16
  },
  CardContentTextCont: {
    flex: 1,
    flexDirection: 'column'
  },
  contentText: {
    fontSize: 14,
    color: 'rgba(0 ,0 ,0 , 0.54)'
  },
  avatarStyle: {
    width: 40,
    height: 40,
    borderRadius: 150,
    marginRight: 16
  }
});