["f877c07490795554282b8359f66abfb6f2275cec","338709e1f3cfdf56e9dfeb370e93be3a9719ae1c",["react","react-native","react-native-gesture-responder","react-native-scroller","./TransformUtils"],[151,248,380,451,595],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-view-transformer/library/transform/ViewTransformer.js"],"names":["ViewTransformer","props","state","scale","translateX","translateY","animator","Value","width","height","pageX","pageY","_viewPortRect","cancelAnimation","bind","contentRect","transformedContentRect","animate","scroller","dx","dy","isFinished","animateBounce","updateTransform","set","rect","viewPortRect","copy","contentAspectRatio","currentTransform","gestureResponder","onStartShouldSetResponder","evt","gestureState","onMoveShouldSetResponderCapture","onResponderMove","onResponderGrant","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onResponderSingleTapConfirmed","onSingleTapConfirmed","prevProps","prevState","onViewTransformed","enableTransform","onLayout","flex","transform","children","e","nativeEvent","layout","setState","measureLayout","handle","findNodeHandle","refs","UIManager","measure","x","y","onTransformStart","responderGranted","moveX","previousMoveX","moveY","previousMoveY","enableResistance","d","applyResistance","enableTranslate","previousPinch","pinch","enableScale","scaleBy","pivotX","pivotY","Math","abs","handled","onTransformGestureReleased","doubleTapUp","x0","y0","performDoubleTapUp","performFling","vx","vy","startX","startY","maxX","minX","maxY","minY","availablePanDistance","left","maxOverScrollDistance","right","top","bottom","fling","console","log","curScale","maxScale","centerX","centerY","stopAnimation","targetRect","durationInMillis","duration","fromRect","equals","removeAllListeners","setValue","addListener","progress","value","timing","toValue","easing","inOut","ease","start","minScale","Component","Rect","getTransform","propTypes","PropTypes","bool","number","func","defaultProps"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AAOA;;AACA;;;;AACA;;IAEqBA,e;;;AAKnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,8IACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AAEXC,aAAO,CAFI;AAGXC,kBAAY,CAHD;AAIXC,kBAAY,CAJD;;AAOXC,gBAAU,IAAI,sBAASC,KAAb,CAAmB,CAAnB,CAPC;;AAUXC,aAAO,CAVI;AAWXC,cAAQ,CAXG;AAYXC,aAAO,CAZI;AAaXC,aAAO;AAbI,KAAb;AAeA,UAAKC,aAAL,GAAqB,0BAArB;;AAEA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AACA,UAAKE,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BF,IAA5B,OAA9B;AACA,UAAKG,OAAL,GAAe,MAAKA,OAAL,CAAaH,IAAb,OAAf;;AAEA,UAAKI,QAAL,GAAgB,kCAAa,IAAb,EAAmB,UAACC,EAAD,EAAKC,EAAL,EAASF,QAAT,EAAqB;AACtD,UAAIC,OAAO,CAAP,IAAYC,OAAO,CAAnB,IAAwBF,SAASG,UAAT,EAA5B,EAAmD;AACjD,cAAKC,aAAL;AACA;AACD;;AAED,YAAKC,eAAL,CAAqB;AACnBnB,oBAAY,MAAKF,KAAL,CAAWE,UAAX,GAAwBe,KAAK,MAAKjB,KAAL,CAAWC,KADjC;AAEnBE,oBAAY,MAAKH,KAAL,CAAWG,UAAX,GAAwBe,KAAK,MAAKlB,KAAL,CAAWC;AAFjC,OAArB;AAID,KAVe,CAAhB;AAxBiB;AAmClB;;;;mCAEc;AACb,WAAKS,aAAL,CAAmBY,GAAnB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAAKtB,KAAL,CAAWM,KAAxC,EAA+C,KAAKN,KAAL,CAAWO,MAA1D;AACA,aAAO,KAAKG,aAAZ;AACD;;;kCAEa;AACZ,UAAIa,OAAO,KAAKC,YAAL,GAAoBC,IAApB,EAAX;AACA,UAAI,KAAK1B,KAAL,CAAW2B,kBAAX,IAAiC,KAAK3B,KAAL,CAAW2B,kBAAX,GAAgC,CAArE,EAAwE;AACtEH,eAAO,mCAAc,KAAKxB,KAAL,CAAW2B,kBAAzB,EAA6CH,IAA7C,CAAP;AACD;AACD,aAAOA,IAAP;AACD;;;6CAEwB;AACvB,UAAIA,OAAO,qCAAgB,KAAKC,YAAL,EAAhB,EAAqC,KAAKG,gBAAL,EAArC,CAAX;AACA,UAAI,KAAK5B,KAAL,CAAW2B,kBAAX,IAAiC,KAAK3B,KAAL,CAAW2B,kBAAX,GAAgC,CAArE,EAAwE;AACtEH,eAAO,mCAAc,KAAKxB,KAAL,CAAW2B,kBAAzB,EAA6CH,IAA7C,CAAP;AACD;AACD,aAAOA,IAAP;AACD;;;uCAEkB;AACjB,aAAO,8BAAc,KAAKvB,KAAL,CAAWC,KAAzB,EAAgC,KAAKD,KAAL,CAAWE,UAA3C,EAAuD,KAAKF,KAAL,CAAWG,UAAlE,CAAP;AACD;;;yCAEoB;AAAA;;AACnB,WAAKyB,gBAAL,GAAwB,kDAAgB;AACtCC,mCAA2B,mCAACC,GAAD,EAAMC,YAAN;AAAA,iBAAuB,IAAvB;AAAA,SADW;AAEtCC,yCAAiC,yCAACF,GAAD,EAAMC,YAAN;AAAA,iBAAuB,IAAvB;AAAA,SAFK;;AAItCE,yBAAiB,KAAKA,eAAL,CAAqBrB,IAArB,CAA0B,IAA1B,CAJqB;AAKtCsB,0BAAkB,KAAKA,gBAAL,CAAsBtB,IAAtB,CAA2B,IAA3B,CALoB;AAMtCuB,4BAAoB,KAAKA,kBAAL,CAAwBvB,IAAxB,CAA6B,IAA7B,CANkB;AAOtCwB,8BAAsB,KAAKD,kBAAL,CAAwBvB,IAAxB,CAA6B,IAA7B,CAPgB;AAQtCyB,uCAA+B,uCAACP,GAAD,EAAMC,YAAN;AAAA,iBAAuB,KAAvB;AAAA,SARO;AAStCO,uCAA+B,uCAACR,GAAD,EAAMC,YAAN,EAAuB;AACpD,iBAAKhC,KAAL,CAAWwC,oBAAX,IAAmC,OAAKxC,KAAL,CAAWwC,oBAAX,EAAnC;AACD;AAXqC,OAAhB,CAAxB;AAaD;;;uCAEkBC,S,EAAWC,S,EAAW;AACvC,WAAK1C,KAAL,CAAW2C,iBAAX,IAAgC,KAAK3C,KAAL,CAAW2C,iBAAX,CAA6B;AAC3DzC,eAAO,KAAKD,KAAL,CAAWC,KADyC;AAE3DC,oBAAY,KAAKF,KAAL,CAAWE,UAFoC;AAG3DC,oBAAY,KAAKH,KAAL,CAAWG;AAHoC,OAA7B,CAAhC;AAKD;;;2CAEsB;AACrB,WAAKQ,eAAL;AACD;;;6BAEQ;AACP,UAAIiB,mBAAmB,KAAKA,gBAA5B;AACA,UAAI,CAAC,KAAK7B,KAAL,CAAW4C,eAAhB,EAAiC;AAC/Bf,2BAAmB,EAAnB;AACD;;AAED,aACE;AAAA;AAAA,iCACM,KAAK7B,KADX,EAEM6B,gBAFN;AAGE,eAAK,cAHP;AAIE,oBAAU,KAAKgB,QAAL,CAAchC,IAAd,CAAmB,IAAnB,CAJZ;AAKE;AAAA;AAAA;AACE,mBAAO;AACLiC,oBAAM,CADD;AAELC,yBAAW,CACL,EAAC7C,OAAO,KAAKD,KAAL,CAAWC,KAAnB,EADK,EAEL,EAACC,YAAY,KAAKF,KAAL,CAAWE,UAAxB,EAFK,EAGL,EAACC,YAAY,KAAKH,KAAL,CAAWG,UAAxB,EAHK;AAFN,aADT;AASG,eAAKJ,KAAL,CAAWgD;AATd;AALF,OADF;AAmBD;;;6BAEQC,C,EAAG;AAAA,kCACcA,EAAEC,WAAF,CAAcC,MAD5B;AAAA,UACH5C,KADG,yBACHA,KADG;AAAA,UACIC,MADJ,yBACIA,MADJ;;AAEV,UAAGD,UAAU,KAAKN,KAAL,CAAWM,KAArB,IAA8BC,WAAW,KAAKP,KAAL,CAAWO,MAAvD,EAA+D;AAC7D,aAAK4C,QAAL,CAAc,EAAC7C,YAAD,EAAQC,cAAR,EAAd;AACD;AACD,WAAK6C,aAAL;;AAEA,WAAKrD,KAAL,CAAW6C,QAAX,IAAuB,KAAK7C,KAAL,CAAW6C,QAAX,CAAoBI,CAApB,CAAvB;AACD;;;oCAEe;AAAA;;AACd,UAAIK,SAAS,sBAAYC,cAAZ,CAA2B,KAAKC,IAAL,CAAU,cAAV,CAA3B,CAAb;AACA,iCAAcC,SAAd,CAAwBC,OAAxB,CAAgCJ,MAAhC,EAAyC,UAACK,CAAD,EAAIC,CAAJ,EAAOrD,KAAP,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,KAA7B,EAAuC;AAC9E,YAAG,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,OAAOC,KAAP,KAAiB,QAAjD,EAA2D;AACzD,cAAG,OAAKT,KAAL,CAAWQ,KAAX,KAAqBA,KAArB,IAA8B,OAAKR,KAAL,CAAWS,KAAX,KAAqBA,KAAtD,EAA6D;AAC3D,mBAAK0C,QAAL,CAAc;AACZ3C,qBAAOA,KADK;AAEZC,qBAAOA;AAFK,aAAd;AAID;AACF;AAEF,OAVuC,CAUrCG,IAVqC,CAUhC,IAVgC,CAAxC;AAWD;;;qCAEgBkB,G,EAAKC,Y,EAAc;AAClC,WAAKhC,KAAL,CAAW6D,gBAAX,IAA+B,KAAK7D,KAAL,CAAW6D,gBAAX,EAA/B;AACA,WAAKT,QAAL,CAAc,EAACU,kBAAkB,IAAnB,EAAd;AACA,WAAKT,aAAL;AACD;;;oCAEetB,G,EAAKC,Y,EAAc;AACjC,WAAKpB,eAAL;;AAEA,UAAIM,KAAKc,aAAa+B,KAAb,GAAqB/B,aAAagC,aAA3C;AACA,UAAI7C,KAAKa,aAAaiC,KAAb,GAAqBjC,aAAakC,aAA3C;AACA,UAAI,KAAKlE,KAAL,CAAWmE,gBAAf,EAAiC;AAC/B,YAAIC,IAAI,KAAKC,eAAL,CAAqBnD,EAArB,EAAyBC,EAAzB,CAAR;AACAD,aAAKkD,EAAElD,EAAP;AACAC,aAAKiD,EAAEjD,EAAP;AACD;;AAED,UAAG,CAAC,KAAKnB,KAAL,CAAWsE,eAAf,EAAgC;AAC9BpD,aAAKC,KAAK,CAAV;AACD;;AAED,UAAI4B,YAAY,EAAhB;AACA,UAAIf,aAAauC,aAAb,IAA8BvC,aAAawC,KAA3C,IAAoD,KAAKxE,KAAL,CAAWyE,WAAnE,EAAgF;AAC9E,YAAIC,UAAU1C,aAAawC,KAAb,GAAqBxC,aAAauC,aAAhD;AACA,YAAII,SAAS3C,aAAa+B,KAAb,GAAqB,KAAK9D,KAAL,CAAWQ,KAA7C;AACA,YAAImE,SAAS5C,aAAaiC,KAAb,GAAqB,KAAKhE,KAAL,CAAWS,KAA7C;;AAGA,YAAIc,OAAO,qCAAgB,qCAAgB,KAAKV,WAAL,EAAhB,EAAoC,KAAKc,gBAAL,EAApC,CAAhB,EAA8E,8BACvF8C,OADuF,EAC9ExD,EAD8E,EAC1EC,EAD0E,EAEvF;AACEwC,aAAGgB,MADL;AAEEf,aAAGgB;AAFL,SAFuF,CAA9E,CAAX;AAOA7B,oBAAY,kCAAa,KAAKjC,WAAL,EAAb,EAAiCU,IAAjC,CAAZ;AACD,OAdD,MAcO;AACL,YAAIqD,KAAKC,GAAL,CAAS5D,EAAT,IAAe,IAAI2D,KAAKC,GAAL,CAAS3D,EAAT,CAAvB,EAAqC;AACnCA,eAAK,CAAL;AACD,SAFD,MAEO,IAAI0D,KAAKC,GAAL,CAAS3D,EAAT,IAAe,IAAI0D,KAAKC,GAAL,CAAS5D,EAAT,CAAvB,EAAqC;AAC1CA,eAAK,CAAL;AACD;AACD6B,kBAAU5C,UAAV,GAAuB,KAAKF,KAAL,CAAWE,UAAX,GAAwBe,KAAK,KAAKjB,KAAL,CAAWC,KAA/D;AACA6C,kBAAU3C,UAAV,GAAuB,KAAKH,KAAL,CAAWG,UAAX,GAAwBe,KAAK,KAAKlB,KAAL,CAAWC,KAA/D;AACD;;AAED,WAAKoB,eAAL,CAAqByB,SAArB;AACA,aAAO,IAAP;AACD;;;uCAEkBhB,G,EAAKC,Y,EAAc;AACpC,UAAI+C,UAAU,KAAK/E,KAAL,CAAWgF,0BAAX,IAAyC,KAAKhF,KAAL,CAAWgF,0BAAX,CAAsC;AACzF9E,eAAO,KAAKD,KAAL,CAAWC,KADuE;AAEzFC,oBAAY,KAAKF,KAAL,CAAWE,UAFkE;AAGzFC,oBAAY,KAAKH,KAAL,CAAWG;AAHkE,OAAtC,CAAvD;AAKA,UAAI2E,OAAJ,EAAa;AACX;AACD;;AAGD,UAAI/C,aAAaiD,WAAjB,EAA8B;AAC5B,YAAI,CAAC,KAAKjF,KAAL,CAAWyE,WAAhB,EAA6B;AAC3B,eAAKpD,aAAL;AACA;AACD;AACD,YAAIsD,SAAS,CAAb;AAAA,YAAgBC,SAAS,CAAzB;AACA,YAAI5C,aAAad,EAAb,IAAmBc,aAAab,EAApC,EAAwC;AACtCwD,mBAAS3C,aAAa+B,KAAb,GAAqB,KAAK9D,KAAL,CAAWQ,KAAzC;AACAmE,mBAAS5C,aAAaiC,KAAb,GAAqB,KAAKhE,KAAL,CAAWS,KAAzC;AACD,SAHD,MAGO;AACLiE,mBAAS3C,aAAakD,EAAb,GAAkB,KAAKjF,KAAL,CAAWQ,KAAtC;AACAmE,mBAAS5C,aAAamD,EAAb,GAAkB,KAAKlF,KAAL,CAAWS,KAAtC;AACD;;AAED,aAAK0E,kBAAL,CAAwBT,MAAxB,EAAgCC,MAAhC;AACD,OAfD,MAeO;AACL,YAAG,KAAK5E,KAAL,CAAWsE,eAAd,EAA+B;AAC7B,eAAKe,YAAL,CAAkBrD,aAAasD,EAA/B,EAAmCtD,aAAauD,EAAhD;AACD,SAFD,MAEO;AACL,eAAKlE,aAAL;AACD;AACF;AACF;;;iCAOYiE,E,EAAIC,E,EAAI;AACnB,UAAIC,SAAS,CAAb;AACA,UAAIC,SAAS,CAAb;AACA,UAAIC,aAAJ;AAAA,UAAUC,aAAV;AAAA,UAAgBC,aAAhB;AAAA,UAAsBC,aAAtB;AACA,UAAIC,uBAAuB,6CAAwB,KAAK/E,sBAAL,EAAxB,EAAuD,KAAKU,YAAL,EAAvD,CAA3B;AACA,UAAI6D,KAAK,CAAT,EAAY;AACVK,eAAO,CAAP;AACA,YAAIG,qBAAqBC,IAArB,GAA4B,CAAhC,EAAmC;AACjCL,iBAAOI,qBAAqBC,IAArB,GAA4B,KAAK/F,KAAL,CAAWgG,qBAA9C;AACD,SAFD,MAEO;AACLN,iBAAO,CAAP;AACD;AACF,OAPD,MAOO;AACLA,eAAO,CAAP;AACA,YAAII,qBAAqBG,KAArB,GAA6B,CAAjC,EAAoC;AAClCN,iBAAO,CAACG,qBAAqBG,KAAtB,GAA8B,KAAKjG,KAAL,CAAWgG,qBAAhD;AACD,SAFD,MAEO;AACLL,iBAAO,CAAP;AACD;AACF;AACD,UAAIJ,KAAK,CAAT,EAAY;AACVM,eAAO,CAAP;AACA,YAAIC,qBAAqBI,GAArB,GAA2B,CAA/B,EAAkC;AAChCN,iBAAOE,qBAAqBI,GAArB,GAA2B,KAAKlG,KAAL,CAAWgG,qBAA7C;AACD,SAFD,MAEO;AACLJ,iBAAO,CAAP;AACD;AACF,OAPD,MAOO;AACLA,eAAO,CAAP;AACA,YAAIE,qBAAqBK,MAArB,GAA8B,CAAlC,EAAqC;AACnCN,iBAAO,CAACC,qBAAqBK,MAAtB,GAA+B,KAAKnG,KAAL,CAAWgG,qBAAjD;AACD,SAFD,MAEO;AACLH,iBAAO,CAAP;AACD;AACF;;AAEDP,YAAM,IAAN;AACAC,YAAM,IAAN;AACA,UAAIV,KAAKC,GAAL,CAASQ,EAAT,IAAe,IAAIT,KAAKC,GAAL,CAASS,EAAT,CAAvB,EAAqC;AACnCA,aAAK,CAAL;AACD,OAFD,MAEO,IAAIV,KAAKC,GAAL,CAASS,EAAT,IAAe,IAAIV,KAAKC,GAAL,CAASQ,EAAT,CAAvB,EAAqC;AAC1CA,aAAK,CAAL;AACD;;AAED,WAAKrE,QAAL,CAAcmF,KAAd,CAAoBZ,MAApB,EAA4BC,MAA5B,EAAoCH,EAApC,EAAwCC,EAAxC,EAA4CI,IAA5C,EAAkDD,IAAlD,EAAwDG,IAAxD,EAA8DD,IAA9D;AACD;;;uCAEkBjB,M,EAAQC,M,EAAQ;AACjCyB,cAAQC,GAAR,CAAY,gCAAgC3B,MAAhC,GAAyC,IAAzC,GAAgDC,MAA5D;AACA,UAAI2B,WAAW,KAAKtG,KAAL,CAAWC,KAA1B;AACA,UAAIwE,gBAAJ;AACA,UAAI6B,WAAW,CAAC,IAAI,KAAKvG,KAAL,CAAWwG,QAAhB,IAA4B,CAA3C,EAA8C;AAC5C9B,kBAAU,IAAI6B,QAAd;AACD,OAFD,MAEO;AACL7B,kBAAU,KAAK1E,KAAL,CAAWwG,QAAX,GAAsBD,QAAhC;AACD;;AAED,UAAI/E,OAAO,qCAAgB,KAAKT,sBAAL,EAAhB,EAA+C,8BACxD2D,OADwD,EAC/C,CAD+C,EAC5C,CAD4C,EAExD;AACEf,WAAGgB,MADL;AAEEf,WAAGgB;AAFL,OAFwD,CAA/C,CAAX;AAOApD,aAAO,qCAAgBA,IAAhB,EAAsB,8BAAc,CAAd,EAAiB,KAAKC,YAAL,GAAoBgF,OAApB,KAAgC9B,MAAjD,EAAyD,KAAKlD,YAAL,GAAoBiF,OAApB,KAAgC9B,MAAzF,CAAtB,CAAP;AACApD,aAAO,iCAAYA,IAAZ,EAAkB,KAAKC,YAAL,EAAlB,CAAP;;AAEA,WAAKT,OAAL,CAAaQ,IAAb;AACD;;;oCAEeN,E,EAAIC,E,EAAI;AACtB,UAAI2E,uBAAuB,6CAAwB,KAAK/E,sBAAL,EAAxB,EAAuD,KAAKU,YAAL,EAAvD,CAA3B;;AAEA,UAAKP,KAAK,CAAL,IAAU4E,qBAAqBC,IAArB,GAA4B,CAAvC,IAED7E,KAAK,CAAL,IAAU4E,qBAAqBG,KAArB,GAA6B,CAF1C,EAE8C;AAC5C/E,cAAM,CAAN;AACD;AACD,UAAKC,KAAK,CAAL,IAAU2E,qBAAqBI,GAArB,GAA2B,CAAtC,IAED/E,KAAK,CAAL,IAAU2E,qBAAqBK,MAArB,GAA8B,CAF3C,EAE+C;AAC7ChF,cAAM,CAAN;AACD;AACD,aAAO;AACLD,cADK,EACDC;AADC,OAAP;AAGD;;;sCAEiB;AAChB,WAAKlB,KAAL,CAAWI,QAAX,CAAoBsG,aAApB;AACD;;;4BAEOC,U,EAAYC,gB,EAAkB;AAAA;;AACpC,UAAIC,WAAW,GAAf;AACA,UAAID,gBAAJ,EAAsB;AACpBC,mBAAWD,gBAAX;AACD;;AAED,UAAIE,WAAW,KAAKhG,sBAAL,EAAf;AACA,UAAIgG,SAASC,MAAT,CAAgBJ,UAAhB,CAAJ,EAAiC;AAC/BP,gBAAQC,GAAR,CAAY,sCAAZ;AACA;AACD;;AAED,WAAKrG,KAAL,CAAWI,QAAX,CAAoB4G,kBAApB;AACA,WAAKhH,KAAL,CAAWI,QAAX,CAAoB6G,QAApB,CAA6B,CAA7B;AACA,WAAKjH,KAAL,CAAWI,QAAX,CAAoB8G,WAApB,CAAgC,UAAClH,KAAD,EAAU;AACxC,YAAImH,WAAWnH,MAAMoH,KAArB;;AAEA,YAAItB,OAAOgB,SAAShB,IAAT,GAAgB,CAACa,WAAWb,IAAX,GAAkBgB,SAAShB,IAA5B,IAAoCqB,QAA/D;AACA,YAAInB,QAAQc,SAASd,KAAT,GAAiB,CAACW,WAAWX,KAAX,GAAmBc,SAASd,KAA7B,IAAsCmB,QAAnE;AACA,YAAIlB,MAAMa,SAASb,GAAT,GAAe,CAACU,WAAWV,GAAX,GAAiBa,SAASb,GAA3B,IAAkCkB,QAA3D;AACA,YAAIjB,SAASY,SAASZ,MAAT,GAAkB,CAACS,WAAWT,MAAX,GAAoBY,SAASZ,MAA9B,IAAwCiB,QAAvE;;AAEA,YAAIrE,YAAY,kCAAa,OAAKjC,WAAL,EAAb,EAAiC,yBAASiF,IAAT,EAAeG,GAAf,EAAoBD,KAApB,EAA2BE,MAA3B,CAAjC,CAAhB;AACA,eAAK7E,eAAL,CAAqByB,SAArB;AACD,OAVD;;AAYA,4BAASuE,MAAT,CAAgB,KAAKrH,KAAL,CAAWI,QAA3B,EAAqC;AACnCkH,iBAAS,CAD0B;AAEnCT,kBAAUA,QAFyB;AAGnCU,gBAAQ,oBAAOC,KAAP,CAAa,oBAAOC,IAApB;AAH2B,OAArC,EAIGC,KAJH;AAKD;;;oCAEe;AACd,UAAIpB,WAAW,KAAKtG,KAAL,CAAWC,KAA1B;AACA,UAAI0H,WAAW,CAAf;AACA,UAAIpB,WAAW,KAAKxG,KAAL,CAAWwG,QAA1B;AACA,UAAI9B,UAAU,CAAd;AACA,UAAI6B,WAAWC,QAAf,EAAyB;AACvB9B,kBAAU8B,WAAWD,QAArB;AACD,OAFD,MAEO,IAAIA,WAAWqB,QAAf,EAAyB;AAC9BlD,kBAAUkD,WAAWrB,QAArB;AACD;;AAED,UAAI/E,OAAO,qCAAgB,KAAKT,sBAAL,EAAhB,EAA+C,8BACxD2D,OADwD,EAExD,CAFwD,EAGxD,CAHwD,EAIxD;AACEf,WAAG,KAAKlC,YAAL,GAAoBgF,OAApB,EADL;AAEE7C,WAAG,KAAKnC,YAAL,GAAoBiF,OAApB;AAFL,OAJwD,CAA/C,CAAX;AASAlF,aAAO,iCAAYA,IAAZ,EAAkB,KAAKC,YAAL,EAAlB,CAAP;AACA,WAAKT,OAAL,CAAaQ,IAAb;AACD;;;oCAOeuB,S,EAAW;AACzB,WAAKK,QAAL,CAAcL,SAAd;AACD;;;yCAGoBA,S,EAAW;AAC9B,WAAKK,QAAL,CAAcL,SAAd;AACD;;;iDAE4B;AAC3B,aAAO,6CAAwB,KAAKhC,sBAAL,EAAxB,EAAuD,KAAKU,YAAL,EAAvD,CAAP;AACD;;;EAlZ0C,gBAAMoG,S,UAE1CC,I,gCACAC,Y;kBAHYhI,e;;;AAqZrBA,gBAAgBiI,SAAhB,GAA4B;AAI1BpF,mBAAiB,gBAAMqF,SAAN,CAAgBC,IAJP;;AAS1BzD,eAAa,gBAAMwD,SAAN,CAAgBC,IATH;;AAc1B5D,mBAAiB,gBAAM2D,SAAN,CAAgBC,IAdP;;AAmB1BlC,yBAAuB,gBAAMiC,SAAN,CAAgBE,MAnBb;;AAqB1B3B,YAAU,gBAAMyB,SAAN,CAAgBE,MArBA;AAsB1BxG,sBAAoB,gBAAMsG,SAAN,CAAgBE,MAtBV;;AA2B1BhE,oBAAkB,gBAAM8D,SAAN,CAAgBC,IA3BR;;AA6B1BvF,qBAAmB,gBAAMsF,SAAN,CAAgBG,IA7BT;;AA+B1BpD,8BAA4B,gBAAMiD,SAAN,CAAgBG,IA/BlB;;AAiC1B5F,wBAAsB,gBAAMyF,SAAN,CAAgBG;AAjCZ,CAA5B;AAmCArI,gBAAgBsI,YAAhB,GAA+B;AAC7BrC,yBAAuB,EADM;AAE7BvB,eAAa,IAFgB;AAG7BH,mBAAiB,IAHY;AAI7B1B,mBAAiB,IAJY;AAK7B4D,YAAU,CALmB;AAM7BrC,oBAAkB;AANW,CAA/B","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport ReactNative, {\n  View,\n  Animated,\n  Easing,\n  NativeModules\n} from 'react-native';\n\nimport {createResponder} from 'react-native-gesture-responder';\nimport Scroller from 'react-native-scroller';\nimport {Rect, Transform, transformedRect, availableTranslateSpace, fitCenterRect, alignedRect, getTransform} from './TransformUtils';\n\nexport default class ViewTransformer extends React.Component {\n\n  static Rect = Rect;\n  static getTransform = getTransform;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //transform state\n      scale: 1,\n      translateX: 0,\n      translateY: 0,\n\n      //animation state\n      animator: new Animated.Value(0),\n\n      //layout\n      width: 0,\n      height: 0,\n      pageX: 0,\n      pageY: 0,\n    };\n    this._viewPortRect = new Rect(); //A holder to avoid new too much\n\n    this.cancelAnimation = this.cancelAnimation.bind(this);\n    this.contentRect = this.contentRect.bind(this);\n    this.transformedContentRect = this.transformedContentRect.bind(this);\n    this.animate = this.animate.bind(this);\n\n    this.scroller = new Scroller(true, (dx, dy, scroller) =>{\n      if (dx === 0 && dy === 0 && scroller.isFinished()) {\n        this.animateBounce();\n        return;\n      }\n\n      this.updateTransform({\n        translateX: this.state.translateX + dx / this.state.scale,\n        translateY: this.state.translateY + dy / this.state.scale\n      })\n    });\n  }\n\n  viewPortRect() {\n    this._viewPortRect.set(0, 0, this.state.width, this.state.height);\n    return this._viewPortRect;\n  }\n\n  contentRect() {\n    let rect = this.viewPortRect().copy();\n    if (this.props.contentAspectRatio && this.props.contentAspectRatio > 0) {\n      rect = fitCenterRect(this.props.contentAspectRatio, rect);\n    }\n    return rect;\n  }\n\n  transformedContentRect() {\n    let rect = transformedRect(this.viewPortRect(), this.currentTransform());\n    if (this.props.contentAspectRatio && this.props.contentAspectRatio > 0) {\n      rect = fitCenterRect(this.props.contentAspectRatio, rect);\n    }\n    return rect;\n  }\n\n  currentTransform() {\n    return new Transform(this.state.scale, this.state.translateX, this.state.translateY);\n  }\n\n  componentWillMount() {\n    this.gestureResponder = createResponder({\n      onStartShouldSetResponder: (evt, gestureState) => true,\n      onMoveShouldSetResponderCapture: (evt, gestureState) => true,\n      //onMoveShouldSetResponder: this.handleMove,\n      onResponderMove: this.onResponderMove.bind(this),\n      onResponderGrant: this.onResponderGrant.bind(this),\n      onResponderRelease: this.onResponderRelease.bind(this),\n      onResponderTerminate: this.onResponderRelease.bind(this),\n      onResponderTerminationRequest: (evt, gestureState) => false, //Do not allow parent view to intercept gesture\n      onResponderSingleTapConfirmed: (evt, gestureState) => {\n        this.props.onSingleTapConfirmed && this.props.onSingleTapConfirmed();\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.props.onViewTransformed && this.props.onViewTransformed({\n      scale: this.state.scale,\n      translateX: this.state.translateX,\n      translateY: this.state.translateY\n    });\n  }\n\n  componentWillUnmount() {\n    this.cancelAnimation();\n  }\n\n  render() {\n    let gestureResponder = this.gestureResponder;\n    if (!this.props.enableTransform) {\n      gestureResponder = {};\n    }\n\n    return (\n      <View\n        {...this.props}\n        {...gestureResponder}\n        ref={'innerViewRef'}\n        onLayout={this.onLayout.bind(this)}>\n        <View\n          style={{\n            flex: 1,\n            transform: [\n                  {scale: this.state.scale},\n                  {translateX: this.state.translateX},\n                  {translateY: this.state.translateY}\n                ]\n          }}>\n          {this.props.children}\n        </View>\n      </View>\n    );\n  }\n\n  onLayout(e) {\n    const {width, height} = e.nativeEvent.layout;\n    if(width !== this.state.width || height !== this.state.height) {\n      this.setState({width, height});\n    }\n    this.measureLayout();\n\n    this.props.onLayout && this.props.onLayout(e);\n  }\n\n  measureLayout() {\n    let handle = ReactNative.findNodeHandle(this.refs['innerViewRef']);\n    NativeModules.UIManager.measure(handle, ((x, y, width, height, pageX, pageY) => {\n      if(typeof pageX === 'number' && typeof pageY === 'number') { //avoid undefined values on Android devices\n        if(this.state.pageX !== pageX || this.state.pageY !== pageY) {\n          this.setState({\n            pageX: pageX,\n            pageY: pageY\n          });\n        }\n      }\n\n    }).bind(this));\n  }\n\n  onResponderGrant(evt, gestureState) {\n    this.props.onTransformStart && this.props.onTransformStart();\n    this.setState({responderGranted: true});\n    this.measureLayout();\n  }\n\n  onResponderMove(evt, gestureState) {\n    this.cancelAnimation();\n\n    let dx = gestureState.moveX - gestureState.previousMoveX;\n    let dy = gestureState.moveY - gestureState.previousMoveY;\n    if (this.props.enableResistance) {\n      let d = this.applyResistance(dx, dy);\n      dx = d.dx;\n      dy = d.dy;\n    }\n\n    if(!this.props.enableTranslate) {\n      dx = dy = 0;\n    }\n\n    let transform = {};\n    if (gestureState.previousPinch && gestureState.pinch && this.props.enableScale) {\n      let scaleBy = gestureState.pinch / gestureState.previousPinch;\n      let pivotX = gestureState.moveX - this.state.pageX;\n      let pivotY = gestureState.moveY - this.state.pageY;\n\n\n      let rect = transformedRect(transformedRect(this.contentRect(), this.currentTransform()), new Transform(\n        scaleBy, dx, dy,\n        {\n          x: pivotX,\n          y: pivotY\n        }\n      ));\n      transform = getTransform(this.contentRect(), rect);\n    } else {\n      if (Math.abs(dx) > 2 * Math.abs(dy)) {\n        dy = 0;\n      } else if (Math.abs(dy) > 2 * Math.abs(dx)) {\n        dx = 0;\n      }\n      transform.translateX = this.state.translateX + dx / this.state.scale;\n      transform.translateY = this.state.translateY + dy / this.state.scale;\n    }\n\n    this.updateTransform(transform);\n    return true;\n  }\n\n  onResponderRelease(evt, gestureState) {\n    let handled = this.props.onTransformGestureReleased && this.props.onTransformGestureReleased({\n        scale: this.state.scale,\n        translateX: this.state.translateX,\n        translateY: this.state.translateY\n      });\n    if (handled) {\n      return;\n    }\n\n\n    if (gestureState.doubleTapUp) {\n      if (!this.props.enableScale) {\n        this.animateBounce();\n        return;\n      }\n      let pivotX = 0, pivotY = 0;\n      if (gestureState.dx || gestureState.dy) {\n        pivotX = gestureState.moveX - this.state.pageX;\n        pivotY = gestureState.moveY - this.state.pageY;\n      } else {\n        pivotX = gestureState.x0 - this.state.pageX;\n        pivotY = gestureState.y0 - this.state.pageY;\n      }\n\n      this.performDoubleTapUp(pivotX, pivotY);\n    } else {\n      if(this.props.enableTranslate) {\n        this.performFling(gestureState.vx, gestureState.vy);\n      } else {\n        this.animateBounce();\n      }\n    }\n  }\n\n\n\n\n\n\n  performFling(vx, vy) {\n    let startX = 0;\n    let startY = 0;\n    let maxX, minX, maxY, minY;\n    let availablePanDistance = availableTranslateSpace(this.transformedContentRect(), this.viewPortRect());\n    if (vx > 0) {\n      minX = 0;\n      if (availablePanDistance.left > 0) {\n        maxX = availablePanDistance.left + this.props.maxOverScrollDistance;\n      } else {\n        maxX = 0;\n      }\n    } else {\n      maxX = 0;\n      if (availablePanDistance.right > 0) {\n        minX = -availablePanDistance.right - this.props.maxOverScrollDistance;\n      } else {\n        minX = 0;\n      }\n    }\n    if (vy > 0) {\n      minY = 0;\n      if (availablePanDistance.top > 0) {\n        maxY = availablePanDistance.top + this.props.maxOverScrollDistance;\n      } else {\n        maxY = 0;\n      }\n    } else {\n      maxY = 0;\n      if (availablePanDistance.bottom > 0) {\n        minY = -availablePanDistance.bottom - this.props.maxOverScrollDistance;\n      } else {\n        minY = 0;\n      }\n    }\n\n    vx *= 1000; //per second\n    vy *= 1000;\n    if (Math.abs(vx) > 2 * Math.abs(vy)) {\n      vy = 0;\n    } else if (Math.abs(vy) > 2 * Math.abs(vx)) {\n      vx = 0;\n    }\n\n    this.scroller.fling(startX, startY, vx, vy, minX, maxX, minY, maxY);\n  }\n\n  performDoubleTapUp(pivotX, pivotY) {\n    console.log('performDoubleTapUp...pivot=' + pivotX + ', ' + pivotY);\n    let curScale = this.state.scale;\n    let scaleBy;\n    if (curScale > (1 + this.props.maxScale) / 2) {\n      scaleBy = 1 / curScale;\n    } else {\n      scaleBy = this.props.maxScale / curScale;\n    }\n\n    let rect = transformedRect(this.transformedContentRect(), new Transform(\n      scaleBy, 0, 0,\n      {\n        x: pivotX,\n        y: pivotY\n      }\n    ));\n    rect = transformedRect(rect, new Transform(1, this.viewPortRect().centerX() - pivotX, this.viewPortRect().centerY() - pivotY));\n    rect = alignedRect(rect, this.viewPortRect());\n\n    this.animate(rect);\n  }\n\n  applyResistance(dx, dy) {\n    let availablePanDistance = availableTranslateSpace(this.transformedContentRect(), this.viewPortRect());\n\n    if ((dx > 0 && availablePanDistance.left < 0)\n      ||\n      (dx < 0 && availablePanDistance.right < 0)) {\n      dx /= 3;\n    }\n    if ((dy > 0 && availablePanDistance.top < 0)\n      ||\n      (dy < 0 && availablePanDistance.bottom < 0)) {\n      dy /= 3;\n    }\n    return {\n      dx, dy\n    }\n  }\n\n  cancelAnimation() {\n    this.state.animator.stopAnimation();\n  }\n\n  animate(targetRect, durationInMillis) {\n    let duration = 200;\n    if (durationInMillis) {\n      duration = durationInMillis;\n    }\n\n    let fromRect = this.transformedContentRect();\n    if (fromRect.equals(targetRect)) {\n      console.log('animate...equal rect, skip animation');\n      return;\n    }\n\n    this.state.animator.removeAllListeners();\n    this.state.animator.setValue(0);\n    this.state.animator.addListener((state) =>{\n      let progress = state.value;\n\n      let left = fromRect.left + (targetRect.left - fromRect.left) * progress;\n      let right = fromRect.right + (targetRect.right - fromRect.right) * progress;\n      let top = fromRect.top + (targetRect.top - fromRect.top) * progress;\n      let bottom = fromRect.bottom + (targetRect.bottom - fromRect.bottom) * progress;\n\n      let transform = getTransform(this.contentRect(), new Rect(left, top, right, bottom));\n      this.updateTransform(transform);\n    });\n\n    Animated.timing(this.state.animator, {\n      toValue: 1,\n      duration: duration,\n      easing: Easing.inOut(Easing.ease)\n    }).start();\n  }\n\n  animateBounce() {\n    let curScale = this.state.scale;\n    let minScale = 1;\n    let maxScale = this.props.maxScale;\n    let scaleBy = 1;\n    if (curScale > maxScale) {\n      scaleBy = maxScale / curScale;\n    } else if (curScale < minScale) {\n      scaleBy = minScale / curScale;\n    }\n\n    let rect = transformedRect(this.transformedContentRect(), new Transform(\n      scaleBy,\n      0,\n      0,\n      {\n        x: this.viewPortRect().centerX(),\n        y: this.viewPortRect().centerY()\n      }\n    ));\n    rect = alignedRect(rect, this.viewPortRect());\n    this.animate(rect);\n  }\n\n  // Above are private functions. Do not use them if you don't known what you are doing.\n  // ***********************************************************************************\n  // Below are public functions. Feel free to use them.\n\n\n  updateTransform(transform) {\n    this.setState(transform);\n  }\n\n\n  forceUpdateTransform(transform) {\n    this.setState(transform);\n  }\n\n  getAvailableTranslateSpace() {\n    return availableTranslateSpace(this.transformedContentRect(), this.viewPortRect());\n  }\n}\n\nViewTransformer.propTypes = {\n  /**\n   * Use false to disable transform. Default is true.\n   */\n  enableTransform: React.PropTypes.bool,\n\n  /**\n   * Use false to disable scaling. Default is true.\n   */\n  enableScale: React.PropTypes.bool,\n\n  /**\n   * Use false to disable translateX/translateY. Default is true.\n   */\n  enableTranslate: React.PropTypes.bool,\n\n  /**\n   * Default is 20\n   */\n  maxOverScrollDistance: React.PropTypes.number,\n\n  maxScale: React.PropTypes.number,\n  contentAspectRatio: React.PropTypes.number,\n\n  /**\n   * Use true to enable resistance effect on over pulling. Default is false.\n   */\n  enableResistance: React.PropTypes.bool,\n\n  onViewTransformed: React.PropTypes.func,\n\n  onTransformGestureReleased: React.PropTypes.func,\n\n  onSingleTapConfirmed: React.PropTypes.func\n};\nViewTransformer.defaultProps = {\n  maxOverScrollDistance: 20,\n  enableScale: true,\n  enableTranslate: true,\n  enableTransform: true,\n  maxScale: 1,\n  enableResistance: false\n};\n"]}]