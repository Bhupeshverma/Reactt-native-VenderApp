Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/ziddi/Desktop/venders/src/screens/Auth/login.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

var _reactRedux = require('react-redux');

var _actions = require('../../actions');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _expo = require('expo');

var regeneratorRuntime = require('regenerator-runtime');

var _Dimensions$get = _reactNative.Dimensions.get("window"),
    width = _Dimensions$get.width,
    height = _Dimensions$get.height;

var background = require("./bg1.jpg");
var mark = require("./login1_mark.png");
var lockIcon = require("./login1_lock.png");
var personIcon = require("./login1_person.png");

var LoginScreen = function (_Component) {
  babelHelpers.inherits(LoginScreen, _Component);

  function LoginScreen(props) {
    babelHelpers.classCallCheck(this, LoginScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (LoginScreen.__proto__ || Object.getPrototypeOf(LoginScreen)).call(this, props));

    _this.state = {
      email: '',
      Password: '',
      behavior: 'position',
      fontLoaded: false
    };
    return _this;
  }

  babelHelpers.createClass(LoginScreen, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      return regeneratorRuntime.async(function componentDidMount$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_expo.Font.loadAsync({
                'Helvetica Neue': require('../../assets/fonts/HelveticaNeueIt.ttf'),
                'Poiret One': require('../../assets/fonts/PoiretOne-Regular.ttf')
              }));

            case 2:
              this.setState({ fontLoaded: true });

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: '_onPressButton',
    value: function _onPressButton() {
      var _state = this.state,
          email = _state.email,
          Password = _state.Password;

      console.log(email);
      console.log(Password);
      this.props.logIn(email, Password);
    }
  }, {
    key: 'handleUser',
    value: function handleUser() {
      _reactNativeRouterFlux.Actions.drawer({ type: _reactNativeRouterFlux.ActionConst.RESET });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.ScrollView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 61
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          },
          _react2.default.createElement(_reactNative.StatusBar, {
            hidden: false,
            barStyle: 'light-content',
            backgroundColor: 'black',
            __source: {
              fileName: _jsxFileName,
              lineNumber: 63
            }
          }),
          _react2.default.createElement(
            _reactNative.Image,
            { source: background, style: styles.background, resizeMode: 'cover', __source: {
                fileName: _jsxFileName,
                lineNumber: 68
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              { style: styles.markWrap, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 69
                }
              },
              _react2.default.createElement(_reactNativeElements.Icon, {
                name: 'lock',
                color: '#ff5252',
                size: 34,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 70
                }
              }),
              this.state.fontLoaded ? _react2.default.createElement(
                _reactNative.Text,
                { style: styles.mark, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 75
                  }
                },
                'Street Style Store'
              ) : null
            ),
            this.state.fontLoaded ? _react2.default.createElement(
              _reactNative.View,
              { style: styles.loginLogo, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 77
                }
              },
              _react2.default.createElement(
                _reactNative.Text,
                { style: styles.loginText, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 78
                  }
                },
                'Login'
              )
            ) : null,
            _react2.default.createElement(
              _reactNative.View,
              { style: styles.wrapper, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 80
                }
              },
              _react2.default.createElement(
                _reactNative.KeyboardAvoidingView,
                { behavior: this.state.behavior, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 81
                  }
                },
                _react2.default.createElement(
                  _reactNative.View,
                  { style: styles.inputWrap, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 82
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.iconWrap, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 83
                      }
                    },
                    _react2.default.createElement(_reactNative.Image, { source: personIcon, style: styles.icon, resizeMode: 'contain', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 84
                      }
                    })
                  ),
                  _react2.default.createElement(_reactNative.TextInput, {
                    placeholder: 'Username',
                    placeholderTextColor: '#FFF',
                    underlineColorAndroid: 'transparent',
                    style: styles.input,
                    onChangeText: function onChangeText(email) {
                      return _this2.setState({ email: email });
                    },
                    value: this.state.email,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 87
                    }
                  })
                ),
                _react2.default.createElement(
                  _reactNative.View,
                  { style: styles.inputWrap, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 96
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.iconWrap, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 97
                      }
                    },
                    _react2.default.createElement(_reactNative.Image, { source: lockIcon, style: styles.icon, resizeMode: 'contain', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 98
                      }
                    })
                  ),
                  _react2.default.createElement(_reactNative.TextInput, {
                    placeholderTextColor: '#FFF',
                    placeholder: 'Password',
                    underlineColorAndroid: 'transparent',
                    style: styles.input,
                    onChangeText: function onChangeText(Password) {
                      return _this2.setState({ Password: Password });
                    },
                    value: this.state.Password,
                    secureTextEntry: true,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 100
                    }
                  })
                ),
                _react2.default.createElement(
                  _reactNative.TouchableOpacity,
                  { activeOpacity: .5, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 110
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.View,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 111
                      }
                    },
                    _react2.default.createElement(
                      _reactNative.Text,
                      { style: styles.forgotPasswordText, __source: {
                          fileName: _jsxFileName,
                          lineNumber: 112
                        }
                      },
                      'Forgot Password?'
                    )
                  )
                ),
                _react2.default.createElement(
                  _reactNative.TouchableOpacity,
                  { activeOpacity: .5, onPress: this._onPressButton.bind(this), __source: {
                      fileName: _jsxFileName,
                      lineNumber: 115
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.View,
                    { style: styles.button, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 116
                      }
                    },
                    _react2.default.createElement(
                      _reactNative.Text,
                      { style: styles.buttonText, __source: {
                          fileName: _jsxFileName,
                          lineNumber: 117
                        }
                      },
                      'Sign In'
                    )
                  )
                )
              )
            ),
            _react2.default.createElement(
              _reactNative.View,
              { style: styles.container, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 123
                }
              },
              _react2.default.createElement(
                _reactNative.View,
                { style: styles.signupWrap, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 124
                  }
                },
                this.props.spinner ? _react2.default.createElement(_reactNative.ActivityIndicator, { size: 'large', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 127
                  }
                }) : _react2.default.createElement(_reactNative.View, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 127
                  }
                }),
                this.props.error ? _react2.default.createElement(
                  _reactNative.Text,
                  { style: styles.signupLinkText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 128
                    }
                  },
                  ' Couldn\'t log in !'
                ) : _react2.default.createElement(_reactNative.View, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 128
                  }
                }),
                this.props.unauthorized ? _react2.default.createElement(
                  _reactNative.Text,
                  { style: styles.signupLinkText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 129
                    }
                  },
                  ' UnAuthorized'
                ) : _react2.default.createElement(_reactNative.View, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 129
                  }
                }),
                this.props.sessionID ? _react2.default.createElement(
                  _reactNative.View,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 130
                    }
                  },
                  this.handleUser()
                ) : _react2.default.createElement(_reactNative.View, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 130
                  }
                })
              )
            )
          )
        )
      );
    }
  }]);
  return LoginScreen;
}(_react.Component);

function mapStateToProps(state) {
  return {
    spinner: state.auth.spinner,
    user: state.auth.user,
    unauthorized: state.auth.unauthorized,
    error: state.auth.error,
    sessionID: state.auth.sessionID,
    loggedOut: state.LogOutReducer.loggedOut
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, {
  logIn: _actions.logIn
})(LoginScreen);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1

  },
  markWrap: {
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  mark: {
    color: "#fff",
    fontFamily: 'Helvetica Neue',
    fontWeight: "400",
    fontSize: 24
  },
  background: {
    width: width,
    height: height
  },
  wrapper: {
    paddingVertical: 30
  },
  loginLogo: {
    justifyContent: "center",
    alignItems: "center"
  },
  loginText: {
    color: "#fff",
    fontWeight: "500",
    fontSize: 36,
    fontFamily: 'Poiret One'
  },
  inputWrap: {
    flexDirection: "row",
    marginVertical: 10,
    height: 50,
    borderBottomWidth: 1,
    borderBottomColor: "#000",
    marginHorizontal: 20,
    opacity: 0.5,
    backgroundColor: '#555'
  },
  iconWrap: {
    paddingHorizontal: 7,
    alignItems: "center",
    justifyContent: "center"
  },
  sssicon: {
    height: 20,
    width: 20,
    backgroundColor: "transparent",
    paddingVertical: 10
  },
  icon: {
    height: 20,
    width: 20
  },
  input: {
    flex: 1,
    paddingHorizontal: 10
  },
  button: {
    backgroundColor: "#ff5252",
    paddingVertical: 20,
    alignItems: "center",
    justifyContent: "center",
    marginTop: 30,
    marginHorizontal: 20,
    height: 50,
    borderRadius: 5
  },
  buttonText: {
    color: "#FFF",
    fontSize: 18
  },
  forgotPasswordText: {
    color: "#D8D8D8",
    backgroundColor: "transparent",
    textAlign: "right",
    paddingRight: 15
  },
  signupWrap: {
    backgroundColor: "transparent",
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center"
  },
  accountText: {
    color: "#D8D8D8"
  },
  signupLinkText: {
    fontSize: 20,
    color: "#FFF",
    marginLeft: 5
  }
});