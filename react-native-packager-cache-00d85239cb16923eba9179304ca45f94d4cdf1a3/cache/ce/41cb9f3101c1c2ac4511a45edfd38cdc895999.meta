["b4e0dfb7684dd0cf4c3fbb86935aed79594b4280","e2062dae0f76dc210d1c3c07f991799a24a6c9df",["react-native","./DriverBase"],[130,175],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/@shoutem/animation/src/drivers/TouchableDriver.js"],"names":["defaultAnimation","value","toValue","animationOptions","timing","TouchableDriver","options","easing","elastic","duration","onPressIn","bind","onPressOut","touchableViewProps","start"],"mappings":";;;;;AAAA;;AAKA;;AAUA,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0CC,gBAA1C,EAA4D;AAC1D,SAAO,sBAASC,MAAT,CACLH,KADK;AAGHC;AAHG,KAIAC,gBAJA,EAAP;AAOD;;IAcYE,e,WAAAA,e;;;AAKX,2BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAGnB,UAAKH,gBAAL;AACEI,cAAQ,oBAAOC,OAAP,CAAe,CAAf,CADV;AAEEC,gBAAU;AAFZ,OAGKH,OAHL;AAKA,UAAKI,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,OAAlB;AACA,UAAKE,kBAAL,GAA0B;AACxBH,iBAAW,MAAKA,SADQ;AAExBE,kBAAY,MAAKA;AAFO,KAA1B;AAVmB;AAcpB;;;;gCAEW;AACVZ,uBAAiB,KAAKC,KAAtB,EAA6B,CAA7B,EAAgC,KAAKE,gBAArC,EAAuDW,KAAvD;AACD;;;iCAEY;AACXd,uBAAiB,KAAKC,KAAtB,EAA6B,CAA7B,EAAgC,KAAKE,gBAArC,EAAuDW,KAAvD;AACD","sourcesContent":["import {\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { DriverBase } from './DriverBase';\n\n/**\n * Returns the default animation callback to use.\n *\n * @param {Animated.Value} value\n * @param {double} toValue\n * @param {Object} animationOptions\n * @returns {CompositeAnimation}\n */\nfunction defaultAnimation(value, toValue, animationOptions) {\n  return Animated.timing(\n    value,\n    {\n      toValue,\n      ...animationOptions,\n    }\n  );\n}\n\n/**\n * Animation driver that creates an animated value changed on press events.\n *\n * Assign onPressIn and onPressOut props of React Native Touchable*, and\n * pass instance to any @shoutem/animation animation to run it\n * e.g.:\n * driver = new TouchableDriver();\n * ...\n * <TouchableOpacity {...driver.touchableViewProps}>\n * ...\n * <ZoomIn driver={driver}>\n */\nexport class TouchableDriver extends DriverBase {\n\n  /**\n   * @param {Object} options Animation options.\n   */\n  constructor(options) {\n    super();\n\n    this.animationOptions = {\n      easing: Easing.elastic(1),\n      duration: 150,\n      ...options,\n    };\n    this.onPressIn = this.onPressIn.bind(this);\n    this.onPressOut = this.onPressOut.bind(this);\n    this.touchableViewProps = {\n      onPressIn: this.onPressIn,\n      onPressOut: this.onPressOut,\n    };\n  }\n\n  onPressIn() {\n    defaultAnimation(this.value, 1, this.animationOptions).start();\n  }\n\n  onPressOut() {\n    defaultAnimation(this.value, 0, this.animationOptions).start();\n  }\n}\n"]}]