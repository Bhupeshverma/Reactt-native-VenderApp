["4fd371456a12773355cae35e9330cce128ad542e","2931af074729aba4f1fd9f03fdbeb8f819a049ac",["react","react-native","./animated/Circle"],[137,234,274],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-loader/src/DoubleBounce.js"],"names":["Surface","Pulse","state","bounces","Value","animate","setTimeout","unmounted","index","sequence","timing","toValue","duration","start","props","size","color","scale1","scale2","width","height","propTypes","number","string","defaultProps"],"mappings":";;;;;;;AAAA;;;;AACA;;AAGA;;;;IAFQA,O,oBAAAA,O;IAIaC,K;;;;;;;;;;;;;;gMAWnBC,K,GAAQ;AACNC,eAAS,CACP,IAAI,sBAASC,KAAb,CAAmB,CAAnB,CADO,EAEP,IAAI,sBAASA,KAAb,CAAmB,CAAnB,CAFO;AADH,K;;;;;wCAOY;AAAA;;AAClB,WAAKC,OAAL,CAAa,CAAb;AACAC,iBAAW;AAAA,eAAM,OAAKD,OAAL,CAAa,CAAb,CAAN;AAAA,OAAX,EAAkC,IAAlC;AACD;;;2CAEsB;AACrB,WAAKE,SAAL,GAAiB,IAAjB;AACD;;;4BAEOC,K,EAAO;AAAA;;AACb,4BACGC,QADH,CACY,CACR,sBAASC,MAAT,CAAgB,KAAKR,KAAL,CAAWC,OAAX,CAAmBK,KAAnB,CAAhB,EAA2C;AACzCG,iBAAS,CADgC;AAEzCC,kBAAU;AAF+B,OAA3C,CADQ,EAKR,sBAASF,MAAT,CAAgB,KAAKR,KAAL,CAAWC,OAAX,CAAmBK,KAAnB,CAAhB,EAA2C;AACzCG,iBAAS,CADgC;AAEzCC,kBAAU;AAF+B,OAA3C,CALQ,CADZ,EAWGC,KAXH,CAWS,YAAM;AACX,YAAI,CAAC,OAAKN,SAAV,EAAqB;AACnB,iBAAKF,OAAL,CAAaG,KAAb;AACD;AACF,OAfH;AAgBD;;;6BAEQ;AAAA,mBACiB,KAAKM,KADtB;AAAA,UACCC,IADD,UACCA,IADD;AAAA,UACOC,KADP,UACOA,KADP;;AAAA,sDAE+B,KAAKd,KAFpC,CAECC,OAFD;AAAA,UAEWc,MAFX;AAAA,UAEmBC,MAFnB;;AAGP,UAAMC,QAAQJ,OAAO,CAArB;AACA,UAAMK,SAASL,OAAO,CAAtB;;AAEA,aAAQ;AAAC,eAAD;AAAA,UAAS,OAAOI,KAAhB,EAAuB,QAAQC,MAA/B;AACN;AACE,kBAAQL,IADV;AAEE,gBAAMC,KAFR;AAGE,iBAAOC,MAHT;AAIE,mBAAS,GAJX;AAKE,aAAGF,IALL;AAME,aAAGA;AANL,UADM;AASN;AACE,kBAAQA,IADV;AAEE,gBAAMC,KAFR;AAGE,iBAAOE,MAHT;AAIE,mBAAS,GAJX;AAKE,aAAGH,IALL;AAME,aAAGA;AANL;AATM,OAAR;AAkBD;;;4BArEMM,S,GAAY;AACjBN,QAAM,iBAAUO,MADC;AAEjBN,SAAO,iBAAUO;AAFA,C,SAKZC,Y,GAAe;AACpBT,QAAM,EADc;AAEpBC,SAAO;AAFa,C;kBANHf,K","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { Animated, ART } from 'react-native';\nconst { Surface } = ART;\n\nimport Circle from './animated/Circle';\n\nexport default class Pulse extends Component {\n  static propTypes = {\n    size: PropTypes.number,\n    color: PropTypes.string\n  };\n\n  static defaultProps = {\n    size: 14,\n    color: '#000'\n  };\n\n  state = {\n    bounces: [\n      new Animated.Value(1),\n      new Animated.Value(0)\n    ]\n  };\n\n  componentDidMount() {\n    this.animate(0);\n    setTimeout(() => this.animate(1), 1000);\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  animate(index) {\n    Animated\n      .sequence([\n        Animated.timing(this.state.bounces[index], {\n          toValue: 1,\n          duration: 1000\n        }),\n        Animated.timing(this.state.bounces[index], {\n          toValue: 0,\n          duration: 1000\n        })\n      ])\n      .start(() => {\n        if (!this.unmounted) {\n          this.animate(index);\n        }\n      });\n  }\n\n  render() {\n    const { size, color } = this.props;\n    const { bounces: [scale1, scale2] } = this.state;\n    const width = size * 2;\n    const height = size * 2;\n\n    return (<Surface width={width} height={height}>\n      <Circle\n        radius={size}\n        fill={color}\n        scale={scale1}\n        opacity={0.6}\n        x={size}\n        y={size}\n      />\n      <Circle\n        radius={size}\n        fill={color}\n        scale={scale2}\n        opacity={0.6}\n        x={size}\n        y={size}\n      />\n    </Surface>);\n  }\n}\n"]}]