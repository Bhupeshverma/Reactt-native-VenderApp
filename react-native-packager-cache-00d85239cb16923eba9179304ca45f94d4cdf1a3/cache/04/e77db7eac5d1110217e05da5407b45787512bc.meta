["19e8d914c63bc36a74956c46f7c4d306b314fcf6","7c87e6510dedde4c974debe75da10d4d3de9f07b",["react-native","react"],[39,85],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-navigation-experimental-compat/src/NavigationPropTypes.js"],"names":["Animated","require","React","PropTypes","action","shape","type","string","isRequired","animatedValue","instanceOf","Value","navigationRoute","key","navigationState","index","number","routes","arrayOf","layout","height","initHeight","initWidth","isMeasured","bool","width","scene","isActive","isStale","route","SceneRendererProps","position","progress","scenes","SceneRenderer","panHandlers","onMoveShouldSetResponder","func","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","onStartShouldSetResponderCapture","extractSceneRendererProps","props","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nimport type  {\n  NavigationSceneRendererProps,\n} from './NavigationTypeDefinition';\n\n/**\n * React component PropTypes Definitions. Consider using this as a supplementary\n * measure with `NavigationTypeDefinition`. This helps to capture the propType\n * error at run-time, where as `NavigationTypeDefinition` capture the flow\n * type check errors at build time.\n */\n\nconst Animated = require('react-native').Animated;\nconst React = require('react');\n\nconst {PropTypes} = React;\n\n/* NavigationAction */\nconst action =  PropTypes.shape({\n  type: PropTypes.string.isRequired,\n});\n\n/* NavigationAnimatedValue  */\nconst animatedValue = PropTypes.instanceOf(Animated.Value);\n\n/* NavigationRoute  */\nconst navigationRoute = PropTypes.shape({\n  key: PropTypes.string.isRequired,\n});\n\n/* NavigationState  */\nconst navigationState = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  routes: PropTypes.arrayOf(navigationRoute),\n});\n\n/* NavigationLayout */\nconst layout = PropTypes.shape({\n  height: animatedValue,\n  initHeight: PropTypes.number.isRequired,\n  initWidth: PropTypes.number.isRequired,\n  isMeasured: PropTypes.bool.isRequired,\n  width: animatedValue,\n});\n\n/* NavigationScene */\nconst scene = PropTypes.shape({\n  index: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  isStale: PropTypes.bool.isRequired,\n  key: PropTypes.string.isRequired,\n  route: navigationRoute.isRequired,\n});\n\n/* NavigationSceneRendererProps */\nconst SceneRendererProps = {\n  layout: layout.isRequired,\n  navigationState: navigationState.isRequired,\n  position: animatedValue.isRequired,\n  progress: animatedValue.isRequired,\n  scene: scene.isRequired,\n  scenes: PropTypes.arrayOf(scene).isRequired,\n};\n\nconst SceneRenderer = PropTypes.shape(SceneRendererProps);\n\n/* NavigationPanPanHandlers */\nconst panHandlers = PropTypes.shape({\n  onMoveShouldSetResponder: PropTypes.func.isRequired,\n  onMoveShouldSetResponderCapture: PropTypes.func.isRequired,\n  onResponderEnd: PropTypes.func.isRequired,\n  onResponderGrant: PropTypes.func.isRequired,\n  onResponderMove: PropTypes.func.isRequired,\n  onResponderReject: PropTypes.func.isRequired,\n  onResponderRelease: PropTypes.func.isRequired,\n  onResponderStart: PropTypes.func.isRequired,\n  onResponderTerminate: PropTypes.func.isRequired,\n  onResponderTerminationRequest: PropTypes.func.isRequired,\n  onStartShouldSetResponder: PropTypes.func.isRequired,\n  onStartShouldSetResponderCapture: PropTypes.func.isRequired,\n});\n\n/**\n * Helper function that extracts the props needed for scene renderer.\n */\nfunction extractSceneRendererProps(\n  props: NavigationSceneRendererProps,\n): NavigationSceneRendererProps {\n  return {\n    layout: props.layout,\n    navigationState: props.navigationState,\n    position: props.position,\n    progress: props.progress,\n    scene: props.scene,\n    scenes: props.scenes,\n  };\n}\n\nmodule.exports = {\n  // helpers\n  extractSceneRendererProps,\n\n  // Bundled propTypes.\n  SceneRendererProps,\n\n  // propTypes\n  SceneRenderer,\n  action,\n  navigationState,\n  navigationRoute,\n  panHandlers,\n};\n"]}]