Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Sync = Sync;

var _types = require('./types');

var _axios = require('axios');

var _axios2 = babelHelpers.interopRequireDefault(_axios);

function isSyncingProducts() {
    return {
        type: _types.SYNCING_PRODUCTS
    };
}

function syncedProducts(data) {
    return {
        type: _types.SYNCED_PRODUCTS,
        payload: data
    };
}

function syncedProductsError() {
    return {
        type: _types.ERROR_SYNCING_PRODUCTS
    };
}

function Sync(dataArray, date, count) {
    return function (dispatch, getState) {
        console.log("inside_Sync 1");
        dispatch(isSyncingProducts());
        console.log("inside Sync");
        console.log("date", date);

        console.log(count);
        var sessionID = getState().auth.sessionID;
        var value = getState().auth.user.name_value_list.user_id.value;

        var data = {

            "session": '' + sessionID,
            "user_id": '' + value,
            "name_value_list": [{
                "name": "name",
                "value": "af_" + ('' + date)
            }, {
                "name": "account_id_c",
                "value": "515f3931-fb4b-36f3-3f5a-570bd865a87b"
            }, {
                "name": "total_shoes_c",
                "value": String(count)
            }, {
                "name": "date_rec",
                "value": '' + date
            }, {
                "name": "status",
                "value": "in-dispatch"
            }],
            "name_value_list_relation": dataArray
        };

        console.log(data);

        return _axios2.default.post('http://crm-dev.streetstylestore.com/webservice/setShoefromvendor.php', data).then(function (response) {
            console.log(response.data);
            dispatch(syncedProducts(response));
        }).catch(function (error) {
            if (error.response) {
                if (error.response.status === 401) {

                    dispatch(syncedProductsError());
                    console.log(error);
                }
            } else if (error.request) {
                console.log(error);
                dispatch(syncedProductsError());
            } else {
                console.log(error);
                dispatch(syncedProductsError());
            }
        });
    };
}