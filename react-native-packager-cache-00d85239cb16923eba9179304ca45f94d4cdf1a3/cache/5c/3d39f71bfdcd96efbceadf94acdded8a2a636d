Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;
var _jsxFileName = '/home/ziddi/Desktop/venders/node_modules/react-native-material-cards/CardAction.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var CardAction = function (_Component) {
  babelHelpers.inherits(CardAction, _Component);

  function CardAction() {
    babelHelpers.classCallCheck(this, CardAction);
    return babelHelpers.possibleConstructorReturn(this, (CardAction.__proto__ || Object.getPrototypeOf(CardAction)).apply(this, arguments));
  }

  babelHelpers.createClass(CardAction, [{
    key: 'renderChildren',
    value: function renderChildren() {
      var returnChildren = this.props.children;
      if (this.props.inColumn === true) {
        returnChildren = _react2.default.Children.map(returnChildren, function (child) {
          if (child.type.name === "CardButton") {
            return _react2.default.cloneElement(child, {
              inColumn: true
            });
          } else {
            return child;
          }
        });
      }
      return returnChildren;
    }
  }, {
    key: 'render',
    value: function render() {
      var newStyle = this.props.style || {};
      var directionStyle = this.props.inColumn === true ? styles.cardActionInColumn : styles.cardActionInRow;
      return _react2.default.createElement(
        _reactNative.View,
        { style: this.props.seperator && !this.props.isDark ? [directionStyle, styles.seperatorAdd, newStyle] : [directionStyle, newStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        this.renderChildren()
      );
    }
  }]);
  return CardAction;
}(_react.Component);

exports.default = CardAction;


var styles = _reactNative.StyleSheet.create({
  cardActionInRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'flex-start',
    alignSelf: 'stretch'
  },
  cardActionInColumn: {
    flexDirection: 'column',
    alignItems: 'stretch',
    justifyContent: 'flex-start',
    alignSelf: 'stretch'
  },
  seperatorAdd: {
    borderTopColor: '#E9E9E9',
    borderTopWidth: 1
  }
});