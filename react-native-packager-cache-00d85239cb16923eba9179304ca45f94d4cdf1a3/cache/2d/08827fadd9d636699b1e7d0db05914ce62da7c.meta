["5c07556193df31c2f950e8ac33a9ee3271696e4e","30c2618ad398ed4338faa68ed974019e88849150",["react","prop-types","react-native","@expo/vector-icons/MaterialIcons","./MaterialDialog","./colors"],[116,211,321,368,511,632],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-material-dialog/src/MultiPickerMaterialDialog.js"],"names":["MultiPickerMaterialDialog","props","renderRow","row","sectionID","rowID","value","onRowPress","styles","rowContainer","iconContainer","selected","colorAccent","rowText","label","items","selectedItems","rows","buildSelectedRows","dataSource","DataSource","rowHasChanged","r1","r2","cloneWithRows","state","nextProps","setState","title","titleColor","visible","okLabel","scrolled","onOk","filter","cancelLabel","onCancel","map","item","some","i","create","height","flex","flexDirection","justifyContent","alignItems","marginRight","fontFamily","OS","color","androidPrimaryTextColor","fontSize","propTypes","bool","isRequired","arrayOf","object","string","func","defaultProps","undefined","androidColorAccent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableOpacity, View, ListView, Platform } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport MaterialDialog from './MaterialDialog';\n\nimport colors from './colors';\n\nexport default class MultiPickerMaterialDialog extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const { items, selectedItems } = props;\n    const rows = buildSelectedRows(items, selectedItems);\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (r1, r2) => r1.value !== r2.value || r1.selected !== r2.selected,\n    }).cloneWithRows(rows);\n\n    this.state = {\n      dataSource,\n      rows,\n    };\n  }\n\n  // Refreshing the dataSource when we refresh any prop (such as visible)\n  componentWillReceiveProps(nextProps) {\n    const { items, selectedItems } = nextProps;\n    const rows = buildSelectedRows(items, selectedItems);\n    const dataSource = this\n      .state\n      .dataSource\n      .cloneWithRows(rows);\n    this.setState({ dataSource, rows });\n  }\n\n  onRowPress(rowID) {\n    const rows = [...this.state.rows];\n    rows[rowID] = Object.assign({}, rows[rowID], {\n      selected: !rows[rowID].selected,\n    });\n    const dataSource = this\n      .state\n      .dataSource\n      .cloneWithRows(rows);\n    this.setState({ dataSource, rows });\n  }\n\n  renderRow = (row, sectionID, rowID) => (\n    <TouchableOpacity key={row.value} onPress={() => this.onRowPress(rowID)}>\n      <View\n        style={styles.rowContainer}>\n        <View style={styles.iconContainer}>\n          <Icon\n            name={row.selected\n            ? 'check-box'\n            : 'check-box-outline-blank'}\n            color={this.props.colorAccent}\n            size={24} />\n        </View>\n        <Text\n          style={styles.rowText}>{row.label}</Text>\n      </View>\n    </TouchableOpacity>\n    );\n\n  render() {\n    return (\n      <MaterialDialog\n        title={this.props.title}\n        titleColor={this.props.titleColor}\n        colorAccent={this.props.colorAccent}\n        visible={this.props.visible}\n        okLabel={this.props.okLabel}\n        scrolled={this.props.scrolled}\n        onOk={() => this.props.onOk({\n          selectedItems: this\n          .state\n          .rows\n          .filter(row => row.selected),\n        })}\n        cancelLabel={this.props.cancelLabel}\n        onCancel={this.props.onCancel}>\n        <ListView dataSource={this.state.dataSource} renderRow={this.renderRow} />\n      </MaterialDialog>\n    );\n  }\n}\n\nfunction buildSelectedRows(items, selectedItems) {\n  const rows = items.map(item => Object.assign({}, item, {\n    selected: selectedItems.some(i => i.value === item.value),\n  }));\n\n  return rows;\n}\n\nconst styles = StyleSheet.create({\n  rowContainer: {\n    height: 56,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n  iconContainer:\n  {\n    marginRight: 16,\n  },\n  rowText:\n  {\n    fontFamily: Platform.OS === 'android' ? 'sans-serif' : 'System',\n    color: colors.androidPrimaryTextColor,\n    fontSize: 16,\n  },\n});\n\nMultiPickerMaterialDialog.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedItems: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n  titleColor: PropTypes.string,\n  colorAccent: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n  onOk: PropTypes.func.isRequired,\n  cancelLabel: PropTypes.string,\n  okLabel: PropTypes.string,\n  scrolled: PropTypes.bool,\n};\n\nMultiPickerMaterialDialog.defaultProps = {\n  selectedItems: [],\n  titleColor: undefined,\n  colorAccent: colors.androidColorAccent,\n  cancelLabel: undefined,\n  okLabel: undefined,\n  scrolled: false,\n};\n"]}]