["85bb777cae549062dfbc6ad8bb8b0372f1253694","c3a5d7cf50e6acb7204cef35aa18558c2b0c29d5",["../helpers"],[22],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/remotedev-serialize/immutable/serialize.js"],"names":["helpers","require","mark","extract","refer","module","exports","serialize","Immutable","refs","replacer","key","value","Record","Range","Repeat","OrderedMap","isOrderedMap","Map","isMap","List","isList","OrderedSet","isOrderedSet","Set","isSet","Seq","isSeq","Stack","isStack","reviver","data","__serializedType__","_start","_end","_step","_value","size","__serializedRef__"],"mappings":"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","sourcesContent":["var helpers = require('../helpers');\nvar mark = helpers.mark;\nvar extract = helpers.extract;\nvar refer = helpers.refer;\n\nmodule.exports = function serialize(Immutable, refs) {\n  return {\n    replacer: function(key, value) {\n      if (value instanceof Immutable.Record) return refer(value, 'ImmutableRecord', 'toObject', refs);\n      if (value instanceof Immutable.Range) return extract(value, 'ImmutableRange');\n      if (value instanceof Immutable.Repeat) return extract(value, 'ImmutableRepeat');\n      if (Immutable.OrderedMap.isOrderedMap(value)) return mark(value, 'ImmutableOrderedMap', 'toObject');\n      if (Immutable.Map.isMap(value)) return mark(value, 'ImmutableMap', 'toObject');\n      if (Immutable.List.isList(value)) return mark(value, 'ImmutableList', 'toArray');\n      if (Immutable.OrderedSet.isOrderedSet(value)) return mark(value, 'ImmutableOrderedSet', 'toArray');\n      if (Immutable.Set.isSet(value)) return mark(value, 'ImmutableSet', 'toArray');\n      if (Immutable.Seq.isSeq(value)) return mark(value, 'ImmutableSeq', 'toArray');\n      if (Immutable.Stack.isStack(value)) return mark(value, 'ImmutableStack', 'toArray');\n      return value;\n    },\n\n    reviver: function(key, value) {\n      if (typeof value === 'object' && value !== null && '__serializedType__'  in value) {\n        var data = value.data;\n        switch (value.__serializedType__) {\n          case 'ImmutableMap': return Immutable.Map(data);\n          case 'ImmutableOrderedMap': return Immutable.OrderedMap(data);\n          case 'ImmutableList': return Immutable.List(data);\n          case 'ImmutableRange': return Immutable.Range(data._start, data._end, data._step);\n          case 'ImmutableRepeat': return Immutable.Repeat(data._value, data.size);\n          case 'ImmutableSet': return Immutable.Set(data);\n          case 'ImmutableOrderedSet': return Immutable.OrderedSet(data);\n          case 'ImmutableSeq': return Immutable.Seq(data);\n          case 'ImmutableStack': return Immutable.Stack(data);\n          case 'ImmutableRecord':\n            return (refs && refs[value.__serializedRef__] || Immutable.Map)(data);\n          default: return data;\n        }\n      }\n      return value;\n    }\n  }   \n};\n"]}]