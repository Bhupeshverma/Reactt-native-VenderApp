["edfed459d9a153ecea03f044cb223c7713995473","8074032ffd3cab80059eb0b3f1e57d6ddc466e8b",["react","./View","../drivers/DriverShape"],[135,225,264],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/@shoutem/animation/src/animations/ZoomIn.js"],"names":["ZoomIn","props","driver","children","inputRange","maxFactor","style","propTypes","isRequired","PropTypes","node","array","number","object"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;IA2BaA,M,WAAAA,M;;;;;;;;;;6BAsBF;AAAA,mBACmE,KAAKC,KADxE;AAAA,UACCC,MADD,UACCA,MADD;AAAA,UACSC,QADT,UACSA,QADT;AAAA,qCACmBC,UADnB;AAAA,UACmBA,UADnB,qCACgC,CAAC,CAAD,EAAI,CAAJ,CADhC;AAAA,oCACwCC,SADxC;AAAA,UACwCA,SADxC,oCACoD,GADpD;AAAA,UACyDC,KADzD,UACyDA,KADzD;;;AAGP,aACE;AAAA;AAAA;AACE,kBAAQJ,MADV;AAEE,yBAAc,QAFhB;AAGE,4BAAkB,EAAEE,sBAAF,EAAcC,oBAAd,EAHpB;AAIE,iBAAOC;AAJT;AAMGH;AANH,OADF;AAUD;;;4BAlCMI,S,GAAY;AAIjBL,UAAQ,yBAAYM,UAJH;;AAQjBL,YAAU,gBAAMM,SAAN,CAAgBC,IART;;AAajBN,cAAY,gBAAMK,SAAN,CAAgBE,KAbX;;AAiBjBN,aAAW,gBAAMI,SAAN,CAAgBG,MAjBV;AAkBjBN,SAAO,gBAAMG,SAAN,CAAgBI;AAlBN,C","sourcesContent":["import React, { Component } from 'react';\nimport { View } from './View';\nimport { DriverShape } from '../drivers/DriverShape';\n/*\n * ZoomIn Component adds zoom in effect to its children components.\n * Connect it to driver and pass the input range to animate it.\n * e.g.:\n * ...\n * const driver = new ScrollDriver();\n *\n * return (\n *  <ScrollView\n *    {...driver.scrollViewProps}\n *  >\n *    <ZoomIn\n *      driver={driver}\n *      inputRange={[100,150]}\n *      maxFactor={1.5}\n *    >\n *      <Image />\n *    </ZoomIn>\n *  </ScrollView>\n * );\n *\n * ...\n * Above code will create scroll dependent zoom in animation over Image component\n * from scroll 100, to scroll 150 where image has original size at scroll 100,\n * and is scaled by maxFactor at scroll 150\n */\nexport class ZoomIn extends Component {\n  static propTypes = {\n    /**\n     * An instance of animation driver, usually ScrollDriver\n     */\n    driver: DriverShape.isRequired,\n    /**\n     * Components to which an effect will be applied\n     */\n    children: React.PropTypes.node,\n    /**\n     * pair of [start, end] values from animation driver, how\n     * children would zoom in to maxFactor\n     */\n    inputRange: React.PropTypes.array,\n    /**\n     * To which factor children would zoom in\n     */\n    maxFactor: React.PropTypes.number,\n    style: React.PropTypes.object,\n  }\n\n  render() {\n    const { driver, children, inputRange = [0, 1], maxFactor = 1.5, style } = this.props;\n\n    return (\n      <View\n        driver={driver}\n        animationName=\"zoomIn\"\n        animationOptions={{ inputRange, maxFactor }}\n        style={style}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n"]}]