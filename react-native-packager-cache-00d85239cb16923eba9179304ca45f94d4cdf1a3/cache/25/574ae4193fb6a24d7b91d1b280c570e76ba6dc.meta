["f4229a8d5a124bc163660231600c364c30811fbd","87918c7bac0b05805b6d7b8a0ef0e2eff89aaee4",["react","prop-types","react-native","react-native-router-flux","react-native-hero","expo","react-redux","../../actions","react-native-elements","../../assets/Images/sssbackground.jpg"],[107,202,312,367,428,550,586,626,680,2150],{"version":3,"sources":["/home/ziddi/Desktop/venders/src/screens/drawer/DrawerContent.js"],"names":["get","height","width","box_count","box_height","styles","create","container","flex","flexDirection","box","box1","box2","backgroundColor","someButtonStyle","button","paddingVertical","buttonText","color","fontSize","fontWeight","DrawerContent","require","margin","marginLeft","alignItems","Home","Details","Logout","propTypes","name","string","sceneStyle","style","title","contextTypes","drawer","PropTypes","object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AACA;;sBAEuB,wBAAWA,GAAX,CAAe,QAAf,C;IAAjBC,M,mBAAAA,M;IAAOC,K,mBAAAA,K;;AACb,IAAIC,YAAY,CAAhB;AACA,IAAIC,aAAaH,SAASE,SAA1B;AACA,IAAME,SAAS,wBAAWC,MAAX,CAAkB;AAC/BC,aAAW;AACTC,UAAM,CADG;AAETC,mBAAe;AAFN,GADoB;AAK/BC,OAAK;AACHT,YAAQG;AADL,GAL0B;AAQ/BO,QAAM;AACJH,UAAK;AADD,GARyB;AAW/BI,QAAM;AACJJ,UAAK,CADD;AAEJK,qBAAiB;AAFb,GAXyB;AAe/BC,mBAAgB;AACdD,qBAAgB;AADF,GAfe;AAkB/BE,UAAQ;AACNb,WAAMA,KADA;AAENW,qBAAiB,MAFX;AAGNG,qBAAiB,EAHX;AAINP,mBAAe;AAJT,GAlBuB;AAwB/BQ,cAAY;AACVC,WAAO,MADG;AAEVC,cAAU,EAFA;AAGVC,gBAAY;AAHF;;AAxBmB,CAAlB,CAAf;;IAiCMC,a;;;;;;;;;;6BAWK;AACP,aACE;AAAA;AAAA,UAAM,OAAOhB,OAAOE,SAApB;AAEE;AAAA;AAAA,YAAM,OAAO,CAACF,OAAOK,GAAR,EAAaL,OAAOM,IAApB,CAAb;AACE;AACI,oBAAQW,QAAQ,uCAAR,CADZ;AAEI,2BAAe;AAAA,qBACb;AAAA;AAAA;AACA;AAAA;AAAA,oBAAM,OAAO,EAACH,UAAS,EAAV,EAAcC,YAAY,MAA1B,EAAkCF,OAAO,MAAzC,EAAiDK,QAAQ,EAAzD,EAAb;AAAA;AAAA,iBADA;AAEA;AAAA;AAAA,oBAAM,OAAO,EAACJ,UAAS,EAAV,EAAcC,YAAY,MAA1B,EAAkCF,OAAO,MAAzC,EAAgDM,YAAY,EAA5D,EAAb;AAAA;AAAA;AAFA,eADa;AAAA,aAFnB;AAQM,uBAAW,GARjB;AASM,0BAAa,SATnB;AAUM,0BAAc;AAVpB;AADF,SAFF;AAgBE;AAAA;AAAA,YAAM,OAAO,CAACnB,OAAOK,GAAR,EAAaL,OAAOO,IAApB,CAAb;AACE;AAAA;AAAA;AACE;AAAA;AAAA,gBAAM,OAAO,EAACa,YAAY,YAAb,EAAb;AACE;AAAA;AAAA,kBAAkB,eAAe,EAAjC,EAAqC,SAAS,mBAAI;AAAC,mDAAQC,IAAR;AAAe,mBAAlE;AACE;AAAA;AAAA,oBAAM,OAAOrB,OAAOU,MAApB;AACE;AACI,0BAAK,aADT;AAEI,0BAAK,UAFT;AAGI,2BAAM,MAHV;AAII,0BAAO;AAJX,oBADF;AAOE;AAAA;AAAA,sBAAM,OAAOV,OAAOY,UAApB;AAAA;AAAA;AAPF;AADF;AADF,aADF;AAcE;AAAA;AAAA,gBAAM,OAAO,EAACQ,YAAY,YAAb,EAAb;AACA;AAAA;AAAA,kBAAkB,eAAe,EAAjC,EAAqC,SAAS,mBAAI;AAAC,mDAAQE,OAAR;AAAkB,mBAArE;AACE;AAAA;AAAA,oBAAM,OAAOtB,OAAOU,MAApB;AACE;AACI,0BAAK,MADT;AAEI,2BAAM,MAFV;AAGI,0BAAO;AAHX,oBADF;AAME;AAAA;AAAA,sBAAM,OAAOV,OAAOY,UAApB;AAAA;AAAA;AANF;AADF;AADA,aAdF;AA0BA;AAAA;AAAA,gBAAM,OAAO,EAACQ,YAAY,YAAb,EAAb;AACA;AAAA;AAAA,kBAAkB,eAAe,EAAjC,EAAqC,SAAS,mBAAI;AAAC,mDAAQG,MAAR;AAAiB,mBAApE;AACE;AAAA;AAAA,oBAAM,OAAOvB,OAAOU,MAApB;AACE;AACI,0BAAK,QADT;AAEI,0BAAK,oBAFT;AAGI,2BAAM,MAHV;AAII,0BAAO;AAJX,oBADF;AAOE;AAAA;AAAA,sBAAM,OAAOV,OAAOY,UAApB;AAAA;AAAA;AAPF;AADF;AADA;AA1BA;AADF;AAhBF,OADF;AA6DD;;;4BAxEMY,S,GAAY;AACjBC,QAAM,oBAAUC,MADC;AAEjBC,cAAY,2BAAcC,KAFT;AAGjBC,SAAO,oBAAUH;AAHA,C,SAMZI,Y,GAAe;AACpBC,UAAQ,gBAAMC,SAAN,CAAgBC;AADJ,C;kBAoETjB,a","sourcesContent":["import React ,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View, ViewPropTypes, Dimensions , TouchableOpacity} from 'react-native';\nimport { Actions, ActionConst } from 'react-native-router-flux';\nimport Hero from 'react-native-hero';\nimport {Constants} from 'expo';\nimport { connect } from 'react-redux';\nimport { logIn} from '../../actions';\nimport {Button, Icon} from 'react-native-elements'\n\nvar { height,width } = Dimensions.get('window');\nvar box_count = 2;\nvar box_height = height / box_count;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  box: {\n    height: box_height\n  },\n  box1: {\n    flex:3,\n  },\n  box2: {\n    flex:9,\n    backgroundColor: '#000'\n  },\n  someButtonStyle:{\n    backgroundColor:\"transparent\"\n  },\n  button: {\n    width:width,\n    backgroundColor: \"#000\",\n    paddingVertical: 20,\n    flexDirection: 'row'\n  },\n  buttonText: {\n    color: \"#FFF\",\n    fontSize: 20,\n    fontWeight: '300'\n  },\n\n\n});\n\nclass DrawerContent extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    sceneStyle: ViewPropTypes.style,\n    title: PropTypes.string,\n  }\n\n  static contextTypes = {\n    drawer: React.PropTypes.object,\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n\n        <View style={[styles.box, styles.box1]}>\n          <Hero\n              source={require('../../assets/Images/sssbackground.jpg')}\n              renderOverlay={() => (\n                <View>\n                <Text style={{fontSize:40, fontWeight: \"bold\", color: \"#fff\", margin: 20}}>Welcome To</Text>\n                <Text style={{fontSize:40, fontWeight: \"bold\", color: \"#fff\",marginLeft: 20}}>SSS VendorsApp</Text>\n                </View>\n                )}\n                minHeight={200}\n                colorOverlay=\"#1bb4d8\"\n                colorOpacity={0.7}\n              />\n        </View>\n        <View style={[styles.box, styles.box2]}>\n          <View>\n            <View style={{alignItems: 'flex-start'}}>\n              <TouchableOpacity activeOpacity={.5} onPress={()=>{Actions.Home()}}>\n                <View style={styles.button}>\n                  <Icon\n                      name='sc-telegram'\n                      type='evilicon'\n                      color='#fff'\n                      size= {34}\n                    />\n                  <Text style={styles.buttonText} >Home</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n            <View style={{alignItems: 'flex-start'}}>\n            <TouchableOpacity activeOpacity={.5} onPress={()=>{Actions.Details()}}>\n              <View style={styles.button}>\n                <Icon\n                    name='sync'\n                    color='#fff'\n                    size= {34}\n                  />\n                <Text style={styles.buttonText} >Sync With CRM</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n          <View style={{alignItems: 'flex-start'}}>\n          <TouchableOpacity activeOpacity={.5} onPress={()=>{Actions.Logout()}}>\n            <View style={styles.button}>\n              <Icon\n                  name='logout'\n                  type='material-community'\n                  color='#fff'\n                  size= {34}\n                />\n              <Text style={styles.buttonText} >Logout</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n       </View>\n      </View>\n      </View >\n    );\n  }\n}\nexport default DrawerContent;\n"]}]