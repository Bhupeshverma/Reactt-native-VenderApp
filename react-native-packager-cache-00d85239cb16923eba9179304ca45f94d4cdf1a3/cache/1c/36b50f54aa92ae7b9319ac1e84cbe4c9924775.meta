["c453bec7944fcc39c9e695c82c4a8f22e1aedda3","41187427ddb6110f2b218032a8fd2c9f7b5d667f",["react-native","./DriverBase"],[127,172],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/@shoutem/animation/src/drivers/TimingDriver.js"],"names":["TimingDriver","options","animationOptions","easing","cubic","duration","runTimer","bind","toValue","endValue","onFinish","timing","value","start","console","warn"],"mappings":";;;;;AAAA;;AAKA;;IAqBaA,Y,WAAAA,Y;;;AACX,wBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAGnB,UAAKC,gBAAL;AACEC,cAAQ,oBAAOC,KADjB;AAEEC,gBAAU;AAFZ,OAGKJ,OAHL;;AAMA,UAAKK,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,OAAf;AAVmB;AAWpB;;;;4BAEOE,Q,EAAUC,Q,EAAU;AAC1B,4BAASC,MAAT,CACE,KAAKC,KADP;AAGIJ,iBAASC;AAHb,SAIO,KAAKP,gBAJZ,GAMEW,KANF,CAMQH,QANR;AAOD;;;6BAEQD,Q,EAAUC,Q,EAAU;AAC3BI,cAAQC,IAAR,CAAa,wDAAb;AACA,WAAKP,OAAL,CAAaC,QAAb,EAAuBC,QAAvB;AACD","sourcesContent":["import {\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { DriverBase } from './DriverBase';\n\n/**\n * Animation driver that creates animated value changed with time.\n * Pass instance to any @shoutem/animation animation to run it\n * e.g.:\n * driver = new TimingDriver({\n *   duration: 400 // 250 by default,\n *   easing: Easing.inOut // Easing.cubic is passed by default\n *   delay: 200 // 0 by default\n * });\n * return (\n *   <FadeIn driver={driver}>\n *     <Text>I'm fading in</Text>\n *   </FadeIn>\n * );\n * ...\n * Check\n * http://facebook.github.io/react-native/releases/0.30/docs/animations.html#core-api\n * for animation options\n */\nexport class TimingDriver extends DriverBase {\n  constructor(options) {\n    super();\n\n    this.animationOptions = {\n      easing: Easing.cubic,\n      duration: 250,\n      ...options,\n    };\n\n    this.runTimer = this.runTimer.bind(this);\n    this.toValue = this.toValue.bind(this);\n  }\n\n  toValue(endValue, onFinish) {\n    Animated.timing(\n      this.value,\n      {\n        toValue: endValue,\n        ...this.animationOptions,\n      }\n    ).start(onFinish);\n  }\n\n  runTimer(endValue, onFinish) {\n    console.warn('runTimer will be deprecated soon, use toValue instead.');\n    this.toValue(endValue, onFinish);\n  }\n}\n"]}]