["18714062bee892ab650a2e47178d7c8a0a9b91b8","da78e08fbb52753ff93891fe23ee255b45662759",["react","react-native","react-native-elements","react-redux","../../actions","react-native-router-flux","expo","regenerator-runtime","./bg1.jpg","./login1_mark.png","./login1_lock.png","./login1_person.png","../../assets/fonts/HelveticaNeueIt.ttf","../../assets/fonts/PoiretOne-Regular.ttf"],[87,184,237,290,330,386,436,479,663,696,741,788,1702,1783],{"version":3,"sources":["/home/ziddi/Desktop/venders/src/screens/Auth/login.js"],"names":["get","width","height","background","require","mark","lockIcon","personIcon","LoginScreen","props","state","email","Password","behavior","fontLoaded","loadAsync","setState","console","log","logIn","drawer","type","RESET","styles","container","markWrap","loginLogo","loginText","wrapper","inputWrap","iconWrap","icon","input","forgotPasswordText","_onPressButton","bind","button","buttonText","signupWrap","spinner","error","signupLinkText","unauthorized","sessionID","handleUser","mapStateToProps","auth","user","loggedOut","LogOutReducer","create","flex","flexGrow","justifyContent","alignItems","color","fontFamily","fontWeight","fontSize","paddingVertical","flexDirection","marginVertical","borderBottomWidth","borderBottomColor","marginHorizontal","opacity","backgroundColor","paddingHorizontal","sssicon","marginTop","borderRadius","textAlign","paddingRight","accountText","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Dimensions,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  ActivityIndicator,\n  KeyboardAvoidingView,\n  ScrollView,\n  StatusBar\n} from 'react-native';\nimport {Icon} from 'react-native-elements'\nimport { connect } from 'react-redux';\nimport { logIn } from '../../actions';\nimport {Actions, ActionConst} from 'react-native-router-flux'\n// import {withRouter, Redirect} from 'react-router-native'\nimport { Font } from 'expo';\nconst { width, height } = Dimensions.get(\"window\");\n\nconst background = require(\"./bg1.jpg\");\nconst mark = require(\"./login1_mark.png\");\nconst lockIcon = require(\"./login1_lock.png\");\nconst personIcon = require(\"./login1_person.png\");\n\nclass LoginScreen extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      email:'',\n      Password: '',\n      behavior: 'position',\n      fontLoaded: false,\n    }\n  }\n  async componentDidMount() {\n    await Font.loadAsync({\n      'Helvetica Neue': require('../../assets/fonts/HelveticaNeueIt.ttf'),\n      'Poiret One':require('../../assets/fonts/PoiretOne-Regular.ttf')\n    });\n    this.setState({ fontLoaded: true });\n  }\n  _onPressButton(){\n    const {email, Password} = this.state\n    console.log(email)\n    console.log(Password);\n    this.props.logIn(email, Password)\n  }\n  handleUser(){\n  Actions.drawer({type: ActionConst.RESET})\n  }\n  \n\n  render() {\n\n    return (\n      <ScrollView>\n      <View style={styles.container}>\n        <StatusBar\n          hidden={false}\n           barStyle = \"light-content\"\n          backgroundColor=\"black\"\n         />\n        <Image source={background} style={styles.background} resizeMode=\"cover\">\n          <View style={styles.markWrap}>\n            <Icon\n              name='lock'\n              color=\"#ff5252\"\n              size= {34}\n            />\n            {this.state.fontLoaded ? <Text style={styles.mark}>Street Style Store</Text>: null }\n          </View>\n          {this.state.fontLoaded ? <View style={styles.loginLogo}>\n              <Text style={styles.loginText}>Login</Text>\n          </View>: null}\n          <View style={styles.wrapper}>\n            <KeyboardAvoidingView behavior={this.state.behavior}>\n            <View style={styles.inputWrap}>\n              <View style={styles.iconWrap}>\n                <Image source={personIcon} style={styles.icon} resizeMode=\"contain\" />\n              </View>\n\n              <TextInput\n                placeholder=\"Username\"\n                placeholderTextColor=\"#FFF\"\n                underlineColorAndroid=\"transparent\"\n                style={styles.input}\n                onChangeText={(email) => this.setState({email})}\n                value={this.state.email}\n              />\n            </View>\n            <View style={styles.inputWrap}>\n              <View style={styles.iconWrap}>\n                <Image source={lockIcon} style={styles.icon} resizeMode=\"contain\" />\n              </View>\n              <TextInput\n                placeholderTextColor=\"#FFF\"\n                placeholder=\"Password\"\n                underlineColorAndroid=\"transparent\"\n                style={styles.input}\n                onChangeText={(Password) => this.setState({Password})}\n                value={this.state.Password}\n                secureTextEntry\n              />\n            </View>\n            <TouchableOpacity activeOpacity={.5}>\n              <View>\n                <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity activeOpacity={.5} onPress={this._onPressButton.bind(this)}>\n              <View style={styles.button}>\n                <Text style={styles.buttonText} >Sign In</Text>\n              </View>\n            </TouchableOpacity>\n            </KeyboardAvoidingView>\n          </View>\n\n          <View style={styles.container}>\n            <View style={styles.signupWrap}>\n\n\n                {this.props.spinner ? <ActivityIndicator size=\"large\"/>:<View></View>}\n                {this.props.error ? <Text style={styles.signupLinkText}> Couldn't log in !</Text>: <View></View>}\n                {this.props.unauthorized ? <Text style={styles.signupLinkText}> UnAuthorized</Text>:<View></View>}\n                {this.props.sessionID ? <View>{this.handleUser()}</View>:<View></View>}\n\n\n            </View>\n          </View>\n        </Image>\n      </View>\n</ScrollView>\n    );\n  }\n}\nfunction mapStateToProps(state){\n  return{\n    spinner: state.auth.spinner,\n    user:state.auth.user,\n    unauthorized:state.auth.unauthorized,\n    error: state.auth.error,\n    sessionID: state.auth.sessionID,\n    loggedOut: state.LogOutReducer.loggedOut\n  }\n\n};\n\nexport default connect(mapStateToProps, {\n logIn\n})(LoginScreen);\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n\n  },\n  markWrap: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  mark: {\n    color:\"#fff\",\n    fontFamily: 'Helvetica Neue',\n    fontWeight: \"400\",\n    fontSize: 24\n  },\n  background: {\n    width,\n    height,\n  },\n  wrapper: {\n    paddingVertical: 30,\n  },\n  loginLogo:{\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  loginText:{\n    color: \"#fff\",\n    fontWeight: \"500\",\n    fontSize: 36,\n    fontFamily: 'Poiret One'\n  },\n  inputWrap: {\n    flexDirection: \"row\",\n    marginVertical: 10,\n    height: 50,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#000\",\n    marginHorizontal: 20,\n    opacity: 0.5,\n    backgroundColor: '#555',\n  },\n  iconWrap: {\n    paddingHorizontal: 7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  sssicon:{\n    height: 20,\n    width: 20,\n    backgroundColor: \"transparent\",\n    paddingVertical: 10\n  },\n  icon: {\n    height: 20,\n    width: 20,\n  },\n  input: {\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n  button: {\n    backgroundColor: \"#ff5252\",\n    paddingVertical: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30,\n    marginHorizontal: 20,\n    height: 50,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: \"#FFF\",\n    fontSize: 18,\n  },\n  forgotPasswordText: {\n    color: \"#D8D8D8\",\n    backgroundColor: \"transparent\",\n    textAlign: \"right\",\n    paddingRight: 15,\n  },\n  signupWrap: {\n    backgroundColor: \"transparent\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  accountText: {\n    color: \"#D8D8D8\"\n  },\n  signupLinkText: {\n    fontSize: 20,\n    color: \"#FFF\",\n    marginLeft: 5,\n  }\n});\n"]}]