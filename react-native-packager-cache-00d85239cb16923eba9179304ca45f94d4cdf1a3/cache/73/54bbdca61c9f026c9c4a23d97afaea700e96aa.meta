["3b7341c630e571d6b21bde3bf7bbde6fa4b5af90","ce65f3df2954ef4c4f95bd99101615663496afa9",["react","./Slide","../../drivers/DriverShape"],[137,228,268],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/@shoutem/animation/src/animations/Slide/SlideOut.js"],"names":["SlideOut","props","driver","children","inputRange","style","to","propTypes","isRequired","PropTypes","node","array","string","object"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;IA2BaA,Q,WAAAA,Q;;;;;;;;;;6BAsBF;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAELC,MAFK,UAELA,MAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,qCAILC,UAJK;AAAA,UAILA,UAJK,qCAIQ,CAAC,CAAD,EAAI,CAAJ,CAJR;AAAA,UAKLC,KALK,UAKLA,KALK;AAAA,UAMLC,EANK,UAMLA,EANK;;;AASP,aACE;AAAA;AAAA;AACE,kBAAQJ,MADV;AAEE,yBAAc,UAFhB;AAGE,sBAAYE,UAHd;AAIE,qBAAWE,EAJb;AAKE,iBAAOD;AALT;AAOGF;AAPH,OADF;AAWD;;;4BAzCMI,S,GAAY;AAIjBL,UAAQ,yBAAYM,UAJH;;AAQjBL,YAAU,gBAAMM,SAAN,CAAgBC,IART;;AAajBN,cAAY,gBAAMK,SAAN,CAAgBE,KAbX;;AAiBjBL,MAAI,gBAAMG,SAAN,CAAgBG,MAjBH;AAkBjBP,SAAO,gBAAMI,SAAN,CAAgBI;AAlBN,C","sourcesContent":["import React, { Component } from 'react';\nimport { Slide } from './Slide';\nimport { DriverShape } from '../../drivers/DriverShape';\n\n/*\n * SlideOut Component adds slide out effect to its children components.\n * Connect it to driver and pass the input range to animate it.\n * e.g.:\n * ...\n * const driver = new ScrollDriver();\n *\n * return (\n *  <ScrollView\n *    {...driver.scrollViewProps}\n *  >\n *    <SlideOut\n *      driver={driver}\n *      inputRange={[100,150]}\n *      to=\"top left\"\n *    >\n *      <Image />\n *    </SlideOut>\n *  </ScrollView>\n * );\n *\n * ...\n * Above code will create scroll dependent slide out of an Image to\n * the top left corner of the screen between scroll position of 100 and 150\n */\nexport class SlideOut extends Component {\n  static propTypes = {\n    /**\n     * An instance of animation driver, usually ScrollDriver\n     */\n    driver: DriverShape.isRequired,\n    /**\n     * Components to which an effect will be applied\n     */\n    children: React.PropTypes.node,\n    /**\n     * pair of [start, end] values from animation driver, how\n     * children would slide out\n     */\n    inputRange: React.PropTypes.array,\n    /**\n     * position to where wrapped components should slide out\n     */\n    to: React.PropTypes.string,\n    style: React.PropTypes.object,\n  };\n\n  render() {\n    const {\n      driver,\n      children,\n      inputRange = [0, 1],\n      style,\n      to,\n    } = this.props;\n\n    return (\n      <Slide\n        driver={driver}\n        animationName=\"slideOut\"\n        inputRange={inputRange}\n        direction={to}\n        style={style}\n      >\n        {children}\n      </Slide>\n    );\n  }\n}\n"]}]