["1c93dee464224a7dae7bc4ccba47fc9baa91d2b7","1b7df1a67c2b8b343fae0daca103230327c1ca1e",["../maps/xml.json","../maps/entities.json"],[39,204],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/entities/lib/encode.js"],"names":["inverseXML","getInverseObj","require","xmlReplacer","getInverseReplacer","exports","XML","getInverse","inverseHTML","htmlReplacer","HTML","obj","Object","keys","sort","reduce","inverse","name","single","multiple","forEach","k","length","push","unshift","join","RegExp","re_nonASCII","re_astralSymbols","singleCharReplacer","c","charCodeAt","toString","toUpperCase","astralReplacer","high","low","codePoint","re","func","data","replace","re_xmlChars","escapeXML","escape"],"mappings":"AAAA,IAAIA,aAAaC,cAAcC,QAAQ,kBAAR,CAAd,CAAjB;AAAA,IACIC,cAAcC,mBAAmBJ,UAAnB,CADlB;;AAGAK,QAAQC,GAAR,GAAcC,WAAWP,UAAX,EAAuBG,WAAvB,CAAd;;AAEA,IAAIK,cAAcP,cAAcC,QAAQ,uBAAR,CAAd,CAAlB;AAAA,IACIO,eAAeL,mBAAmBI,WAAnB,CADnB;;AAGAH,QAAQK,IAAR,GAAeH,WAAWC,WAAX,EAAwBC,YAAxB,CAAf;;AAEA,SAASR,aAAT,CAAuBU,GAAvB,EAA2B;AAC1B,QAAOC,OAAOC,IAAP,CAAYF,GAAZ,EAAiBG,IAAjB,GAAwBC,MAAxB,CAA+B,UAASC,OAAT,EAAkBC,IAAlB,EAAuB;AAC5DD,UAAQL,IAAIM,IAAJ,CAAR,IAAqB,MAAMA,IAAN,GAAa,GAAlC;AACA,SAAOD,OAAP;AACA,EAHM,EAGJ,EAHI,CAAP;AAIA;;AAED,SAASZ,kBAAT,CAA4BY,OAA5B,EAAoC;AACnC,KAAIE,SAAS,EAAb;AAAA,KACIC,WAAW,EADf;;AAGAP,QAAOC,IAAP,CAAYG,OAAZ,EAAqBI,OAArB,CAA6B,UAASC,CAAT,EAAW;AACvC,MAAGA,EAAEC,MAAF,KAAa,CAAhB,EAAkB;AACjBJ,UAAOK,IAAP,CAAY,OAAOF,CAAnB;AACA,GAFD,MAEO;AACNF,YAASI,IAAT,CAAcF,CAAd;AACA;AACD,EAND;;AASAF,UAASK,OAAT,CAAiB,MAAMN,OAAOO,IAAP,CAAY,EAAZ,CAAN,GAAwB,GAAzC;;AAEA,QAAO,IAAIC,MAAJ,CAAWP,SAASM,IAAT,CAAc,GAAd,CAAX,EAA+B,GAA/B,CAAP;AACA;;AAED,IAAIE,cAAc,aAAlB;AAAA,IACIC,mBAAmB,iCADvB;;AAGA,SAASC,kBAAT,CAA4BC,CAA5B,EAA8B;AAC7B,QAAO,QAAQA,EAAEC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,EAA6BC,WAA7B,EAAR,GAAqD,GAA5D;AACA;;AAED,SAASC,cAAT,CAAwBJ,CAAxB,EAA0B;AAEzB,KAAIK,OAAOL,EAAEC,UAAF,CAAa,CAAb,CAAX;AACA,KAAIK,MAAON,EAAEC,UAAF,CAAa,CAAb,CAAX;AACA,KAAIM,YAAY,CAACF,OAAO,MAAR,IAAkB,KAAlB,GAA0BC,GAA1B,GAAgC,MAAhC,GAAyC,OAAzD;AACA,QAAO,QAAQC,UAAUL,QAAV,CAAmB,EAAnB,EAAuBC,WAAvB,EAAR,GAA+C,GAAtD;AACA;;AAED,SAAS1B,UAAT,CAAoBS,OAApB,EAA6BsB,EAA7B,EAAgC;AAC/B,UAASC,IAAT,CAActB,IAAd,EAAmB;AAClB,SAAOD,QAAQC,IAAR,CAAP;AACA;;AAED,QAAO,UAASuB,IAAT,EAAc;AACpB,SAAOA,KACJC,OADI,CACIH,EADJ,EACQC,IADR,EAEJE,OAFI,CAEIb,gBAFJ,EAEsBM,cAFtB,EAGJO,OAHI,CAGId,WAHJ,EAGiBE,kBAHjB,CAAP;AAIA,EALD;AAMA;;AAED,IAAIa,cAActC,mBAAmBJ,UAAnB,CAAlB;;AAEA,SAAS2C,SAAT,CAAmBH,IAAnB,EAAwB;AACvB,QAAOA,KACJC,OADI,CACIC,WADJ,EACiBb,kBADjB,EAEJY,OAFI,CAEIb,gBAFJ,EAEsBM,cAFtB,EAGJO,OAHI,CAGId,WAHJ,EAGiBE,kBAHjB,CAAP;AAIA;;AAEDxB,QAAQuC,MAAR,GAAiBD,SAAjB","sourcesContent":["var inverseXML = getInverseObj(require(\"../maps/xml.json\")),\n    xmlReplacer = getInverseReplacer(inverseXML);\n\nexports.XML = getInverse(inverseXML, xmlReplacer);\n\nvar inverseHTML = getInverseObj(require(\"../maps/entities.json\")),\n    htmlReplacer = getInverseReplacer(inverseHTML);\n\nexports.HTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj){\n\treturn Object.keys(obj).sort().reduce(function(inverse, name){\n\t\tinverse[obj[name]] = \"&\" + name + \";\";\n\t\treturn inverse;\n\t}, {});\n}\n\nfunction getInverseReplacer(inverse){\n\tvar single = [],\n\t    multiple = [];\n\n\tObject.keys(inverse).forEach(function(k){\n\t\tif(k.length === 1){\n\t\t\tsingle.push(\"\\\\\" + k);\n\t\t} else {\n\t\t\tmultiple.push(k);\n\t\t}\n\t});\n\n\t//TODO add ranges\n\tmultiple.unshift(\"[\" + single.join(\"\") + \"]\");\n\n\treturn new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar re_nonASCII = /[^\\0-\\x7F]/g,\n    re_astralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction singleCharReplacer(c){\n\treturn \"&#x\" + c.charCodeAt(0).toString(16).toUpperCase() + \";\";\n}\n\nfunction astralReplacer(c){\n\t// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar high = c.charCodeAt(0);\n\tvar low  = c.charCodeAt(1);\n\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\treturn \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re){\n\tfunction func(name){\n\t\treturn inverse[name];\n\t}\n\n\treturn function(data){\n\t\treturn data\n\t\t\t\t.replace(re, func)\n\t\t\t\t.replace(re_astralSymbols, astralReplacer)\n\t\t\t\t.replace(re_nonASCII, singleCharReplacer);\n\t};\n}\n\nvar re_xmlChars = getInverseReplacer(inverseXML);\n\nfunction escapeXML(data){\n\treturn data\n\t\t\t.replace(re_xmlChars, singleCharReplacer)\n\t\t\t.replace(re_astralSymbols, astralReplacer)\n\t\t\t.replace(re_nonASCII, singleCharReplacer);\n}\n\nexports.escape = escapeXML;\n"]}]