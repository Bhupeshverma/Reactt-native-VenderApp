["8658a167fdc0897dbe8cca7f6000a0e69faa0bc7","fceaebc7342da73871d96d3be8f47babeb928daf",["react","prop-types","react-native","./config/ViewPropTypes"],[151,246,356,403],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-tab-navigator/TabNavigatorItem.js"],"names":["TabNavigatorItem","child","Children","only","props","children","cloneElement","style","Component","propTypes","renderIcon","func","renderSelectedIcon","badgeText","oneOfType","string","number","renderBadge","title","titleStyle","selectedTitleStyle","tabStyle","selected","bool","onPress","allowFontScaling","defaultProps"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AACA;;AAKA;;;;IAEqBA,gB;;;;;;;;;;6BAkBV;AACP,UAAIC,QAAQ,gBAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CAAZ;AACA,aAAO,gBAAMC,YAAN,CAAmBL,KAAnB,EAA0B;AAC/BM,eAAO,CAACN,MAAMG,KAAN,CAAYG,KAAb,EAAoB,KAAKH,KAAL,CAAWG,KAA/B;AADwB,OAA1B,CAAP;AAGD;;;EAvB2C,gBAAMC,S,UAC3CC,S,GAAY;AACjBC,cAAY,oBAAUC,IADL;AAEjBC,sBAAoB,oBAAUD,IAFb;AAGjBE,aAAW,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,MAA7B,CAApB,CAHM;AAIjBC,eAAa,oBAAUN,IAJN;AAKjBO,SAAO,oBAAUH,MALA;AAMjBI,cAAY,kBAAKV,SAAL,CAAeF,KANV;AAOjBa,sBAAoB,kBAAKX,SAAL,CAAeF,KAPlB;AAQjBc,YAAU,wBAAcd,KARP;AASjBe,YAAU,oBAAUC,IATH;AAUjBC,WAAS,oBAAUb,IAVF;AAWjBc,oBAAkB,oBAAUF;AAXX,C,SAcZG,Y,GAAe,E;kBAfH1B,gB","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  View,\n} from 'react-native';\n\nimport ViewPropTypes from './config/ViewPropTypes';\n\nexport default class TabNavigatorItem extends React.Component {\n  static propTypes = {\n    renderIcon: PropTypes.func,\n    renderSelectedIcon: PropTypes.func,\n    badgeText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    renderBadge: PropTypes.func,\n    title: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    selectedTitleStyle: Text.propTypes.style,\n    tabStyle: ViewPropTypes.style,\n    selected: PropTypes.bool,\n    onPress: PropTypes.func,\n    allowFontScaling: PropTypes.bool,\n  };\n\n  static defaultProps = {\n  };\n\n  render() {\n    let child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: [child.props.style, this.props.style],\n    });\n  }\n}\n"]}]