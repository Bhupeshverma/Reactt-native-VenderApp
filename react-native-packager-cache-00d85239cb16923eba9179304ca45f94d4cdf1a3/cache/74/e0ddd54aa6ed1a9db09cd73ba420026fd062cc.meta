["8a2b3b62e12c98a9d4cc37f43a0fdcd8425fb9e6","7350b3d5a240c6e7f2d0edde83f3017d4fa96c1f",["./../utils","./../core/settle","./../helpers/buildURL","./../helpers/parseHeaders","./../helpers/isURLSameOrigin","../core/createError","./../helpers/btoa","./../helpers/cookies"],[35,71,115,168,228,287,406,2842],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/axios/lib/adapters/xhr.js"],"names":["utils","require","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","window","bind","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","loadEvent","xDomain","process","env","NODE_ENV","XDomainRequest","url","onprogress","handleProgress","ontimeout","handleTimeout","auth","username","password","Authorization","open","method","toUpperCase","params","paramsSerializer","timeout","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onerror","handleError","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQ,YAAR,CAAZ;AACA,IAAIC,SAASD,QAAQ,kBAAR,CAAb;AACA,IAAIE,WAAWF,QAAQ,uBAAR,CAAf;AACA,IAAIG,eAAeH,QAAQ,2BAAR,CAAnB;AACA,IAAII,kBAAkBJ,QAAQ,8BAAR,CAAtB;AACA,IAAIK,cAAcL,QAAQ,qBAAR,CAAlB;AACA,IAAIM,OAAQ,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,OAAOD,IAAxC,IAAgDC,OAAOD,IAAP,CAAYE,IAAZ,CAAiBD,MAAjB,CAAjD,IAA8EP,QAAQ,mBAAR,CAAzF;;AAEAS,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC3C,SAAO,IAAIC,OAAJ,CAAY,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,MAArC,EAA6C;AAC9D,QAAIC,cAAcL,OAAOM,IAAzB;AACA,QAAIC,iBAAiBP,OAAOQ,OAA5B;;AAEA,QAAIrB,MAAMsB,UAAN,CAAiBJ,WAAjB,CAAJ,EAAmC;AACjC,aAAOE,eAAe,cAAf,CAAP;AACD;;AAED,QAAIG,UAAU,IAAIC,cAAJ,EAAd;AACA,QAAIC,YAAY,oBAAhB;AACA,QAAIC,UAAU,KAAd;;AAKA,QAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IACA,OAAOrB,MAAP,KAAkB,WADlB,IAEAA,OAAOsB,cAFP,IAEyB,EAAE,qBAAqBP,OAAvB,CAFzB,IAGA,CAAClB,gBAAgBQ,OAAOkB,GAAvB,CAHL,EAGkC;AAChCR,gBAAU,IAAIf,OAAOsB,cAAX,EAAV;AACAL,kBAAY,QAAZ;AACAC,gBAAU,IAAV;AACAH,cAAQS,UAAR,GAAqB,SAASC,cAAT,GAA0B,CAAE,CAAjD;AACAV,cAAQW,SAAR,GAAoB,SAASC,aAAT,GAAyB,CAAE,CAA/C;AACD;;AAGD,QAAItB,OAAOuB,IAAX,EAAiB;AACf,UAAIC,WAAWxB,OAAOuB,IAAP,CAAYC,QAAZ,IAAwB,EAAvC;AACA,UAAIC,WAAWzB,OAAOuB,IAAP,CAAYE,QAAZ,IAAwB,EAAvC;AACAlB,qBAAemB,aAAf,GAA+B,WAAWhC,KAAK8B,WAAW,GAAX,GAAiBC,QAAtB,CAA1C;AACD;;AAEDf,YAAQiB,IAAR,CAAa3B,OAAO4B,MAAP,CAAcC,WAAd,EAAb,EAA0CvC,SAASU,OAAOkB,GAAhB,EAAqBlB,OAAO8B,MAA5B,EAAoC9B,OAAO+B,gBAA3C,CAA1C,EAAwG,IAAxG;;AAGArB,YAAQsB,OAAR,GAAkBhC,OAAOgC,OAAzB;;AAGAtB,YAAQE,SAAR,IAAqB,SAASqB,UAAT,GAAsB;AACzC,UAAI,CAACvB,OAAD,IAAaA,QAAQwB,UAAR,KAAuB,CAAvB,IAA4B,CAACrB,OAA9C,EAAwD;AACtD;AACD;;AAMD,UAAIH,QAAQyB,MAAR,KAAmB,CAAnB,IAAwB,EAAEzB,QAAQ0B,WAAR,IAAuB1B,QAAQ0B,WAAR,CAAoBC,OAApB,CAA4B,OAA5B,MAAyC,CAAlE,CAA5B,EAAkG;AAChG;AACD;;AAGD,UAAIC,kBAAkB,2BAA2B5B,OAA3B,GAAqCnB,aAAamB,QAAQ6B,qBAAR,EAAb,CAArC,GAAqF,IAA3G;AACA,UAAIC,eAAe,CAACxC,OAAOyC,YAAR,IAAwBzC,OAAOyC,YAAP,KAAwB,MAAhD,GAAyD/B,QAAQgC,YAAjE,GAAgFhC,QAAQiC,QAA3G;AACA,UAAIA,WAAW;AACbrC,cAAMkC,YADO;;AAGbL,gBAAQzB,QAAQyB,MAAR,KAAmB,IAAnB,GAA0B,GAA1B,GAAgCzB,QAAQyB,MAHnC;AAIbS,oBAAYlC,QAAQyB,MAAR,KAAmB,IAAnB,GAA0B,YAA1B,GAAyCzB,QAAQkC,UAJhD;AAKbpC,iBAAS8B,eALI;AAMbtC,gBAAQA,MANK;AAObU,iBAASA;AAPI,OAAf;;AAUArB,aAAOc,OAAP,EAAgBC,MAAhB,EAAwBuC,QAAxB;;AAGAjC,gBAAU,IAAV;AACD,KA9BD;;AAiCAA,YAAQmC,OAAR,GAAkB,SAASC,WAAT,GAAuB;AAGvC1C,aAAOX,YAAY,eAAZ,EAA6BO,MAA7B,EAAqC,IAArC,EAA2CU,OAA3C,CAAP;;AAGAA,gBAAU,IAAV;AACD,KAPD;;AAUAA,YAAQW,SAAR,GAAoB,SAASC,aAAT,GAAyB;AAC3ClB,aAAOX,YAAY,gBAAgBO,OAAOgC,OAAvB,GAAiC,aAA7C,EAA4DhC,MAA5D,EAAoE,cAApE,EACLU,OADK,CAAP;;AAIAA,gBAAU,IAAV;AACD,KAND;;AAWA,QAAIvB,MAAM4D,oBAAN,EAAJ,EAAkC;AAChC,UAAIC,UAAU5D,QAAQ,sBAAR,CAAd;;AAGA,UAAI6D,YAAY,CAACjD,OAAOkD,eAAP,IAA0B1D,gBAAgBQ,OAAOkB,GAAvB,CAA3B,KAA2DlB,OAAOmD,cAAlE,GACZH,QAAQI,IAAR,CAAapD,OAAOmD,cAApB,CADY,GAEZE,SAFJ;;AAIA,UAAIJ,SAAJ,EAAe;AACb1C,uBAAeP,OAAOsD,cAAtB,IAAwCL,SAAxC;AACD;AACF;;AAGD,QAAI,sBAAsBvC,OAA1B,EAAmC;AACjCvB,YAAMoE,OAAN,CAAchD,cAAd,EAA8B,SAASiD,gBAAT,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoC;AAChE,YAAI,OAAOrD,WAAP,KAAuB,WAAvB,IAAsCqD,IAAIC,WAAJ,OAAsB,cAAhE,EAAgF;AAE9E,iBAAOpD,eAAemD,GAAf,CAAP;AACD,SAHD,MAGO;AAELhD,kBAAQ8C,gBAAR,CAAyBE,GAAzB,EAA8BD,GAA9B;AACD;AACF,OARD;AASD;;AAGD,QAAIzD,OAAOkD,eAAX,EAA4B;AAC1BxC,cAAQwC,eAAR,GAA0B,IAA1B;AACD;;AAGD,QAAIlD,OAAOyC,YAAX,EAAyB;AACvB,UAAI;AACF/B,gBAAQ+B,YAAR,GAAuBzC,OAAOyC,YAA9B;AACD,OAFD,CAEE,OAAOmB,CAAP,EAAU;AAGV,YAAI5D,OAAOyC,YAAP,KAAwB,MAA5B,EAAoC;AAClC,gBAAMmB,CAAN;AACD;AACF;AACF;;AAGD,QAAI,OAAO5D,OAAO6D,kBAAd,KAAqC,UAAzC,EAAqD;AACnDnD,cAAQoD,gBAAR,CAAyB,UAAzB,EAAqC9D,OAAO6D,kBAA5C;AACD;;AAGD,QAAI,OAAO7D,OAAO+D,gBAAd,KAAmC,UAAnC,IAAiDrD,QAAQsD,MAA7D,EAAqE;AACnEtD,cAAQsD,MAAR,CAAeF,gBAAf,CAAgC,UAAhC,EAA4C9D,OAAO+D,gBAAnD;AACD;;AAED,QAAI/D,OAAOiE,WAAX,EAAwB;AAEtBjE,aAAOiE,WAAP,CAAmBC,OAAnB,CAA2BC,IAA3B,CAAgC,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC1D,YAAI,CAAC3D,OAAL,EAAc;AACZ;AACD;;AAEDA,gBAAQ4D,KAAR;AACAlE,eAAOiE,MAAP;;AAEA3D,kBAAU,IAAV;AACD,OATD;AAUD;;AAED,QAAIL,gBAAgBgD,SAApB,EAA+B;AAC7BhD,oBAAc,IAAd;AACD;;AAGDK,YAAQ6D,IAAR,CAAalE,WAAb;AACD,GAvKM,CAAP;AAwKD,CAzKD","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"]}]