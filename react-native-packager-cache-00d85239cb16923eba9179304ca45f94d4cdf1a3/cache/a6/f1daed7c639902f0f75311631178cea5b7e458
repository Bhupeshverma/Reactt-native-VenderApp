Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;
var _jsxFileName = '/home/ziddi/Desktop/venders/node_modules/react-native-material-cards/CardTitle.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var CardTitle = function (_Component) {
  babelHelpers.inherits(CardTitle, _Component);

  function CardTitle() {
    babelHelpers.classCallCheck(this, CardTitle);
    return babelHelpers.possibleConstructorReturn(this, (CardTitle.__proto__ || Object.getPrototypeOf(CardTitle)).apply(this, arguments));
  }

  babelHelpers.createClass(CardTitle, [{
    key: 'render',
    value: function render() {
      var newStyle = this.props.style || {};
      var titleStyle = [styles.titleText];
      var subtitleStyle = [styles.subtitleText];
      if (this.props.title !== undefined && this.props.subtitle !== undefined && this.props.avatarSource === undefined) {
        if (this.props.subtitleAbove === true) {
          subtitleStyle = [].concat(babelHelpers.toConsumableArray(subtitleStyle), [{ marginBottom: 12 }]);
        } else {
          titleStyle = [].concat(babelHelpers.toConsumableArray(titleStyle), [{ marginBottom: 12 }]);
        }
      }
      if (this.props.isDark) {
        subtitleStyle = [].concat(babelHelpers.toConsumableArray(subtitleStyle), [styles.lightText]);
        titleStyle = [].concat(babelHelpers.toConsumableArray(titleStyle), [styles.lightText]);
      } else {
        titleStyle = [].concat(babelHelpers.toConsumableArray(titleStyle), [styles.darkText]);
      }
      if (this.props.subtitleAbove !== true) {
        return _react2.default.createElement(
          _reactNative.View,
          { style: [styles.cardTitle, newStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          this.props.avatarSource !== undefined && _react2.default.createElement(_reactNative.Image, { source: this.props.avatarSource, resizeMode: 'stretch', style: styles.avatarStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            { style: styles.cardTitleTextCont, __source: {
                fileName: _jsxFileName,
                lineNumber: 35
              }
            },
            this.props.title !== undefined && _react2.default.createElement(
              _reactNative.Text,
              { style: this.props.avatarSource === undefined ? titleStyle : [titleStyle, { fontSize: 14 }], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              this.props.title
            ),
            this.props.subtitle !== undefined && _react2.default.createElement(
              _reactNative.Text,
              { style: subtitleStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40
                }
              },
              this.props.subtitle
            )
          )
        );
      } else {
        return _react2.default.createElement(
          _reactNative.View,
          { style: [styles.cardTitle, newStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          this.props.avatarSource !== undefined && _react2.default.createElement(_reactNative.Image, { source: this.props.avatarSource, resizeMode: 'stretch', style: styles.avatarStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 50
            }
          }),
          _react2.default.createElement(
            _reactNative.View,
            { style: styles.cardTitleTextCont, __source: {
                fileName: _jsxFileName,
                lineNumber: 52
              }
            },
            this.props.subtitle !== undefined && _react2.default.createElement(
              _reactNative.Text,
              { style: subtitleStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 54
                }
              },
              this.props.subtitle
            ),
            this.props.title !== undefined && _react2.default.createElement(
              _reactNative.Text,
              { style: this.props.avatarSource === undefined ? titleStyle : [titleStyle, { fontSize: 14 }], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 57
                }
              },
              this.props.title
            )
          )
        );
      }
    }
  }]);
  return CardTitle;
}(_react.Component);

exports.default = CardTitle;


var styles = _reactNative.StyleSheet.create({
  darkText: {
    color: 'rgba(0 ,0 ,0 , 0.87)'
  },
  lightText: {
    color: 'rgba(255 ,255 ,255 , 0.87)'
  },
  cardTitle: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'flex-start',
    paddingRight: 16,
    paddingLeft: 16,
    paddingBottom: 16,
    paddingTop: 16
  },
  cardTitleTextCont: {
    flex: 1,
    flexDirection: 'column'
  },
  titleText: {
    fontSize: 24
  },
  subtitleText: {
    fontSize: 14,
    color: 'rgba(0 ,0 ,0 , 0.38)'
  },
  avatarStyle: {
    width: 40,
    height: 40,
    borderRadius: 150,
    marginRight: 16
  }
});