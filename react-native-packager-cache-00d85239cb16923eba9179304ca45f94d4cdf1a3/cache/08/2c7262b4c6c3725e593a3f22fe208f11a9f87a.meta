["65ba9d5a17f5bcf7c8b03d63c1217e3c970e6664","8619c99ecef06cc31837cefd3bd4c32f444634c6",["react","react-native","./Layout"],[151,248,288],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-tab-navigator/Badge.js"],"names":["Badge","props","context","state","computedSize","_handleLayout","bind","style","opacity","width","Math","max","height","styles","container","children","event","nativeEvent","layout","setState","onLayout","Component","propTypes","create","fontSize","color","backgroundColor","lineHeight","textAlign","borderWidth","pixel","borderColor","borderRadius","overflow"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;AAKA;;;;IAEqBA,K;;;AAGnB,iBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,0HACpBD,KADoB,EACbC,OADa;;AAAA,UAM5BC,KAN4B,GAMpB;AACNC,oBAAc;AADR,KANoB;;;AAG1B,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AAH0B;AAI3B;;;;6BAMQ;AAAA,UACDF,YADC,GACgB,KAAKD,KADrB,CACDC,YADC;;AAEP,UAAIG,QAAQ,EAAZ;AACA,UAAI,CAACH,YAAL,EAAmB;AACjBG,cAAMC,OAAN,GAAgB,CAAhB;AACD,OAFD,MAEO;AACLD,cAAME,KAAN,GAAcC,KAAKC,GAAL,CAASP,aAAaQ,MAAtB,EAA8BR,aAAaK,KAA3C,CAAd;AACD;;AAED,aACE;AAAA;AAAA,iCACM,KAAKR,KADX;AAEE,yBAAe,CAFjB;AAGE,oBAAU,KAAKI,aAHjB;AAIE,iBAAO,CAACQ,OAAOC,SAAR,EAAmB,KAAKb,KAAL,CAAWM,KAA9B,EAAqCA,KAArC,CAJT;AAKG,aAAKN,KAAL,CAAWc;AALd,OADF;AASD;;;kCAEaC,K,EAAO;AAAA,kCACKA,MAAMC,WAAN,CAAkBC,MADvB;AAAA,UACbT,KADa,yBACbA,KADa;AAAA,UACNG,MADM,yBACNA,MADM;AAAA,UAEbR,YAFa,GAEI,KAAKD,KAFT,CAEbC,YAFa;;AAGnB,UAAIA,gBAAgBA,aAAaQ,MAAb,KAAwBA,MAAxC,IACFR,aAAaK,KAAb,KAAuBA,KADzB,EACgC;AAC9B;AACD;;AAED,WAAKU,QAAL,CAAc;AACZf,sBAAc,EAAEK,YAAF,EAASG,cAAT;AADF,OAAd;;AAIA,UAAI,KAAKX,KAAL,CAAWmB,QAAf,EAAyB;AACvB,aAAKnB,KAAL,CAAWmB,QAAX,CAAoBJ,KAApB;AACD;AACF;;;EAhDgC,gBAAMK,S,UAChCC,S,GAAY,kBAAKA,S;kBADLtB,K;;;AAmDrB,IAAIa,SAAS,wBAAWU,MAAX,CAAkB;AAC7BT,aAAW;AACTU,cAAU,EADD;AAETC,WAAO,MAFE;AAGTC,qBAAiB,kBAHR;AAITC,gBAAY,EAJH;AAKTC,eAAW,QALF;AAMTC,iBAAa,IAAI,iBAAOC,KANf;AAOTC,iBAAa,SAPJ;AAQTC,kBAAc,KAAK,CARV;AASTC,cAAU;AATD;AADkB,CAAlB,CAAb","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  Text,\n} from 'react-native';\n\nimport Layout from './Layout';\n\nexport default class Badge extends React.Component {\n  static propTypes = Text.propTypes;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._handleLayout = this._handleLayout.bind(this);\n  }\n\n  state = {\n    computedSize: null,\n  };\n\n  render() {\n    let { computedSize } = this.state;\n    let style = {};\n    if (!computedSize) {\n      style.opacity = 0;\n    } else {\n      style.width = Math.max(computedSize.height, computedSize.width);\n    }\n\n    return (\n      <Text\n        {...this.props}\n        numberOfLines={1}\n        onLayout={this._handleLayout}\n        style={[styles.container, this.props.style, style]}>\n        {this.props.children}\n      </Text>\n    );\n  }\n\n  _handleLayout(event) {\n    let { width, height } = event.nativeEvent.layout;\n    let { computedSize } = this.state;\n    if (computedSize && computedSize.height === height &&\n      computedSize.width === width) {\n      return;\n    }\n\n    this.setState({\n      computedSize: { width, height },\n    });\n\n    if (this.props.onLayout) {\n      this.props.onLayout(event);\n    }\n  }\n}\n\nlet styles = StyleSheet.create({\n  container: {\n    fontSize: 12,\n    color: '#fff',\n    backgroundColor: 'rgb(0, 122, 255)',\n    lineHeight: 15,\n    textAlign: 'center',\n    borderWidth: 1 + Layout.pixel,\n    borderColor: '#fefefe',\n    borderRadius: 17 / 2,\n    overflow: 'hidden',\n  },\n});\n"]}]