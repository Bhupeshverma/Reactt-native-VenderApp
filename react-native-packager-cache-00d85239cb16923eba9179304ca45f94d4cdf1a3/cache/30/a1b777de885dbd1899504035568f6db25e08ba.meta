["df5902bf37558495039bbe2375aab6878403bf8e","96d6bd3c4ff972627a403772c7a5bcd2fbaa6560",["react","react-native","./HeaderTitle","./HeaderBackButton","./HeaderStyleInterpolator"],[151,248,293,415,559],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-navigation/src/views/Header.js"],"names":["APPBAR_HEIGHT","OS","STATUSBAR_HEIGHT","TITLE_OFFSET","Header","state","widths","_renderTitleComponent","props","details","getScreenDetails","scene","headerTitle","options","titleString","_getHeaderTitleString","titleStyle","headerTitleStyle","color","headerTintColor","onLayoutIOS","e","setState","key","nativeEvent","layout","width","undefined","_renderLeftComponent","headerLeft","index","backButtonTitle","_getBackButtonTitleString","truncatedBackButtonTitle","_getTruncatedBackButtonTitle","initWidth","navigation","goBack","headerPressColorAndroid","headerBackTitleStyle","_renderRightComponent","headerRight","sceneOptions","title","scenes","find","s","lastScene","_getLastScene","headerBackTitle","headerTruncatedBackTitle","_renderSubView","forLeft","style","hasLeftComponent","left","hasRightComponent","right","forCenter","forRight","name","renderer","styleInterpolator","isStale","offset","Math","abs","subView","pointerEvents","styles","item","_renderLeft","_renderRight","_renderTitle","absoluteFill","header","appBar","mode","scenesProps","map","position","progress","_renderHeader","Value","screenProps","rest","headerStyle","container","PureComponent","HEIGHT","create","paddingTop","backgroundColor","height","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","elevation","flex","flexDirection","justifyContent","alignItems","bottom","top"],"mappings":"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","sourcesContent":["/* @flow */\n\n'no babel-plugin-flow-react-proptypes';\n\nimport React from 'react';\n\nimport { Animated, Platform, StyleSheet, View } from 'react-native';\n\nimport HeaderTitle from './HeaderTitle';\nimport HeaderBackButton from './HeaderBackButton';\nimport HeaderStyleInterpolator from './HeaderStyleInterpolator';\n\nimport type {\n  NavigationScene,\n  NavigationStyleInterpolator,\n  LayoutEvent,\n  HeaderProps,\n} from '../TypeDefinition';\n\ntype SceneProps = {\n  scene: NavigationScene,\n  position: Animated.Value,\n  progress: Animated.Value,\n};\n\ntype SubViewRenderer = (props: SceneProps) => ?React.Element<any>;\n\ntype SubViewName = 'left' | 'title' | 'right';\n\ntype HeaderState = {\n  widths: {\n    [key: string]: number,\n  },\n};\n\nconst APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;\nconst STATUSBAR_HEIGHT = Platform.OS === 'ios' ? 20 : 0;\nconst TITLE_OFFSET = Platform.OS === 'ios' ? 70 : 40;\n\nclass Header extends React.PureComponent<void, HeaderProps, HeaderState> {\n  static HEIGHT = APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n\n  state = {\n    widths: {},\n  };\n\n  _getHeaderTitleString(scene: NavigationScene): ?string {\n    const sceneOptions = this.props.getScreenDetails(scene).options;\n    if (typeof sceneOptions.headerTitle === 'string') {\n      return sceneOptions.headerTitle;\n    }\n    return sceneOptions.title;\n  }\n\n  _getLastScene(scene: NavigationScene): ?NavigationScene {\n    return this.props.scenes.find((s: *) => s.index === scene.index - 1);\n  }\n\n  _getBackButtonTitleString(scene: NavigationScene): ?string {\n    const lastScene = this._getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    const { headerBackTitle } = this.props.getScreenDetails(lastScene).options;\n    if (headerBackTitle || headerBackTitle === null) {\n      return headerBackTitle;\n    }\n    return this._getHeaderTitleString(lastScene);\n  }\n\n  _getTruncatedBackButtonTitle(scene: NavigationScene): ?string {\n    const lastScene = this._getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    return this.props.getScreenDetails(lastScene).options\n      .headerTruncatedBackTitle;\n  }\n\n  _renderTitleComponent = (props: SceneProps) => {\n    const details = this.props.getScreenDetails(props.scene);\n    const headerTitle = details.options.headerTitle;\n    if (headerTitle && typeof headerTitle !== 'string') {\n      return headerTitle;\n    }\n    const titleString = this._getHeaderTitleString(props.scene);\n\n    const titleStyle = details.options.headerTitleStyle;\n    const color = details.options.headerTintColor;\n\n    // On iOS, width of left/right components depends on the calculated\n    // size of the title.\n    const onLayoutIOS = Platform.OS === 'ios'\n      ? (e: LayoutEvent) => {\n          this.setState({\n            widths: {\n              ...this.state.widths,\n              [props.scene.key]: e.nativeEvent.layout.width,\n            },\n          });\n        }\n      : undefined;\n\n    return (\n      <HeaderTitle\n        onLayout={onLayoutIOS}\n        style={[color ? { color } : null, titleStyle]}\n      >\n        {titleString}\n      </HeaderTitle>\n    );\n  };\n\n  _renderLeftComponent = (props: SceneProps) => {\n    const options = this.props.getScreenDetails(props.scene).options;\n    if (typeof options.headerLeft !== 'undefined') {\n      return options.headerLeft;\n    }\n    if (props.scene.index === 0) {\n      return null;\n    }\n    const backButtonTitle = this._getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this._getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n    return (\n      <HeaderBackButton\n        onPress={() => {\n          this.props.navigation.goBack(null);\n        }}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        titleStyle={options.headerBackTitleStyle}\n        width={width}\n      />\n    );\n  };\n\n  _renderRightComponent = (props: SceneProps) => {\n    const details = this.props.getScreenDetails(props.scene);\n    const { headerRight } = details.options;\n    return headerRight || null;\n  };\n\n  _renderLeft(props: SceneProps): ?React.Element<*> {\n    return this._renderSubView(\n      props,\n      'left',\n      this._renderLeftComponent,\n      HeaderStyleInterpolator.forLeft\n    );\n  }\n\n  _renderTitle(props: SceneProps, options: *): ?React.Element<*> {\n    const style = {};\n\n    if (Platform.OS === 'android') {\n      if (!options.hasLeftComponent) {\n        style.left = 0;\n      }\n      if (!options.hasRightComponent) {\n        style.right = 0;\n      }\n    }\n\n    return this._renderSubView(\n      { ...props, style },\n      'title',\n      this._renderTitleComponent,\n      HeaderStyleInterpolator.forCenter\n    );\n  }\n\n  _renderRight(props: SceneProps): ?React.Element<*> {\n    return this._renderSubView(\n      props,\n      'right',\n      this._renderRightComponent,\n      HeaderStyleInterpolator.forRight\n    );\n  }\n\n  _renderSubView(\n    props: SceneProps,\n    name: SubViewName,\n    renderer: SubViewRenderer,\n    styleInterpolator: NavigationStyleInterpolator\n  ): ?React.Element<*> {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const subView = renderer(props);\n\n    if (subView == null) {\n      return null;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <Animated.View\n        pointerEvents={pointerEvents}\n        key={`${name}_${key}`}\n        style={[\n          styles.item,\n          styles[name],\n          props.style,\n          styleInterpolator({\n            // todo: determine if we really need to splat all this.props\n            ...this.props,\n            ...props,\n          }),\n        ]}\n      >\n        {subView}\n      </Animated.View>\n    );\n  }\n\n  _renderHeader(props: SceneProps): React.Element<*> {\n    const left = this._renderLeft(props);\n    const right = this._renderRight(props);\n    const title = this._renderTitle(props, {\n      hasLeftComponent: !!left,\n      hasRightComponent: !!right,\n    });\n\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, styles.header]}\n        key={`scene_${props.scene.key}`}\n      >\n        {title}\n        {left}\n        {right}\n      </View>\n    );\n  }\n\n  render() {\n    let appBar;\n\n    if (this.props.mode === 'float') {\n      const scenesProps: Array<\n        SceneProps\n      > = this.props.scenes.map((scene: NavigationScene) => ({\n        position: this.props.position,\n        progress: this.props.progress,\n        scene,\n      }));\n      appBar = scenesProps.map(this._renderHeader, this);\n    } else {\n      appBar = this._renderHeader({\n        position: new Animated.Value(this.props.scene.index),\n        progress: new Animated.Value(0),\n        scene: this.props.scene,\n      });\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const {\n      scenes,\n      scene,\n      position,\n      screenProps,\n      progress,\n      style,\n      ...rest\n    } = this.props;\n\n    const { options } = this.props.getScreenDetails(scene, screenProps);\n    const headerStyle = options.headerStyle;\n\n    return (\n      <Animated.View {...rest} style={[styles.container, headerStyle, style]}>\n        <View style={styles.appBar}>\n          {appBar}\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: STATUSBAR_HEIGHT,\n    backgroundColor: Platform.OS === 'ios' ? '#EFEFF2' : '#FFF',\n    height: STATUSBAR_HEIGHT + APPBAR_HEIGHT,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n    },\n    elevation: 4,\n  },\n  appBar: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n  },\n  item: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    bottom: 0,\n    left: TITLE_OFFSET,\n    right: TITLE_OFFSET,\n    top: 0,\n    position: 'absolute',\n    alignItems: Platform.OS === 'ios' ? 'center' : 'flex-start',\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n  },\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n  },\n});\n\nexport default Header;\n"]}]