["bd50034a311c830cfaa9f453de55343afb263464","cafc95f43cb4b66e72c15ed53d4f99210653eb63",["prop-types","react","react-native","../text/Text","../icons/Icon","./FeaturedTile","../config/ViewPropTypes","../config/BackgroundImage"],[91,195,292,330,425,529,651,786],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-elements/src/tile/Tile.js"],"names":["Tile","featured","props","imageSrc","icon","title","children","caption","titleStyle","onPress","activeOpacity","overlayContainerStyle","captionStyle","iconContainerStyle","imageContainerStyle","containerStyle","contentContainerStyle","attributes","width","height","get","styles","create","container","imageContainer","alignItems","justifyContent","resizeMode","backgroundColor","flex","text","marginBottom","contentContainer","paddingTop","paddingBottom","paddingLeft","paddingRight","iconContainer","alignSelf","featuredProps","propTypes","string","object","source","isRequired","func","number","style","bool","any"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  View,\n  Image,\n  Text as NativeText,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacity,\n} from 'react-native';\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\nimport FeaturedTile from './FeaturedTile';\nimport ViewPropTypes from '../config/ViewPropTypes';\nimport BackgroundImage from '../config/BackgroundImage';\n\nconst Tile = props => {\n  const {\n    featured,\n    imageSrc,\n    icon,\n    title,\n    children,\n    caption,\n    titleStyle,\n    onPress,\n    activeOpacity,\n    overlayContainerStyle,\n    captionStyle,\n    iconContainerStyle,\n    imageContainerStyle,\n    containerStyle,\n    contentContainerStyle,\n    ...attributes\n  } = props;\n\n  let { width, height } = props;\n\n  if (!width) {\n    width = Dimensions.get('window').width;\n  }\n\n  if (!height) {\n    height = width * 0.8;\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      width,\n      height,\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      resizeMode: 'cover',\n      backgroundColor: '#ffffff',\n      flex: 2,\n    },\n    text: {\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 5,\n    },\n    contentContainer: {\n      paddingTop: 15,\n      paddingBottom: 5,\n      paddingLeft: 15,\n      paddingRight: 15,\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center',\n    },\n  });\n\n  if (featured) {\n    const featuredProps = {\n      title,\n      icon,\n      caption,\n      imageSrc,\n      onPress,\n      activeOpacity,\n      containerStyle,\n      imageContainerStyle,\n      overlayContainerStyle,\n      titleStyle,\n      captionStyle,\n      width,\n      height,\n    };\n    return <FeaturedTile {...featuredProps} />;\n  }\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={[styles.container, containerStyle && containerStyle]}\n      {...attributes}\n    >\n      <BackgroundImage\n        source={imageSrc}\n        style={[\n          styles.imageContainer,\n          imageContainerStyle && imageContainerStyle,\n        ]}\n      >\n        <View\n          style={[\n            styles.iconContainer,\n            iconContainerStyle && iconContainerStyle,\n          ]}\n        >\n          {icon && <Icon {...icon} />}\n        </View>\n      </BackgroundImage>\n      <View\n        style={[\n          styles.contentContainer,\n          contentContainerStyle && contentContainerStyle,\n        ]}\n      >\n        <Text h4 style={[styles.text, titleStyle && titleStyle]}>\n          {title}\n        </Text>\n        {children}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.string,\n  imageSrc: Image.propTypes.source.isRequired,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.any,\n  contentContainerStyle: ViewPropTypes.style,\n};\n\nexport default Tile;\n"]}]