["7502e4ec846a8021cfef95458f144b7e6f828763","7071be30ae02cfa0d52744fd1d331cde556f3ed6",["react-native","./NavigationCardStackPanResponder","./NavigationCardStackStyleInterpolator","./NavigationPagerPanResponder","./NavigationPagerStyleInterpolator","./NavigationPointerEventsContainer","./NavigationPropTypes","react"],[59,131,220,305,386,472,545,591,626],{"version":3,"sources":["/home/ziddi/Desktop/venders/node_modules/react-native-navigation-experimental-compat/src/NavigationCard.js"],"names":["Animated","require","NavigationCardStackPanResponder","NavigationCardStackStyleInterpolator","NavigationPagerPanResponder","NavigationPagerStyleInterpolator","NavigationPointerEventsContainer","NavigationPropTypes","React","StyleSheet","PropTypes","NavigationCard","props","panHandlers","pointerEvents","renderScene","style","viewStyle","undefined","forHorizontal","viewPanHandlers","onNavigateBack","onComponentRef","styles","main","Component","propTypes","SceneRendererProps","func","isRequired","string","any","create","backgroundColor","bottom","left","position","right","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","top","CardStackPanResponder","CardStackStyleInterpolator","PagerPanResponder","PagerStyleInterpolator","module","exports"],"mappings":";AA+BA;;;;AAEA,IAAMA,WAAWC,wBAAwBD,QAAzC;AACA,IAAME,kCAAkCD,QAAQ,mCAAR,CAAxC;AACA,IAAME,uCAAuCF,QAAQ,wCAAR,CAA7C;AACA,IAAMG,8BAA8BH,QAAQ,+BAAR,CAApC;AACA,IAAMI,mCAAmCJ,QAAQ,oCAAR,CAAzC;AACA,IAAMK,mCAAmCL,QAAQ,oCAAR,CAAzC;AACA,IAAMM,sBAAsBN,QAAQ,uBAAR,CAA5B;AACA,IAAMO,QAAQP,OAAR,SAAN;AACA,IAAMQ,aAAaR,wBAAwBQ,UAA3C;;IAiBOC,S,GAAaF,K,CAAbE,S;IAKDC,c;;;;;;;;;;6BAayB;AAAA,mBAOvB,KAAKC,KAPkB;AAAA,UAEzBC,WAFyB,UAEzBA,WAFyB;AAAA,UAGzBC,aAHyB,UAGzBA,aAHyB;AAAA,UAIzBC,WAJyB,UAIzBA,WAJyB;AAAA,UAKzBC,KALyB,UAKzBA,KALyB;AAAA,UAMtBJ,KANsB;;;AAS3B,UAAMK,YAAYD,UAAUE,SAAV,GAChBf,qCAAqCgB,aAArC,CAAmDP,KAAnD,CADgB,GAEhBI,KAFF;;AAIA,UAAMI,kBAAkBP,gBAAgBK,SAAhB,GACtBhB,gCAAgCiB,aAAhC,0BACKP,KADL;AAEES,wBAAgB,KAAKT,KAAL,CAAWS;AAF7B,SADsB,GAKtBR,WALF;;AAOA,aACE;AAAC,gBAAD,CAAU,IAAV;AAAA,iCACMO,eADN;AAEE,yBAAeN,aAFjB;AAGE,eAAK,KAAKF,KAAL,CAAWU,cAHlB;AAIE,iBAAO,CAACC,OAAOC,IAAR,EAAcP,SAAd,CAJT;AAKGF,oBAAYH,KAAZ;AALH,OADF;AASD;;;EA1C0BJ,MAAMiB,S,UAG1BC,S,4BACFnB,oBAAoBoB,kB;AACvBL,kBAAgBZ,UAAUkB,IAAV,CAAeC,U;AAC/BR,kBAAgBX,UAAUkB,I;AAC1Bf,eAAaN,oBAAoBM,W;AACjCC,iBAAeJ,UAAUoB,MAAV,CAAiBD,U;AAChCd,eAAaL,UAAUkB,IAAV,CAAeC,U;AAC5Bb,SAAON,UAAUqB;;;;AAmCrB,IAAMR,SAASd,WAAWuB,MAAX,CAAkB;AAC/BR,QAAM;AACJS,qBAAiB,SADb;AAEJC,YAAQ,CAFJ;AAGJC,UAAM,CAHF;AAIJC,cAAU,UAJN;AAKJC,WAAO,CALH;AAMJC,iBAAa,OANT;AAOJC,kBAAc,EAACC,OAAO,CAAR,EAAWC,QAAQ,CAAnB,EAPV;AAQJC,mBAAe,GARX;AASJC,kBAAc,EATV;AAUJC,SAAK;AAVD;AADyB,CAAlB,CAAf;;AAeAjC,iBAAiBL,iCAAiC0B,MAAjC,CAAwCrB,cAAxC,CAAjB;;AAEAA,eAAekC,qBAAf,GAAuC3C,+BAAvC;AACAS,eAAemC,0BAAf,GAA4C3C,oCAA5C;AACAQ,eAAeoC,iBAAf,GAAmC3C,2BAAnC;AACAO,eAAeqC,sBAAf,GAAwC3C,gCAAxC;;AAEA4C,OAAOC,OAAP,GAAiBvC,cAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @flow\n */\n'use strict';\n\nconst Animated = require('react-native').Animated;\nconst NavigationCardStackPanResponder = require('./NavigationCardStackPanResponder');\nconst NavigationCardStackStyleInterpolator = require('./NavigationCardStackStyleInterpolator');\nconst NavigationPagerPanResponder = require('./NavigationPagerPanResponder');\nconst NavigationPagerStyleInterpolator = require('./NavigationPagerStyleInterpolator');\nconst NavigationPointerEventsContainer = require('./NavigationPointerEventsContainer');\nconst NavigationPropTypes = require('./NavigationPropTypes');\nconst React = require('react');\nconst StyleSheet = require('react-native').StyleSheet;\n\nimport type  {\n  NavigationPanPanHandlers,\n  NavigationSceneRenderer,\n  NavigationSceneRendererProps,\n} from './NavigationTypeDefinition';\n\ntype Props = NavigationSceneRendererProps & {\n  onComponentRef: (ref: any) => void,\n  onNavigateBack: ?Function,\n  panHandlers: ?NavigationPanPanHandlers,\n  pointerEvents: string,\n  renderScene: NavigationSceneRenderer,\n  style: any,\n};\n\nconst {PropTypes} = React;\n\n/**\n * Component that renders the scene as card for the <NavigationCardStack />.\n */\nclass NavigationCard extends React.Component<any, Props, any> {\n  props: Props;\n\n  static propTypes = {\n    ...NavigationPropTypes.SceneRendererProps,\n    onComponentRef: PropTypes.func.isRequired,\n    onNavigateBack: PropTypes.func,\n    panHandlers: NavigationPropTypes.panHandlers,\n    pointerEvents: PropTypes.string.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    style: PropTypes.any,\n  };\n\n  render(): React.Element<any> {\n    const {\n      panHandlers,\n      pointerEvents,\n      renderScene,\n      style,\n      ...props /* NavigationSceneRendererProps */\n    } = this.props;\n\n    const viewStyle = style === undefined ?\n      NavigationCardStackStyleInterpolator.forHorizontal(props) :\n      style;\n\n    const viewPanHandlers = panHandlers === undefined ?\n      NavigationCardStackPanResponder.forHorizontal({\n        ...props,\n        onNavigateBack: this.props.onNavigateBack,\n      }) :\n      panHandlers;\n\n    return (\n      <Animated.View\n        {...viewPanHandlers}\n        pointerEvents={pointerEvents}\n        ref={this.props.onComponentRef}\n        style={[styles.main, viewStyle]}>\n        {renderScene(props)}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    backgroundColor: '#E9E9EF',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    shadowColor: 'black',\n    shadowOffset: {width: 0, height: 0},\n    shadowOpacity: 0.4,\n    shadowRadius: 10,\n    top: 0,\n  },\n});\n\nNavigationCard = NavigationPointerEventsContainer.create(NavigationCard);\n\nNavigationCard.CardStackPanResponder = NavigationCardStackPanResponder;\nNavigationCard.CardStackStyleInterpolator = NavigationCardStackStyleInterpolator;\nNavigationCard.PagerPanResponder = NavigationPagerPanResponder;\nNavigationCard.PagerStyleInterpolator = NavigationPagerStyleInterpolator;\n\nmodule.exports = NavigationCard;\n"]}]