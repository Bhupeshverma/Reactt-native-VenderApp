Object.defineProperty(exports,"__esModule",{value:true});exports.ZoomIn=undefined;var _class,_temp;var _react=require("react");var _react2=babelHelpers.interopRequireDefault(_react);
var _View=require("./View");
var _DriverShape=require("../drivers/DriverShape");
/*
 * ZoomIn Component adds zoom in effect to its children components.
 * Connect it to driver and pass the input range to animate it.
 * e.g.:
 * ...
 * const driver = new ScrollDriver();
 *
 * return (
 *  <ScrollView
 *    {...driver.scrollViewProps}
 *  >
 *    <ZoomIn
 *      driver={driver}
 *      inputRange={[100,150]}
 *      maxFactor={1.5}
 *    >
 *      <Image />
 *    </ZoomIn>
 *  </ScrollView>
 * );
 *
 * ...
 * Above code will create scroll dependent zoom in animation over Image component
 * from scroll 100, to scroll 150 where image has original size at scroll 100,
 * and is scaled by maxFactor at scroll 150
 */var
ZoomIn=exports.ZoomIn=(_temp=_class=function(_Component){babelHelpers.inherits(ZoomIn,_Component);function ZoomIn(){babelHelpers.classCallCheck(this,ZoomIn);return babelHelpers.possibleConstructorReturn(this,(ZoomIn.__proto__||Object.getPrototypeOf(ZoomIn)).apply(this,arguments));}babelHelpers.createClass(ZoomIn,[{key:"render",value:function render()





















{var _props=
this.props,driver=_props.driver,children=_props.children,_props$inputRange=_props.inputRange,inputRange=_props$inputRange===undefined?[0,1]:_props$inputRange,_props$maxFactor=_props.maxFactor,maxFactor=_props$maxFactor===undefined?1.5:_props$maxFactor,style=_props.style;

return(
_react2.default.createElement(_View.View,{
driver:driver,
animationName:"zoomIn",
animationOptions:{inputRange:inputRange,maxFactor:maxFactor},
style:style},

children));


}}]);return ZoomIn;}(_react.Component),_class.propTypes={/**
     * An instance of animation driver, usually ScrollDriver
     */driver:_DriverShape.DriverShape.isRequired,/**
     * Components to which an effect will be applied
     */children:_react2.default.PropTypes.node,/**
     * pair of [start, end] values from animation driver, how
     * children would zoom in to maxFactor
     */inputRange:_react2.default.PropTypes.array,/**
     * To which factor children would zoom in
     */maxFactor:_react2.default.PropTypes.number,style:_react2.default.PropTypes.object},_temp);