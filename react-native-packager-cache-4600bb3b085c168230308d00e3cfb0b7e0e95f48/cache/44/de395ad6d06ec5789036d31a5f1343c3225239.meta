["8c2d919d4bdae7473f04c226d97be74558d48e45","d6656121f916a15feed64166b56b862e73845435",["react","./View","../drivers/DriverShape"],[136,226,265],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/animation/src/animations/FadeOut.js"],"names":["FadeOut","props","driver","children","inputRange","style","propTypes","isRequired","PropTypes","node","array","object"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;IA0BaA,O,WAAAA,O;;;;;;;;;;6BAkBF;AAAA,mBACkD,KAAKC,KADvD;AAAA,UACCC,MADD,UACCA,MADD;AAAA,UACSC,QADT,UACSA,QADT;AAAA,qCACmBC,UADnB;AAAA,UACmBA,UADnB,qCACgC,CAAC,CAAD,EAAI,CAAJ,CADhC;AAAA,UACwCC,KADxC,UACwCA,KADxC;;;AAGP,aACE;AAAA;AAAA;AACE,kBAAQH,MADV;AAEE,yBAAc,SAFhB;AAGE,4BAAkB,EAAEE,sBAAF,EAHpB;AAIE,iBAAOC;AAJT;AAMGF;AANH,OADF;AAUD;;;4BA9BMG,S,GAAY;AAIjBJ,UAAQ,yBAAYK,UAJH;;AAQjBJ,YAAU,gBAAMK,SAAN,CAAgBC,IART;;AAajBL,cAAY,gBAAMI,SAAN,CAAgBE,KAbX;AAcjBL,SAAO,gBAAMG,SAAN,CAAgBG;AAdN,C","sourcesContent":["import React, { Component } from 'react';\nimport { View } from './View';\nimport { DriverShape } from '../drivers/DriverShape';\n/*\n * FadeOut Component adds fade out effect to its children components.\n * Connect it to driver and pass the input range to animate it.\n * e.g.:\n * ...\n * const driver = new ScrollDriver();\n *\n * return (\n *  <ScrollView\n *    {...driver.scrollViewProps}\n *  >\n *    <FadeOut\n *      driver={driver}\n *      inputRange={[100,150]}\n *    >\n *      <Image />\n *    </FadeOut>\n *  </ScrollView>\n * );\n *\n * ...\n * Above code will create scroll dependent fade out animation over Image component\n * from scroll 100, to scroll 150 where image is opaque at scroll 100,\n * and fully transparent at scroll 150\n */\nexport class FadeOut extends Component {\n  static propTypes = {\n    /**\n     * An instance of animation driver, usually ScrollDriver\n     */\n    driver: DriverShape.isRequired,\n    /**\n     * Components to which an effect will be applied\n     */\n    children: React.PropTypes.node,\n    /**\n     * pair of [start, end] values from animation driver, how\n     * children would fade out\n     */\n    inputRange: React.PropTypes.array,\n    style: React.PropTypes.object,\n  }\n\n  render() {\n    const { driver, children, inputRange = [0, 1], style } = this.props;\n\n    return (\n      <View\n        driver={driver}\n        animationName=\"fadeOut\"\n        animationOptions={{ inputRange }}\n        style={style}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n"]}]