Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Touchable = undefined;

var _class,
    _temp,
    _jsxFileName = '/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/components/Touchable.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _theme = require('@shoutem/theme');

var _index = require('../index');

var Touchable = (_temp = _class = function (_React$Component) {
  babelHelpers.inherits(Touchable, _React$Component);

  function Touchable() {
    babelHelpers.classCallCheck(this, Touchable);
    return babelHelpers.possibleConstructorReturn(this, (Touchable.__proto__ || Object.getPrototypeOf(Touchable)).apply(this, arguments));
  }

  babelHelpers.createClass(Touchable, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var style = babelHelpers.extends({}, props.style);
      delete style.touchableOpacity;
      delete style.touchableNativeFeedback;

      if (_reactNative.Platform.OS === 'android') {
        return _react2.default.createElement(
          _index.TouchableNativeFeedback,
          babelHelpers.extends({}, props, {
            style: props.style.touchableNativeFeedback,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 34
            }
          }),
          _react2.default.createElement(
            _index.View,
            {
              virtual: true,
              style: style,
              styleName: props.styleName,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 38
              }
            },
            props.children
          )
        );
      }

      return _react2.default.createElement(
        _index.TouchableOpacity,
        babelHelpers.extends({}, props, {
          style: babelHelpers.extends({}, style, props.style.touchableOpacity),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 50
          }
        }),
        props.children
      );
    }
  }]);
  return Touchable;
}(_react2.default.Component), _class.propTypes = babelHelpers.extends({}, _index.TouchableOpacity.propTypes, _index.TouchableNativeFeedback.propTypes, {
  style: _react.PropTypes.object
}), _temp);


var StyledTouchable = (0, _theme.connectStyle)('shoutem.ui.Touchable', {
  touchableNativeFeedback: {},
  touchableOpacity: {}
})(Touchable);

exports.Touchable = StyledTouchable;