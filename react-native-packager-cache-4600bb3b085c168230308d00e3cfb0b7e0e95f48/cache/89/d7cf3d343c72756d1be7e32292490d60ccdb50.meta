["29363ece3d4695e036cec3c9d2ac02678fd5735c","2f9cf1fb5eded6b40b578e62ec303a6399aa9abb",["react","react-native","./createNavigator","../createNavigationContainer","../routers/TabRouter","../views/Drawer/DrawerScreen","../views/Drawer/DrawerView","../views/Drawer/DrawerNavigatorItems","./NavigatorTypes"],[87,184,233,376,534,655,788,925,1086],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-navigation/src/navigators/DrawerNavigator.js"],"names":["DefaultDrawerConfig","drawerWidth","get","width","OS","contentComponent","drawerPosition","DrawerNavigator","routeConfigs","config","mergedConfig","containerConfig","contentOptions","tabsConfig","contentRouter","drawerRouter","DrawerClose","screen","DRAWER","props","DrawerOpen","initialRouteName","navigator"],"mappings":";;;;AAEA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAaA,IAAMA,sBAAsB;AAK1BC,eAAa,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,IACV,sBAASC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC,EADvB,CALa;AAO1BC,kDAP0B;AAQ1BC,kBAAgB;AARU,CAA5B;;AAWA,IAAMC,kBAAkB,SAAlBA,eAAkB,CACtBC,YADsB,EAEtBC,MAFsB,EAGnB;AACH,MAAMC,wCAAoBV,mBAApB,EAA4CS,MAA5C,CAAN;AADG,MAGDE,eAHC,GASCD,YATD,CAGDC,eAHC;AAAA,MAIDV,WAJC,GASCS,YATD,CAIDT,WAJC;AAAA,MAKDI,gBALC,GASCK,YATD,CAKDL,gBALC;AAAA,MAMDO,cANC,GASCF,YATD,CAMDE,cANC;AAAA,MAODN,cAPC,GASCI,YATD,CAODJ,cAPC;AAAA,MAQEO,UARF,wCASCH,YATD;;;AAWH,MAAMI,gBAAgB,yBAAUN,YAAV,EAAwBK,UAAxB,CAAtB;;AAEA,MAAME,eAAe,yBACnB;AACEC,iBAAa;AACXC,cAAQ,+BACNH,aADM,EAENN,YAFM,EAGNC,MAHM,EAIN,yBAAeS,MAJT,EAKN,UAACC,KAAD;AAAA,eAAc,sDAAkBA,KAAlB,CAAd;AAAA,OALM;AADG,KADf;AASEC,gBAAY;AACVH,cAAQ;AAAA,eAAM,IAAN;AAAA;AADE;AATd,GADmB,EAcnB;AACEI,sBAAkB;AADpB,GAdmB,CAArB;;AAmBA,MAAMC,YAAY,+BAChBP,YADgB,EAEhBP,YAFgB,EAGhBC,MAHgB,EAIhB,yBAAeS,MAJC,EAKhB,UAACC,KAAD;AAAA,WACA,6EACMA,KADN;AAEE,mBAAalB,WAFf;AAGE,wBAAkBI,gBAHpB;AAIE,sBAAgBO,cAJlB;AAKE,sBAAgBN;AALlB,OADA;AAAA,GALgB,CAAlB;;AAeA,SAAO,yCAA0BgB,SAA1B,EAAqCX,eAArC,CAAP;AACD,CAnDD;;kBAqDeJ,e","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { Dimensions, Platform } from 'react-native';\n\nimport createNavigator from './createNavigator';\nimport createNavigationContainer from '../createNavigationContainer';\nimport TabRouter from '../routers/TabRouter';\nimport DrawerScreen from '../views/Drawer/DrawerScreen';\nimport DrawerView from '../views/Drawer/DrawerView';\nimport DrawerItems from '../views/Drawer/DrawerNavigatorItems';\n\nimport NavigatorTypes from './NavigatorTypes';\n\nimport type { DrawerViewConfig } from '../views/Drawer/DrawerView';\nimport type {\n  NavigationRouteConfigMap,\n  NavigationTabRouterConfig,\n} from '../TypeDefinition';\n\nexport type DrawerNavigatorConfig = {\n  containerConfig?: void,\n} & NavigationTabRouterConfig &\n  DrawerViewConfig;\n\nconst DefaultDrawerConfig = {\n  /*\n   * Default drawer width is screen width - header width\n   * https://material.io/guidelines/patterns/navigation-drawer.html\n   */\n  drawerWidth: Dimensions.get('window').width -\n    (Platform.OS === 'android' ? 56 : 64),\n  contentComponent: DrawerItems,\n  drawerPosition: 'left',\n};\n\nconst DrawerNavigator = (\n  routeConfigs: NavigationRouteConfigMap,\n  config: DrawerNavigatorConfig\n) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const {\n    containerConfig,\n    drawerWidth,\n    contentComponent,\n    contentOptions,\n    drawerPosition,\n    ...tabsConfig\n  } = mergedConfig;\n\n  const contentRouter = TabRouter(routeConfigs, tabsConfig);\n\n  const drawerRouter = TabRouter(\n    {\n      DrawerClose: {\n        screen: createNavigator(\n          contentRouter,\n          routeConfigs,\n          config,\n          NavigatorTypes.DRAWER\n        )((props: *) => <DrawerScreen {...props} />),\n      },\n      DrawerOpen: {\n        screen: () => null,\n      },\n    },\n    {\n      initialRouteName: 'DrawerClose',\n    }\n  );\n\n  const navigator = createNavigator(\n    drawerRouter,\n    routeConfigs,\n    config,\n    NavigatorTypes.DRAWER\n  )((props: *) => (\n    <DrawerView\n      {...props}\n      drawerWidth={drawerWidth}\n      contentComponent={contentComponent}\n      contentOptions={contentOptions}\n      drawerPosition={drawerPosition}\n    />\n  ));\n\n  return createNavigationContainer(navigator, containerConfig);\n};\n\nexport default DrawerNavigator;\n"]}]