["a081d3d662daeb8f52b87b7d4ed108e08fe27727","3a9b8a659f4f46966552e13ba05e7a5a83f5ff72",["react","./View","../drivers/DriverShape"],[135,225,264],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/animation/src/animations/Rotate.js"],"names":["Rotate","props","driver","children","inputRange","angle","axis","style","propTypes","isRequired","PropTypes","node","array","string","object"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;IAyBaA,M,WAAAA,M;;;;;;;;;;6BA0BF;AAAA,mBAQH,KAAKC,KARF;AAAA,UAELC,MAFK,UAELA,MAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,qCAILC,UAJK;AAAA,UAILA,UAJK,qCAIQ,CAAC,CAAD,EAAI,CAAJ,CAJR;AAAA,gCAKLC,KALK;AAAA,UAKLA,KALK,gCAKG,QALH;AAAA,UAMLC,IANK,UAMLA,IANK;AAAA,UAOLC,KAPK,UAOLA,KAPK;;;AAUP,aACE;AAAA;AAAA;AACE,kBAAQL,MADV;AAEE,yBAAc,QAFhB;AAGE,4BAAkB,EAAEE,sBAAF,EAAcC,YAAd,EAAqBC,UAArB,EAHpB;AAIE,iBAAOC;AAJT;AAMGJ;AANH,OADF;AAUD;;;4BA7CMK,S,GAAY;AAIjBN,UAAQ,yBAAYO,UAJH;;AAQjBN,YAAU,gBAAMO,SAAN,CAAgBC,IART;;AAajBP,cAAY,gBAAMM,SAAN,CAAgBE,KAbX;;AAiBjBP,SAAO,gBAAMK,SAAN,CAAgBG,MAjBN;;AAqBjBP,QAAM,gBAAMI,SAAN,CAAgBG,MArBL;AAsBjBN,SAAO,gBAAMG,SAAN,CAAgBI;AAtBN,C","sourcesContent":["import React, { Component } from 'react';\nimport { View } from './View';\nimport { DriverShape } from '../drivers/DriverShape';\n/*\n * Rotate Component adds rotation effect to its children components.\n * Connect it to driver and pass the input range to animate it.\n * e.g.:\n * ...\n * const driver = new ScrollDriver();\n *\n * return (\n *  <ScrollView\n *    {...driver.scrollViewProps}\n *  >\n *    <Rotate\n *      driver={driver}\n *      inputRange={[100,150]}\n *      angle=\"180deg\"\n *    >\n *      <Image />\n *    </Rotate>\n *  </ScrollView>\n * );\n *\n * ...\n * Above code will create scroll dependent rotation of an Image by 180 degrees\n */\nexport class Rotate extends Component {\n  static propTypes = {\n    /**\n     * An instance of animation driver, usually ScrollDriver\n     */\n    driver: DriverShape.isRequired,\n    /**\n     * Components to which an effect will be applied\n     */\n    children: React.PropTypes.node,\n    /**\n     * pair of [start, end] values from animation driver, how\n     * children would rotate by an angle in axis\n     */\n    inputRange: React.PropTypes.array,\n    /**\n     * rotation angle e.g. \"90deg\"\n     */\n    angle: React.PropTypes.string,\n    /**\n     * axis of rotation(x, y, z), z is default\n     */\n    axis: React.PropTypes.string,\n    style: React.PropTypes.object,\n  };\n\n  render() {\n    const {\n      driver,\n      children,\n      inputRange = [0, 1],\n      angle = '360deg',\n      axis,\n      style\n    } = this.props;\n\n    return (\n      <View\n        driver={driver}\n        animationName=\"rotate\"\n        animationOptions={{ inputRange, angle, axis }}\n        style={style}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n"]}]