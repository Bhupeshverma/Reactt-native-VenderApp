["78e4b9fc09c866aeda2808adeb54c16be7ee8cbc","699a216c2daefe42f3dfac0fe2774406e7ddce62",["prop-types","react","react-native","../text/Text","../config/fonts","../config/colors","@expo/vector-icons/FontAwesome","../helpers/getIconType","../config/ViewPropTypes"],[91,195,292,330,426,528,638,772,900],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/checkbox/CheckBox.js"],"names":["CheckBox","component","props","checked","iconRight","title","center","right","containerStyle","textStyle","onPress","onLongPress","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","checkedTitle","fontFamily","attributes","Icon","Component","iconName","styles","container","wrapper","justifyContent","isValidElement","text","defaultProps","propTypes","any","bool","oneOfType","string","element","style","func","number","create","flexDirection","alignItems","margin","marginLeft","marginRight","backgroundColor","borderColor","borderWidth","padding","borderRadius","color","grey1","select","ios","fontWeight","android","bold"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  Platform,\n  Text as NativeText,\n} from 'react-native';\nimport TextElement from '../text/Text';\nimport fonts from '../config/fonts';\nimport colors from '../config/colors';\nimport FAIcon from 'react-native-vector-icons/FontAwesome';\nimport getIconType from '../helpers/getIconType';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst CheckBox = props => {\n  const {\n    component,\n    checked,\n    iconRight,\n    title,\n    center,\n    right,\n    containerStyle,\n    textStyle,\n    onPress,\n    onLongPress,\n    onIconPress,\n    onLongIconPress,\n    size,\n    checkedIcon,\n    uncheckedIcon,\n    iconType,\n    checkedColor,\n    uncheckedColor,\n    checkedTitle,\n    fontFamily,\n    ...attributes\n  } = props;\n\n  let Icon = FAIcon;\n  if (iconType) {\n    Icon = getIconType(iconType);\n  }\n  const Component = component || TouchableOpacity;\n  let iconName = uncheckedIcon;\n  if (checked) {\n    iconName = checkedIcon;\n  }\n  return (\n    <Component\n      onLongPress={onLongPress}\n      onPress={onPress}\n      style={[styles.container, containerStyle && containerStyle]}\n      {...attributes}\n    >\n      <View\n        style={[\n          styles.wrapper,\n          right && { justifyContent: 'flex-end' },\n          center && { justifyContent: 'center' },\n        ]}\n      >\n        {!iconRight &&\n          <Icon\n            color={checked ? checkedColor : uncheckedColor}\n            name={iconName}\n            size={size || 24}\n            onLongPress={onLongIconPress}\n            onPress={onIconPress}\n          />}\n\n        {React.isValidElement(title)\n          ? { title }\n          : <TextElement\n              style={[\n                styles.text,\n                textStyle && textStyle,\n                fontFamily && { fontFamily },\n              ]}\n            >\n              {checked ? checkedTitle || title : title}\n            </TextElement>}\n\n        {iconRight &&\n          <Icon\n            color={checked ? checkedColor : uncheckedColor}\n            name={iconName}\n            size={size || 24}\n            onLongPress={onLongIconPress}\n            onPress={onIconPress}\n          />}\n      </View>\n    </Component>\n  );\n};\n\nCheckBox.defaultProps = {\n  checked: false,\n  iconRight: false,\n  right: false,\n  center: false,\n  checkedColor: 'green',\n  uncheckedColor: '#bfbfbf',\n  checkedIcon: 'check-square-o',\n  uncheckedIcon: 'square-o',\n  size: 24,\n};\n\nCheckBox.propTypes = {\n  component: PropTypes.any,\n  checked: PropTypes.bool,\n  iconRight: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  center: PropTypes.bool,\n  right: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  textStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  checkedIcon: PropTypes.string,\n  uncheckedIcon: PropTypes.string,\n  iconType: PropTypes.string,\n  size: PropTypes.number,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string,\n  checkedTitle: PropTypes.string,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  fontFamily: PropTypes.string,\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed',\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 3,\n  },\n  text: {\n    marginLeft: 10,\n    marginRight: 10,\n    color: colors.grey1,\n    ...Platform.select({\n      ios: {\n        fontWeight: 'bold',\n      },\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n});\n\nexport default CheckBox;\n"]}]