Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactRedux = require('react-redux');

var _actions = require('../actions');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _ui = require('@shoutem/ui');

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    height = _Dimensions$get.height,
    width = _Dimensions$get.width;

var box_count = 1;
var box_height = height / box_count;

var DetailScreen = function (_Component) {
  babelHelpers.inherits(DetailScreen, _Component);

  function DetailScreen(props) {
    babelHelpers.classCallCheck(this, DetailScreen);

    var _this = babelHelpers.possibleConstructorReturn(this, (DetailScreen.__proto__ || Object.getPrototypeOf(DetailScreen)).call(this, props));

    _this.state = {
      data: [],
      total_count: 0,
      visible: true
    };

    return _this;
  }

  babelHelpers.createClass(DetailScreen, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var dataArray,
          count = 0;
      console.log("data", this.props.data);
      console.log("syncData", this.props.syncData);
      this.props.data.map(function (item, index) {
        return item.map(function (item, index) {
          return item.map(function (item, index) {
            count += item.total;
          });
        });
      });
      console.log(count);
      this.setState({ total_count: count });
    }
  }, {
    key: '_handleSync',
    value: function _handleSync() {
      var syncArray;
      var date = new Date();
      var dd = date.getDate();
      var mm = date.getMonth() + 1;
      var yyyy = date.getFullYear();
      if (dd < 10) {
        dd = '0' + dd;
      }
      if (mm < 10) {
        mm = '0' + mm;
      }
      var today = yyyy + '-' + dd + '-' + mm;
      console.log("today", today);
      this.props.syncData.map(function (item, index) {
        syncArray = item.map(function (item, index) {
          return item.map(function (item, index) {
            return item;
          });
        });
      });
      console.log("syncArray", syncArray);
      this.props.Sync(syncArray, today, this.state.total_count);
      _reactNativeRouterFlux.Actions.nextScreen();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.container },
        _react2.default.createElement(
          _reactNative.View,
          { style: [styles.box, styles.box1] },
          this.props.data.length == 0 ? _react2.default.createElement(
            _reactNative.View,
            { style: { flex: 1,
                alignItems: 'center',
                justifyContent: 'center'
              } },
            _react2.default.createElement(
              _reactNative.Text,
              { style: { fontSize: 20, fontWeight: "bold", color: "#555" } },
              'The Tray is Empty !!'
            )
          ) : _react2.default.createElement(
            _reactNative.ScrollView,
            null,
            this.props.data.map(function (itemss, index) {

              return itemss.map(function (items, value) {

                return items.map(function (item, index) {

                  return _react2.default.createElement(
                    _reactNative.View,
                    { styleName: 'vertical', key: item.product_id },
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      item.product_image === null ? _react2.default.createElement(_ui.Image, {
                        styleName: 'medium rounded-corners',
                        source: { uri: 'https://shoutem.github.io/img/ui-toolkit/examples/image-1.png' }
                      }) : _react2.default.createElement(_ui.Image, {
                        styleName: 'medium rounded-corners',
                        source: { uri: item.product_image }
                      }),
                      _react2.default.createElement(
                        _reactNative.View,
                        { styleName: 'vertical stretch space-between' },
                        _react2.default.createElement(
                          _ui.Subtitle,
                          null,
                          item.name
                        ),
                        _react2.default.createElement(
                          _reactNative.View,
                          { style: { flexDirection: 'row', justifyContent: 'space-around' } },
                          _react2.default.createElement(
                            _ui.Subtitle,
                            null,
                            item.product_id
                          ),
                          _react2.default.createElement(
                            _ui.Subtitle,
                            null,
                            item.total
                          )
                        )
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Title,
                        null,
                        'SIZES'
                      ),
                      _react2.default.createElement(
                        _ui.Title,
                        { styleName: 'h-center' },
                        'SCAN-COUNT'
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_34'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_34
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_35'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_35
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_36'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_36
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_37'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_37
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_38'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_38
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_39'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_39
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_40'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_40
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_41'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_41
                      )
                    ),
                    _react2.default.createElement(
                      _ui.Row,
                      null,
                      _react2.default.createElement(
                        _ui.Subtitle,
                        null,
                        'Size_42'
                      ),
                      _react2.default.createElement(
                        _ui.Subtitle,
                        { styleName: 'h-center' },
                        item.size_42
                      )
                    )
                  );
                });
              });
            })
          ),
          this.props.data.length != 0 ? _react2.default.createElement(
            _ui.Button,
            {
              styleName: 'dark',
              style: { backgroundColor: "#000", height: 40 },
              onPress: function onPress() {
                return _this2._handleSync();
              } },
            _react2.default.createElement(
              _reactNative.Text,
              { style: { color: '#fff', fontWeight: '400' } },
              'SYNC WITH CRM'
            )
          ) : null
        )
      );
    }
  }]);
  return DetailScreen;
}(_react.Component);

function mapStateToProps(state) {
  return {

    data: state.savedDataReducer,
    syncData: state.SaveSyncFormatReducer
  };
}
exports.default = (0, _reactRedux.connect)(mapStateToProps, { Sync: _actions.Sync, SavedProducts: _actions.SavedProducts, ClearProducts: _actions.ClearProducts, SyncWithCrm: _actions.SyncWithCrm })(DetailScreen);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'column',
    justifyContent: 'space-around',
    backgroundColor: '#eff6f7'

  },
  box: {
    height: box_height },

  box1: {
    flex: 12,
    backgroundColor: '#eff6f7'

  },
  spinner: {
    flex: 1,
    alignItems: 'center'
  }
});