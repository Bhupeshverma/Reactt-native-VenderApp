["920cb96ec62a20f6c2f0f14c861617917ca3a23e","27276be000f6516e1f9d070cc6eaed654d14d027",["prop-types","react","react-native","./Row"],[91,195,292,329],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/grid/Grid.js"],"names":["Grid","styles","create","container","flex","flexDirection","isRow","Children","forEach","props","children","child","type","console","warn","onPress","activeOpacity","containerStyle","propTypes","any","func","number","defaultProps"],"mappings":";;;;AACA;;;;AACA;;;;AACA;;AACA;;;;IAEMA,I;;;;;;;;;;;;;;8LACJC,M,GAAS,wBAAWC,MAAX,CAAkB;AACzBC,iBAAW;AACTC,cAAM,CADG;AAETC,uBAAe,MAAKC,KAAL,KAAe,QAAf,GAA0B;AAFhC;AADc,KAAlB,C;;;;;4BAOD;AACN,UAAIA,QAAQ,KAAZ;AACA,sBAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKC,KAAL,CAAWC,QAAlC,EAA4C,iBAAS;AACnD,YAAIC,SAASA,MAAMC,IAAN,kBAAb,EAAiC;AAC/BN,kBAAQ,IAAR;AACD;AACF,OAJD;;AAMA,aAAOA,KAAP;AACD;;;6BAEQ;AACPO,cAAQC,IAAR,CACE,oGADF;;AADO,mBAK4C,KAAKL,KALjD;AAAA,UAKCM,OALD,UAKCA,OALD;AAAA,UAKUC,aALV,UAKUA,aALV;AAAA,UAKyBC,cALzB,UAKyBA,cALzB;;;AAOP,UAAIF,OAAJ,EAAa;AACX,eACE;AAAA;AAAA,YAAkB,eAAeC,aAAjC,EAAgD,SAASD,OAAzD;AACE;AAAA;AAAA;AACE,qBAAO,CAAC,KAAKd,MAAL,CAAYE,SAAb,EAAwBc,kBAAkBA,cAA1C;AADT,eAEM,KAAKR,KAFX;AAIG,iBAAKA,KAAL,CAAWC;AAJd;AADF,SADF;AAUD;;AAED,aACE;AAAA;AAAA;AACE,iBAAO,CAAC,KAAKT,MAAL,CAAYE,SAAb,EAAwBc,kBAAkBA,cAA1C;AADT,WAEM,KAAKR,KAFX;AAIG,aAAKA,KAAL,CAAWC;AAJd,OADF;AAQD;;;;;AAGHV,KAAKkB,SAAL,GAAiB;AACfD,kBAAgB,oBAAUE,GADX;AAEfJ,WAAS,oBAAUK,IAFJ;AAGfJ,iBAAe,oBAAUK,MAHV;AAIfX,YAAU,oBAAUS;AAJL,CAAjB;;AAOAnB,KAAKsB,YAAL,GAAoB;AAClBN,iBAAe;AADG,CAApB;;kBAIehB,I","sourcesContent":["/*eslint-disable no-console */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\nimport Row from './Row';\n\nclass Grid extends Component {\n  styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: this.isRow() ? 'column' : 'row',\n    },\n  });\n\n  isRow() {\n    let isRow = false;\n    React.Children.forEach(this.props.children, child => {\n      if (child && child.type === Row) {\n        isRow = true;\n      }\n    });\n\n    return isRow;\n  }\n\n  render() {\n    console.warn(\n      'Warning: Grid has been deprecated and will be removed in a future version of React Native Elements'\n    );\n\n    const { onPress, activeOpacity, containerStyle } = this.props;\n\n    if (onPress) {\n      return (\n        <TouchableOpacity activeOpacity={activeOpacity} onPress={onPress}>\n          <View\n            style={[this.styles.container, containerStyle && containerStyle]}\n            {...this.props}\n          >\n            {this.props.children}\n          </View>\n        </TouchableOpacity>\n      );\n    }\n\n    return (\n      <View\n        style={[this.styles.container, containerStyle && containerStyle]}\n        {...this.props}\n      >\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nGrid.propTypes = {\n  containerStyle: PropTypes.any,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  children: PropTypes.any,\n};\n\nGrid.defaultProps = {\n  activeOpacity: 1,\n};\n\nexport default Grid;\n"]}]