["f73529ac9e4333140383ab66e79490354ff45c4f","d3824011a1277dc22df02ed0271e24c258f737d9",["prop-types","react","react-native","../config/ViewPropTypes","../icons/Icon","../text/Text"],[91,195,292,339,463,559],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/avatar/Avatar.js"],"names":["DEFAULT_COLORS","Avatar","component","props","onPress","onLongPress","containerStyle","icon","iconStyle","source","small","medium","large","xlarge","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","activeOpacity","showEditButton","editButton","onEditPress","attributes","width","height","titleSize","iconSize","Component","renderUtils","editButtonProps","defaultEditButtonSize","editButtonSize","size","editButtonSizeStyle","borderRadius","editButtonIconSize","styles","style","underlayColor","iconName","iconType","iconColor","renderContent","avatar","color","name","type","create","container","paddingTop","paddingRight","paddingBottom","backgroundColor","overlayContainer","flex","alignItems","alignSelf","justifyContent","position","top","left","right","bottom","fontSize","textAlign","select","ios","shadowColor","shadowOffset","shadowRadius","shadowOpacity","android","elevation","defaultProps","propTypes","oneOf","number","func","any","bool","string","object","shape"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  View,\n  Text as NativeText,\n  Image,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nimport Icon from '../icons/Icon';\nimport Text from '../text/Text';\n\nconst DEFAULT_COLORS = ['#000', '#333', '#555', '#888', '#aaa', '#ddd'];\n\nconst Avatar = props => {\n  const {\n    component,\n    onPress,\n    onLongPress,\n    containerStyle,\n    icon,\n    iconStyle,\n    source,\n    small,\n    medium,\n    large,\n    xlarge,\n    avatarStyle,\n    rounded,\n    title,\n    titleStyle,\n    overlayContainerStyle,\n    activeOpacity,\n    showEditButton,\n    editButton,\n    onEditPress,\n    ...attributes\n  } = props;\n\n  let { width, height } = props;\n\n  if (small) {\n    width = 34;\n    height = 34;\n  } else if (medium) {\n    width = 50;\n    height = 50;\n  } else if (large) {\n    width = 75;\n    height = 75;\n  } else if (xlarge) {\n    width = 150;\n    height = 150;\n  } else if (!width && !height) {\n    width = 34;\n    height = 34;\n  } else if (!width) {\n    width = height;\n  } else if (!height) {\n    height = width;\n  }\n\n  let titleSize = width / 2;\n  let iconSize = width / 2;\n\n  let Component = onPress || onLongPress ? TouchableOpacity : View;\n  if (component) {\n    Component = component;\n  }\n\n  const renderUtils = () => {\n    if (showEditButton) {\n      const editButtonProps = { ...editButton };\n\n      const defaultEditButtonSize = (width + height) / 2 / 3;\n      const editButtonSize = editButton.size || defaultEditButtonSize;\n      const editButtonSizeStyle = {\n        width: editButtonSize,\n        height: editButtonSize,\n        borderRadius: editButtonSize / 2,\n      };\n      const editButtonIconSize = editButtonSize * 0.8;\n\n      return (\n        <TouchableHighlight\n          style={[\n            styles.editButton,\n            editButtonSizeStyle,\n            editButtonProps.style,\n          ]}\n          underlayColor={editButtonProps.underlayColor}\n          onPress={onEditPress}\n        >\n          <View>\n            <Icon\n              size={editButtonIconSize}\n              name={editButtonProps.iconName}\n              type={editButtonProps.iconType}\n              color={editButtonProps.iconColor}\n            />\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n\n  const renderContent = () => {\n    if (source) {\n      return (\n        <Image\n          style={[\n            styles.avatar,\n            rounded && { borderRadius: width / 2 },\n            avatarStyle && avatarStyle,\n          ]}\n          source={source}\n        />\n      );\n    } else if (title) {\n      return (\n        <Text style={[styles.title, titleStyle && titleStyle]}>\n          {title}\n        </Text>\n      );\n    } else if (icon) {\n      return (\n        <Icon\n          style={iconStyle && iconStyle}\n          color={icon.color || 'white'}\n          name={icon.name || 'user'}\n          size={icon.size || iconSize}\n          type={icon.type && icon.type}\n        />\n      );\n    }\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      paddingTop: 10,\n      paddingRight: 10,\n      paddingBottom: 10,\n      backgroundColor: 'transparent',\n      width: width,\n      height: height,\n    },\n    avatar: {\n      width: width,\n      height: height,\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: 'rgba(0,0,0,0.2)',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n    title: {\n      color: '#ffffff',\n      fontSize: titleSize,\n      backgroundColor: 'rgba(0,0,0,0)',\n      textAlign: 'center',\n    },\n    editButton: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: DEFAULT_COLORS[4],\n      ...Platform.select({\n        ios: {\n          shadowColor: DEFAULT_COLORS[0],\n          shadowOffset: { width: 1, height: 1 },\n          shadowRadius: 2,\n          shadowOpacity: 0.5,\n        },\n        android: {\n          elevation: 1,\n        },\n      }),\n    },\n  });\n\n  return (\n    <Component\n      onPress={onPress}\n      onLongPress={onLongPress}\n      activeOpacity={activeOpacity}\n      style={[\n        styles.container,\n        rounded && { borderRadius: width / 2 },\n        containerStyle && containerStyle,\n      ]}\n      {...attributes}\n    >\n      <View\n        style={[\n          styles.overlayContainer,\n          rounded && { borderRadius: width / 2 },\n          overlayContainerStyle && overlayContainerStyle,\n        ]}\n      >\n        {renderContent()}\n      </View>\n      {renderUtils()}\n    </Component>\n  );\n};\n\nconst defaultProps = {\n  showEditButton: false,\n  onEditPress: null,\n  editButton: {\n    size: null,\n    iconName: 'mode-edit',\n    iconType: 'material',\n    iconColor: '#fff',\n    underlayColor: DEFAULT_COLORS[0],\n    style: null,\n  },\n};\n\nAvatar.propTypes = {\n  component: PropTypes.oneOf([\n    View,\n    TouchableOpacity,\n    TouchableHighlight,\n    TouchableNativeFeedback,\n    TouchableWithoutFeedback,\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.any,\n  source: Image.propTypes.source,\n  avatarStyle: PropTypes.any,\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: NativeText.propTypes.style,\n  overlayContainerStyle: PropTypes.any,\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: NativeText.propTypes.style,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  large: PropTypes.bool,\n  xlarge: PropTypes.bool,\n  showEditButton: PropTypes.bool,\n  onEditPress: PropTypes.func,\n  editButton: PropTypes.shape({\n    size: PropTypes.number,\n    iconName: PropTypes.string,\n    iconType: PropTypes.string,\n    iconColor: PropTypes.string,\n    underlayColor: PropTypes.string,\n    style: ViewPropTypes.style,\n  }),\n};\n\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n"]}]