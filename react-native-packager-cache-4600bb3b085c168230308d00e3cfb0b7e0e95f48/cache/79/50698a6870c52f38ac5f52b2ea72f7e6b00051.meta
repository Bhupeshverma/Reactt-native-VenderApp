["e504415d479b14f498aef4ff073b329fa09d1a30","e12c02f8c4104a821552d74723eb2356d3bc0e10",["react-native","fbjs/lib/invariant"],[43,98],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-navigation-experimental-compat/src/NavigationAbstractPanResponder.js"],"names":["PanResponder","require","invariant","EmptyPanHandlers","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","NavigationAbstractPanResponder","config","Object","keys","forEach","fn","name","bind","panHandlers","create","module","exports"],"mappings":";AAUA;;AAEA,IAAMA,eAAeC,wBAAwBD,YAA7C;;AAEA,IAAME,YAAYD,OAAZ,sBAAN;;AAMA,IAAME,mBAAmB;AACvBC,+BAA6B,IADN;AAEvBC,uBAAqB,IAFE;AAGvBC,sBAAoB,IAHG;AAIvBC,yBAAuB,IAJA;AAKvBC,2BAAyB;AALF,CAAzB;;IAYMC,8B,GAIJ,0CAAc;AAAA;;AAAA;;AACZ,MAAMC,SAAS,EAAf;AACAC,SAAOC,IAAP,CAAYT,gBAAZ,EAA8BU,OAA9B,CAAsC,gBAAQ;AAC5C,QAAMC,KAAU,MAAYC,IAAZ,CAAhB;;AAEAb,cACE,OAAOY,EAAP,KAAc,UADhB,EAEE,uEAFF,EAGEC,IAHF;;AAMAL,WAAOK,IAAP,IAAeD,GAAGE,IAAH,OAAf;AACD,GAVD,EAUG,IAVH;;AAYA,OAAKC,WAAL,GAAmBjB,aAAakB,MAAb,CAAoBR,MAApB,EAA4BO,WAA/C;AACD,C;;AAGHE,OAAOC,OAAP,GAAiBX,8BAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nconst PanResponder = require('react-native').PanResponder;\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type  {\n  NavigationPanPanHandlers,\n} from './NavigationTypeDefinition';\n\nconst EmptyPanHandlers = {\n  onMoveShouldSetPanResponder: null,\n  onPanResponderGrant: null,\n  onPanResponderMove: null,\n  onPanResponderRelease: null,\n  onPanResponderTerminate: null,\n};\n\n/**\n * Abstract class that defines the common interface of PanResponder that handles\n * the gesture actions.\n */\nclass NavigationAbstractPanResponder {\n\n  panHandlers: NavigationPanPanHandlers;\n\n  constructor() {\n    const config = {};\n    Object.keys(EmptyPanHandlers).forEach(name => {\n      const fn: any = (this: any)[name];\n\n      invariant(\n        typeof fn === 'function',\n        'subclass of `NavigationAbstractPanResponder` must implement method %s',\n        name\n      );\n\n      config[name] = fn.bind(this);\n    }, this);\n\n    this.panHandlers = PanResponder.create(config).panHandlers;\n  }\n}\n\nmodule.exports = NavigationAbstractPanResponder;\n"]}]