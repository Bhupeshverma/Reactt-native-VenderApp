Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Button = undefined;
var _jsxFileName = '/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/components/Button.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _theme = require('@shoutem/theme');

var _animation = require('@shoutem/animation');

var Button = function (_Component) {
  babelHelpers.inherits(Button, _Component);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var style = babelHelpers.extends({}, this.props.style);
      delete style.underlayColor;

      return _react2.default.createElement(_reactNative.TouchableOpacity, babelHelpers.extends({}, this.props, {
        style: style,
        underlayColor: this.props.style.underlayColor,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 19
        }
      }));
    }
  }]);
  return Button;
}(_react.Component);

Button.propTypes = babelHelpers.extends({}, _reactNative.TouchableOpacity.propTypes);

var AnimatedButton = (0, _animation.connectAnimation)(Button);
var StyledButton = (0, _theme.connectStyle)('shoutem.ui.Button')(AnimatedButton);
exports.Button = StyledButton;