Object.defineProperty(exports,"__esModule",{value:true});var animations=exports.animations={
heroAnimation:function heroAnimation(driver,_ref){var layout=_ref.layout;
return{
transform:[
{
scale:driver.value.interpolate({
inputRange:[-0.9*layout.height,0],
outputRange:[3,1],
extrapolateRight:'clamp'})},

{
translateY:driver.value.interpolate({
inputRange:[-100,100],
outputRange:[-50,50],
extrapolateLeft:'clamp'})}]};




},
zoomOutAnimation:function zoomOutAnimation(driver,_ref2){var animationOptions=_ref2.animationOptions;var
inputRange=animationOptions.inputRange,maxFactor=animationOptions.maxFactor;
return{
transform:[
{
scale:driver.value.interpolate({
inputRange:inputRange,
outputRange:[maxFactor,1],
extrapolateRight:'clamp'})}]};




},
zoomInAnimation:function zoomInAnimation(driver,_ref3){var animationOptions=_ref3.animationOptions;var
inputRange=animationOptions.inputRange,maxFactor=animationOptions.maxFactor;
return{
transform:[
{
scale:driver.value.interpolate({
inputRange:inputRange,
outputRange:[1,maxFactor],
extrapolateRight:'clamp'})}]};




},
fadeOutAnimation:function fadeOutAnimation(driver,_ref4){var animationOptions=_ref4.animationOptions;var
inputRange=animationOptions.inputRange;
return{
opacity:driver.value.interpolate({
inputRange:inputRange,
outputRange:[1,0],
extrapolate:'clamp'})};


},
fadeInAnimation:function fadeInAnimation(driver,_ref5){var animationOptions=_ref5.animationOptions;var
inputRange=animationOptions.inputRange;
return{
opacity:driver.value.interpolate({
inputRange:inputRange,
outputRange:[0,1],
extrapolate:'clamp'})};


},
slideInAnimation:function slideInAnimation(driver,_ref6){var animationOptions=_ref6.animationOptions;var
offset=animationOptions.offset,inputRange=animationOptions.inputRange;var _offset$x=
offset.x,x=_offset$x===undefined?0:_offset$x,_offset$y=offset.y,y=_offset$y===undefined?0:_offset$y;

return{
transform:[
{
translateY:driver.value.interpolate({
inputRange:inputRange,
outputRange:[y,0],
extrapolate:'clamp'})},


{
translateX:driver.value.interpolate({
inputRange:inputRange,
outputRange:[x,0],
extrapolate:'clamp'})}]};




},
slideOutAnimation:function slideOutAnimation(driver,_ref7){var animationOptions=_ref7.animationOptions;var
offset=animationOptions.offset,inputRange=animationOptions.inputRange;var _offset$x2=
offset.x,x=_offset$x2===undefined?0:_offset$x2,_offset$y2=offset.y,y=_offset$y2===undefined?0:_offset$y2;
return{
transform:[
{
translateY:driver.value.interpolate({
inputRange:inputRange,
outputRange:[0,y],
extrapolate:'clamp'})},

{
translateX:driver.value.interpolate({
inputRange:inputRange,
outputRange:[0,x],
extrapolate:'clamp'})}]};




},
rotateAnimation:function rotateAnimation(driver,_ref8){var animationOptions=_ref8.animationOptions;var

inputRange=


animationOptions.inputRange,_animationOptions$axi=animationOptions.axis,axis=_animationOptions$axi===undefined?'':_animationOptions$axi,angle=animationOptions.angle;

return{
transform:[babelHelpers.defineProperty({},"rotate"+

axis.toUpperCase(),driver.value.interpolate({
inputRange:inputRange,
outputRange:["0deg",angle]}))]};




}};