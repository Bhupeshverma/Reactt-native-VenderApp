["aa4fec45f459558838d8b3502e1902cf4ca761fc","cc74bfe5baad1eb71b04f2922b3d7c84267d6a58",["react","../../components/InlineGallery"],[136,235],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/html/components/Gallery.js"],"names":["Gallery","props","state","selectedIndex","onIndexSelected","bind","handlePhotoPress","setState","data","console","log","propTypes","PropTypes","func"],"mappings":";;;;;;;AAAA;;;;AAEA;;IAMqBA,O;;;AAMnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,qBAAe;AADJ,KAAb;;AAIA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,OAAxB;AARiB;AASlB;;;;oCAEeF,a,EAAe;AAC7B,WAAKI,QAAL,CAAc,EAAEJ,4BAAF,EAAd;AACD;;;uCAEkB;AAAA,mBACkB,KAAKF,KADvB;AAAA,UACTO,IADS,UACTA,IADS;AAAA,UACHF,gBADG,UACHA,gBADG;AAAA,UAETH,aAFS,GAES,KAAKD,KAFd,CAETC,aAFS;;;AAIjB,UAAI,CAACG,gBAAL,EAAuB;AACrBG,gBAAQC,GAAR,CAAY,oEAAZ;AACA;AACD;;AAEDJ,uBAAiBE,IAAjB,EAAuBL,aAAvB;AACD;;;6BAEQ;AAAA,UACCA,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;;;AAGP,aACE;AACE,iBAAS,KAAKG,gBADhB;AAEE,yBAAiB,KAAKF,eAFxB;AAGE,uBAAeD;AAHjB,SAIM,KAAKF,KAJX,EADF;AAQD;;;4BA3CMU,S,4BACF,6BAAcA,S;AACjBL,oBAAkB,gBAAMM,SAAN,CAAgBC;;kBAHjBb,O","sourcesContent":["import React, { Component } from 'react';\n\nimport { InlineGallery } from '../../components/InlineGallery';\n\n/**\n * Use to render a HTML gallery component.\n * Style interface correspond to InlineGallery from @shoutem/ui.\n */\nexport default class Gallery extends Component {\n  static propTypes = {\n    ...InlineGallery.propTypes,\n    handlePhotoPress: React.PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIndex: 0,\n    };\n\n    this.onIndexSelected = this.onIndexSelected.bind(this);\n    this.handlePhotoPress = this.handlePhotoPress.bind(this);\n  }\n\n  onIndexSelected(selectedIndex) {\n    this.setState({ selectedIndex });\n  }\n\n  handlePhotoPress() {\n    const { data, handlePhotoPress } = this.props;\n    const { selectedIndex } = this.state;\n\n    if (!handlePhotoPress) {\n      console.log('There is no \"handlePhotoPress\" handler for RichMediaGallery photo.');\n      return;\n    }\n\n    handlePhotoPress(data, selectedIndex);\n  }\n\n  render() {\n    const { selectedIndex } = this.state;\n\n    return (\n      <InlineGallery\n        onPress={this.handlePhotoPress}\n        onIndexSelected={this.onIndexSelected}\n        selectedIndex={selectedIndex}\n        {...this.props}\n      />\n    );\n  }\n}\n"]}]