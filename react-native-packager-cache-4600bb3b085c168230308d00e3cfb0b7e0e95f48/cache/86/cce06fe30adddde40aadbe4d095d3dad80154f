Object.defineProperty(exports,"__esModule",{value:true});exports.default=undefined;var _class,_temp;

/**
 * TouchableItem renders a touchable that looks native on both iOS and Android.
 *
 * It provides an abstraction on top of TouchableNativeFeedback and
 * TouchableOpacity.
 *
 * On iOS you can pass the props of TouchableOpacity, on Android pass the props
 * of TouchableNativeFeedback.
 */
var _react=require("react");var _react2=babelHelpers.interopRequireDefault(_react);
var _reactNative=require("react-native");







var ANDROID_VERSION_LOLLIPOP=21;var















TouchableItem=(_temp=_class=function(_Component){babelHelpers.inherits(TouchableItem,_Component);function TouchableItem(){babelHelpers.classCallCheck(this,TouchableItem);return babelHelpers.possibleConstructorReturn(this,(TouchableItem.__proto__||Object.getPrototypeOf(TouchableItem)).apply(this,arguments));}babelHelpers.createClass(TouchableItem,[{key:"render",value:function render()





{
/*
     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,
     * therefore only enable it on Android Lollipop and above.
     *
     * All touchables on Android should have the ripple effect according to
     * platform design guidelines.
     * We need to pass the background prop to specify a borderless ripple effect.
     */
if(
_reactNative.Platform.OS==='android'&&
_reactNative.Platform.Version>=ANDROID_VERSION_LOLLIPOP)
{var _props=
this.props,_style=_props.style,rest=babelHelpers.objectWithoutProperties(_props,["style"]);// eslint-disable-line no-unused-vars

return(
_react2.default.createElement(_reactNative.TouchableNativeFeedback,babelHelpers.extends({},
rest,{
style:null,
background:_reactNative.TouchableNativeFeedback.Ripple(
this.props.pressColor,
this.props.borderless)}),


_react2.default.createElement(_reactNative.View,{style:this.props.style},
_react.Children.only(this.props.children))));



}

return(
_react2.default.createElement(_reactNative.TouchableOpacity,this.props,
this.props.children));


}}]);return TouchableItem;}(_react.Component),_class.defaultProps={pressColor:'rgba(0, 0, 0, .32)'},_temp);exports.default=TouchableItem;