Object.defineProperty(exports,"__esModule",{value:true});exports.FadeIn=undefined;var _class,_temp;var _react=require("react");var _react2=babelHelpers.interopRequireDefault(_react);
var _View=require("./View");
var _DriverShape=require("../drivers/DriverShape");
/*
 * FadeIn Component adds fade in effect to its children components.
 * Connect it to an animation driver and pass the input range to animate it.
 * e.g.:
 * ...
 * const driver = new ScrollDriver();
 *
 * return (
 *  <ScrollView
 *    {...driver.scrollViewProps}
 *  >
 *    <FadeIn
 *      driver={driver}
 *      inputRange={[100,150]}
 *    >
 *      <Image />
 *    </FadeIn>
 *  </ScrollView>
 * );
 *
 * ...
 * Above code will create scroll dependent fade in animation over Image component
 * from scroll position 100, to scroll position 150 where image is fully transparent at
 * scroll position 100, and opaque at scroll position 150
 */var
FadeIn=exports.FadeIn=(_temp=_class=function(_Component){babelHelpers.inherits(FadeIn,_Component);function FadeIn(){babelHelpers.classCallCheck(this,FadeIn);return babelHelpers.possibleConstructorReturn(this,(FadeIn.__proto__||Object.getPrototypeOf(FadeIn)).apply(this,arguments));}babelHelpers.createClass(FadeIn,[{key:"render",value:function render()
















{var _props=
this.props,driver=_props.driver,children=_props.children,_props$inputRange=_props.inputRange,inputRange=_props$inputRange===undefined?[0,1]:_props$inputRange,style=_props.style;

return(
_react2.default.createElement(_View.View,{
driver:driver,
animationName:"fadeIn",
animationOptions:{inputRange:inputRange},
style:babelHelpers.extends({opacity:0},style)},

children));


}}]);return FadeIn;}(_react.Component),_class.propTypes={/**
     * An instance of animation driver, usually ScrollDriver
     */driver:_DriverShape.DriverShape.isRequired,/**
     * Components to which an effect will be applied
     */children:_react2.default.PropTypes.node,/**
     * pair of [start, end] values from animation driver, how
     * children would fade in
     */inputRange:_react2.default.PropTypes.array},_temp);