["795571038ed2d54209116211fc519f7b4d254c34","6438705f7af83a68c01c496ebec7d5fac654bad2",["react","@shoutem/theme","./View"],[143,234,274],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/components/PageIndicators.js"],"names":["PageIndicators","props","renderPageIndicator","bind","index","count","activeIndex","indicatorStyle","style","indicatorContainer","maxCount","pageIndicators","maxIndicatorsCount","Math","min","i","push","container","propTypes","number","object","defaultProps","StyledPageIndicators"],"mappings":";;;;;;;AAAA;;;;AAKA;;AACA;;IAKMA,c;;;AAkBJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,4IACXA,KADW;;AAEjB,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,OAA3B;AAFiB;AAGlB;;;;wCAEmBC,K,EAAOC,K,EAAOC,W,EAAaC,c,EAAgB;AAAA,UACrDC,KADqD,GAC3C,KAAKP,KADsC,CACrDO,KADqD;;AAE7D,aACE;AAAA;AAAA;AACE,iBAAOA,MAAMC,kBADf;AAEE,iCAAqBL;AAFvB;AAIE,oDAAM,WAAWG,cAAjB;AAJF,OADF;AAQD;;;6BAEQ;AAAA,mBACyC,KAAKN,KAD9C;AAAA,UACCO,KADD,UACCA,KADD;AAAA,UACQH,KADR,UACQA,KADR;AAAA,UACeK,QADf,UACeA,QADf;AAAA,UACyBJ,WADzB,UACyBA,WADzB;;;AAGP,UAAMK,iBAAiB,EAAvB;AACA,UAAMC,qBAAqBC,KAAKC,GAAL,CAAST,KAAT,EAAgBK,QAAhB,CAA3B;;AAEA,WAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIH,kBAApB,EAAwCG,KAAK,CAA7C,EAAgD;AAC9C,YAAIR,iBAAiB,EAArB;;AAEA,YAAID,gBAAgBS,CAApB,EAAuB;AAGrBR,2BAAiB,UAAjB;AACD,SAJD,MAIO,IAAID,eAAeS,CAAf,IAAqBH,qBAAqB,CAAtB,KAA6BG,CAArD,EAAwD;AAG7DR,2BAAiB,UAAjB;AACD;;AAEDI,uBAAeK,IAAf,CACE,KAAKd,mBAAL,CAAyBa,CAAzB,EAA4BH,kBAA5B,EAAgDN,WAAhD,EAA6DC,cAA7D,CADF;AAGD;;AAED,aACE;AAAA;AAAA,UAAM,OAAOC,MAAMS,SAAnB;AACGN;AADH,OADF;AAKD;;;4BA/DMO,S,GAAY;AAEjBZ,eAAa,iBAAUa,MAFN;;AAIjBd,SAAO,iBAAUc,MAJA;;AAQjBT,YAAU,iBAAUS,MARH;;AAUjBX,SAAO,iBAAUY;AAVA,C,SAaZC,Y,GAAe;AACpBX,YAAU;AADU,C;;;AAsDxB,IAAMY,uBAAuB,yBAAa,2BAAb,EAA0CtB,cAA1C,CAA7B;;QAG0BA,c,GAAxBsB,oB","sourcesContent":["import React, {\n  Component,\n  PropTypes,\n} from 'react';\n\nimport { connectStyle } from '@shoutem/theme';\nimport { View } from './View';\n\n/**\n * Renders Page indicators (dots)\n */\nclass PageIndicators extends Component {\n  static propTypes = {\n    // ActiveIndex: number defining which page indicator will be rendered as active (selected)\n    activeIndex: PropTypes.number,\n    // Count: number defining how many page indicators will be rendered\n    count: PropTypes.number,\n    // maxCount defining highest number of page indicators that can be rendered\n    // If `count` is higher than `maxCount`, then `maxCount` number of indicators\n    // will be rendered. Defaults to 10\n    maxCount: PropTypes.number,\n    // Style prop used to override default (theme) styling\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    maxCount: 10,\n  }\n\n  constructor(props) {\n    super(props);\n    this.renderPageIndicator = this.renderPageIndicator.bind(this);\n  }\n\n  renderPageIndicator(index, count, activeIndex, indicatorStyle) {\n    const { style } = this.props;\n    return (\n      <View\n        style={style.indicatorContainer}\n        key={`pageIndicator${index}`}\n      >\n        <View styleName={indicatorStyle} />\n      </View>\n    );\n  }\n\n  render() {\n    const { style, count, maxCount, activeIndex } = this.props;\n\n    const pageIndicators = [];\n    const maxIndicatorsCount = Math.min(count, maxCount);\n\n    for (let i = 0; i < maxIndicatorsCount; i += 1) {\n      let indicatorStyle = '';\n\n      if (activeIndex === i) {\n        // If currently selected index matches index of page indicator that is rendered\n        // then we should apply different styling\n        indicatorStyle = 'selected';\n      } else if (activeIndex >= i && (maxIndicatorsCount - 1) === i) {\n        // If currently selected index exceeds over number of indicators,\n        // we should treat last indicator as selected one\n        indicatorStyle = 'selected';\n      }\n\n      pageIndicators.push(\n        this.renderPageIndicator(i, maxIndicatorsCount, activeIndex, indicatorStyle)\n      );\n    }\n\n    return (\n      <View style={style.container}>\n        {pageIndicators}\n      </View>\n    );\n  }\n\n}\n\nconst StyledPageIndicators = connectStyle('shoutem.ui.PageIndicators')(PageIndicators);\n\nexport {\n  StyledPageIndicators as PageIndicators,\n};\n"]}]