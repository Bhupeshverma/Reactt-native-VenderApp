["27fdbbd9f15b9e7d6c7342e81fec00d783736069","dbabd8272d65b61b0bcaa98257be25289f3a42af",["prop-types","react","react-native"],[91,195,292],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/grid/Row.js"],"names":["Row","console","warn","containerStyle","props","size","onPress","activeOpacity","styles","create","container","flex","height","flexDirection","children","propTypes","number","any","func","defaultProps"],"mappings":";;;;AACA;;;;AACA;;;;AACA;;AAEA,IAAMA,MAAM,SAANA,GAAM,QAAS;AACnBC,UAAQC,IAAR,CACE,mGADF;;AADmB,MAKXC,cALW,GAKsCC,KALtC,CAKXD,cALW;AAAA,MAKKE,IALL,GAKsCD,KALtC,CAKKC,IALL;AAAA,MAKWC,OALX,GAKsCF,KALtC,CAKWE,OALX;AAAA,MAKoBC,aALpB,GAKsCH,KALtC,CAKoBG,aALpB;;;AAOnB,MAAMC,SAAS,wBAAWC,MAAX,CAAkB;AAC/BC,eAAW;AACTC,YAAMN,OAAOA,IAAP,GAAcF,kBAAkBA,eAAeS,MAAjC,GAA0C,CAA1C,GAA8C,CADzD;AAETC,qBAAe;AAFN;AADoB,GAAlB,CAAf;;AAOA,MAAIP,OAAJ,EAAa;AACX,WACE;AAAA;AAAA;AACE,eAAO,CAACE,OAAOE,SAAR,EAAmBP,kBAAkBA,cAArC,CADT;AAEE,uBAAeI,aAFjB;AAGE,iBAASD;AAHX;AAKE;AAAA;AAAUF,aAAV;AACGA,cAAMU;AADT;AALF,KADF;AAWD;;AAED,SACE;AAAA;AAAA;AACE,aAAO,CAACN,OAAOE,SAAR,EAAmBP,kBAAkBA,cAArC;AADT,OAEMC,KAFN;AAIGA,UAAMU;AAJT,GADF;AAQD,CApCD;;AAsCAd,IAAIe,SAAJ,GAAgB;AACdV,QAAM,oBAAUW,MADF;AAEdb,kBAAgB,oBAAUc,GAFZ;AAGdX,WAAS,oBAAUY,IAHL;AAIdX,iBAAe,oBAAUS,MAJX;AAKdF,YAAU,oBAAUG;AALN,CAAhB;;AAQAjB,IAAImB,YAAJ,GAAmB;AACjBZ,iBAAe;AADE,CAAnB;;kBAIeP,G","sourcesContent":["/*eslint-disable no-console */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\n\nconst Row = props => {\n  console.warn(\n    'Warning: Row has been deprecated and will be removed in a future version of React Native Elements'\n  );\n\n  const { containerStyle, size, onPress, activeOpacity } = props;\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: size ? size : containerStyle && containerStyle.height ? 0 : 1,\n      flexDirection: 'row',\n    },\n  });\n\n  if (onPress) {\n    return (\n      <TouchableOpacity\n        style={[styles.container, containerStyle && containerStyle]}\n        activeOpacity={activeOpacity}\n        onPress={onPress}\n      >\n        <View {...props}>\n          {props.children}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, containerStyle && containerStyle]}\n      {...props}\n    >\n      {props.children}\n    </View>\n  );\n};\n\nRow.propTypes = {\n  size: PropTypes.number,\n  containerStyle: PropTypes.any,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  children: PropTypes.any,\n};\n\nRow.defaultProps = {\n  activeOpacity: 1,\n};\n\nexport default Row;\n"]}]