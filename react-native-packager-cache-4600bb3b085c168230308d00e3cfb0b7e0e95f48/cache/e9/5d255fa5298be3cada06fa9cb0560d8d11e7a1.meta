["96178f58555c96c034ec8b47bb261e1068e415ba","8e2491e473724970f076e807fd582a04a36f5fe1",["prop-types","react","react-native","../text/Text","../config/fonts","../config/colors","../buttons/Button","../helpers/normalizeText","../config/ViewPropTypes"],[91,195,292,330,426,528,633,746,880],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/pricing/PricingCard.js"],"names":["PricingCard","containerStyle","props","wrapperStyle","title","price","info","button","color","titleFont","pricingFont","infoFont","buttonFont","onButtonPress","attributes","styles","container","wrapper","pricingTitle","fontFamily","pricingPrice","map","item","i","pricingInfo","name","icon","buttonStyle","backgroundColor","propTypes","style","string","oneOfType","number","array","object","any","defaultProps","primary","create","margin","marginBottom","borderColor","grey5","borderWidth","padding","select","ios","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","android","elevation","textAlign","fontSize","fontWeight","black","marginTop","bold","grey3"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport Text from '../text/Text';\nimport fonts from '../config/fonts';\nimport colors from '../config/colors';\nimport Button from '../buttons/Button';\nimport normalize from '../helpers/normalizeText';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst PricingCard = props => {\n  const {\n    containerStyle,\n    wrapperStyle,\n    title,\n    price,\n    info,\n    button,\n    color,\n    titleFont,\n    pricingFont,\n    infoFont,\n    buttonFont,\n    onButtonPress,\n    ...attributes\n  } = props;\n  return (\n    <View\n      style={[styles.container, containerStyle && containerStyle]}\n      {...attributes}\n    >\n      <View style={[styles.wrapper, wrapperStyle && wrapperStyle]}>\n        <Text\n          style={[\n            styles.pricingTitle,\n            { color },\n            titleFont && { fontFamily: titleFont },\n          ]}\n        >\n          {title}\n        </Text>\n        <Text\n          style={[\n            styles.pricingPrice,\n            pricingFont && { fontFamily: pricingFont },\n          ]}\n        >\n          {price}\n        </Text>\n        {info.map((item, i) => {\n          return (\n            <Text\n              key={i}\n              style={[styles.pricingInfo, infoFont && { fontFamily: infoFont }]}\n            >\n              {item}\n            </Text>\n          );\n        })}\n        <Button\n          icon={{ name: button.icon }}\n          buttonStyle={[\n            styles.button,\n            button.buttonStyle,\n            { backgroundColor: color },\n          ]}\n          fontFamily={buttonFont && buttonFont}\n          title={button.title}\n          onPress={onButtonPress}\n        />\n      </View>\n    </View>\n  );\n};\n\nPricingCard.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  info: PropTypes.array,\n  button: PropTypes.object,\n  color: PropTypes.string,\n  onButtonPress: PropTypes.any,\n  titleFont: PropTypes.string,\n  pricingFont: PropTypes.string,\n  infoFont: PropTypes.string,\n  buttonFont: PropTypes.string,\n};\n\nPricingCard.defaultProps = {\n  color: colors.primary,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 15,\n    marginBottom: 15,\n    backgroundColor: 'white',\n    borderColor: colors.grey5,\n    borderWidth: 1,\n    padding: 15,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: { height: 1, width: 0 },\n        shadowOpacity: 0.5,\n        shadowRadius: 0.5,\n      },\n      android: {\n        elevation: 1,\n      },\n    }),\n  },\n  wrapper: {\n    backgroundColor: 'transparent',\n  },\n  pricingTitle: {\n    textAlign: 'center',\n    color: colors.primary,\n    fontSize: normalize(30),\n    ...Platform.select({\n      ios: {\n        fontWeight: '800',\n      },\n      android: {\n        ...fonts.android.black,\n      },\n    }),\n  },\n  pricingPrice: {\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: normalize(40),\n    ...Platform.select({\n      ios: {\n        fontWeight: '700',\n      },\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n  pricingInfo: {\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n    color: colors.grey3,\n    ...Platform.select({\n      ios: {\n        fontWeight: '600',\n      },\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n  button: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n});\n\nexport default PricingCard;\n"]}]