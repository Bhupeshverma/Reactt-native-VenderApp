["6cf5515386d7bf3d5319a98bdbedb146aa112a72","f159fc7bcb0f6ed22ed5d238a2f5d3269ce2b8cd",["lodash/difference","lodash/union","lodash/isPlainObject","symbol-observable"],[910,1011,1105,1226],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/redux-devtools-instrument/lib/instrument.js"],"names":["exports","__esModule","INIT_ACTION","ActionCreators","ActionTypes","undefined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","liftAction","liftReducerWith","unliftState","unliftStore","default","instrument","_difference","require","_difference2","_interopRequireDefault","_union","_union2","_isPlainObject","_isPlainObject2","_symbolObservable","_symbolObservable2","PERFORM_ACTION","RESET","ROLLBACK","COMMIT","SWEEP","TOGGLE_ACTION","SET_ACTIONS_ACTIVE","JUMP_TO_STATE","JUMP_TO_ACTION","REORDER_ACTION","IMPORT_STATE","LOCK_CHANGES","PAUSE_RECORDING","performAction","action","Error","type","timestamp","Date","now","reset","rollback","commit","sweep","toggleAction","id","setActionsActive","start","end","active","reorderAction","actionId","beforeActionId","jumpToState","index","jumpToAction","importState","nextLiftedState","noRecompute","lockChanges","status","pauseRecording","computeWithTryCatch","reducer","state","nextState","nextError","err","toString","window","chrome","process","setTimeout","console","error","computeNextEntry","shouldCatchErrors","recomputeStates","computedStates","minInvalidatedStateIndex","committedState","actionsById","stagedActionIds","skippedActionIds","nextComputedStates","slice","previousEntry","previousState","shouldSkip","indexOf","entry","push","initialCommittedState","monitorReducer","options","initialLiftedState","monitorState","nextActionId","currentStateIndex","isLocked","shouldStartLocked","isPaused","shouldRecordChanges","liftedState","liftedAction","_ref","commitExcessActions","n","excess","idsToDelete","filter","concat","computePausedAction","shouldInit","_extends2","computedState","pauseActionType","maxAge","_ret","actionIds","Infinity","_index","Math","min","_actionId","idx","newIdx","count","diff","Array","isArray","preloadedState","forEach","_liftedAction$nextLif","shouldHotReload","liftedStore","liftReducer","_extends3","lastDefinedState","getState","dispatch","replaceReducer","nextReducer","subscribe","observer","TypeError","observeState","next","unsubscribe","createStore","initialState","enhancer","r"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.INIT_ACTION = exports.ActionCreators = exports.ActionTypes = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.liftAction = liftAction;\nexports.liftReducerWith = liftReducerWith;\nexports.unliftState = unliftState;\nexports.unliftStore = unliftStore;\nexports.default = instrument;\n\nvar _difference = require('lodash/difference');\n\nvar _difference2 = _interopRequireDefault(_difference);\n\nvar _union = require('lodash/union');\n\nvar _union2 = _interopRequireDefault(_union);\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ActionTypes = exports.ActionTypes = {\n  PERFORM_ACTION: 'PERFORM_ACTION',\n  RESET: 'RESET',\n  ROLLBACK: 'ROLLBACK',\n  COMMIT: 'COMMIT',\n  SWEEP: 'SWEEP',\n  TOGGLE_ACTION: 'TOGGLE_ACTION',\n  SET_ACTIONS_ACTIVE: 'SET_ACTIONS_ACTIVE',\n  JUMP_TO_STATE: 'JUMP_TO_STATE',\n  JUMP_TO_ACTION: 'JUMP_TO_ACTION',\n  REORDER_ACTION: 'REORDER_ACTION',\n  IMPORT_STATE: 'IMPORT_STATE',\n  LOCK_CHANGES: 'LOCK_CHANGES',\n  PAUSE_RECORDING: 'PAUSE_RECORDING'\n};\n\n/**\n * Action creators to change the History state.\n */\nvar ActionCreators = exports.ActionCreators = {\n  performAction: function performAction(action) {\n    if (!(0, _isPlainObject2.default)(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    return { type: ActionTypes.PERFORM_ACTION, action: action, timestamp: Date.now() };\n  },\n  reset: function reset() {\n    return { type: ActionTypes.RESET, timestamp: Date.now() };\n  },\n  rollback: function rollback() {\n    return { type: ActionTypes.ROLLBACK, timestamp: Date.now() };\n  },\n  commit: function commit() {\n    return { type: ActionTypes.COMMIT, timestamp: Date.now() };\n  },\n  sweep: function sweep() {\n    return { type: ActionTypes.SWEEP };\n  },\n  toggleAction: function toggleAction(id) {\n    return { type: ActionTypes.TOGGLE_ACTION, id: id };\n  },\n  setActionsActive: function setActionsActive(start, end) {\n    var active = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\n    return { type: ActionTypes.SET_ACTIONS_ACTIVE, start: start, end: end, active: active };\n  },\n  reorderAction: function reorderAction(actionId, beforeActionId) {\n    return { type: ActionTypes.REORDER_ACTION, actionId: actionId, beforeActionId: beforeActionId };\n  },\n  jumpToState: function jumpToState(index) {\n    return { type: ActionTypes.JUMP_TO_STATE, index: index };\n  },\n  jumpToAction: function jumpToAction(actionId) {\n    return { type: ActionTypes.JUMP_TO_ACTION, actionId: actionId };\n  },\n  importState: function importState(nextLiftedState, noRecompute) {\n    return { type: ActionTypes.IMPORT_STATE, nextLiftedState: nextLiftedState, noRecompute: noRecompute };\n  },\n  lockChanges: function lockChanges(status) {\n    return { type: ActionTypes.LOCK_CHANGES, status: status };\n  },\n  pauseRecording: function pauseRecording(status) {\n    return { type: ActionTypes.PAUSE_RECORDING, status: status };\n  }\n};\n\nvar INIT_ACTION = exports.INIT_ACTION = { type: '@@INIT' };\n\n/**\n * Computes the next entry with exceptions catching.\n */\nfunction computeWithTryCatch(reducer, action, state) {\n  var nextState = state;\n  var nextError = void 0;\n  try {\n    nextState = reducer(state, action);\n  } catch (err) {\n    nextError = err.toString();\n    if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof window.chrome !== 'undefined' || typeof window.process !== 'undefined' && window.process.type === 'renderer')) {\n      // In Chrome, rethrowing provides better source map support\n      setTimeout(function () {\n        throw err;\n      });\n    } else {\n      console.error(err);\n    }\n  }\n\n  return {\n    state: nextState,\n    error: nextError\n  };\n}\n\n/**\n * Computes the next entry in the log by applying an action.\n */\nfunction computeNextEntry(reducer, action, state, shouldCatchErrors) {\n  if (!shouldCatchErrors) {\n    return { state: reducer(state, action) };\n  }\n  return computeWithTryCatch(reducer, action, state);\n}\n\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n */\nfunction recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, shouldCatchErrors) {\n  // Optimization: exit early and return the same reference\n  // if we know nothing could have changed.\n  if (!computedStates || minInvalidatedStateIndex === -1 || minInvalidatedStateIndex >= computedStates.length && computedStates.length === stagedActionIds.length) {\n    return computedStates;\n  }\n\n  var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n  for (var i = minInvalidatedStateIndex; i < stagedActionIds.length; i++) {\n    var actionId = stagedActionIds[i];\n    var action = actionsById[actionId].action;\n\n    var previousEntry = nextComputedStates[i - 1];\n    var previousState = previousEntry ? previousEntry.state : committedState;\n\n    var shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n    var entry = void 0;\n    if (shouldSkip) {\n      entry = previousEntry;\n    } else {\n      if (shouldCatchErrors && previousEntry && previousEntry.error) {\n        entry = {\n          state: previousState,\n          error: 'Interrupted by an error up the chain'\n        };\n      } else {\n        entry = computeNextEntry(reducer, action, previousState, shouldCatchErrors);\n      }\n    }\n    nextComputedStates.push(entry);\n  }\n\n  return nextComputedStates;\n}\n\n/**\n * Lifts an app's action into an action on the lifted store.\n */\nfunction liftAction(action) {\n  return ActionCreators.performAction(action);\n}\n\n/**\n * Creates a history state reducer from an app's reducer.\n */\nfunction liftReducerWith(reducer, initialCommittedState, monitorReducer, options) {\n  var initialLiftedState = {\n    monitorState: monitorReducer(undefined, {}),\n    nextActionId: 1,\n    actionsById: { 0: liftAction(INIT_ACTION) },\n    stagedActionIds: [0],\n    skippedActionIds: [],\n    committedState: initialCommittedState,\n    currentStateIndex: 0,\n    computedStates: [],\n    isLocked: options.shouldStartLocked === true,\n    isPaused: options.shouldRecordChanges === false\n  };\n\n  /**\n   * Manages how the history actions modify the history state.\n   */\n  return function (liftedState, liftedAction) {\n    var _ref = liftedState || initialLiftedState;\n\n    var monitorState = _ref.monitorState;\n    var actionsById = _ref.actionsById;\n    var nextActionId = _ref.nextActionId;\n    var stagedActionIds = _ref.stagedActionIds;\n    var skippedActionIds = _ref.skippedActionIds;\n    var committedState = _ref.committedState;\n    var currentStateIndex = _ref.currentStateIndex;\n    var computedStates = _ref.computedStates;\n    var isLocked = _ref.isLocked;\n    var isPaused = _ref.isPaused;\n\n\n    if (!liftedState) {\n      // Prevent mutating initialLiftedState\n      actionsById = _extends({}, actionsById);\n    }\n\n    function commitExcessActions(n) {\n      // Auto-commits n-number of excess actions.\n      var excess = n;\n      var idsToDelete = stagedActionIds.slice(1, excess + 1);\n\n      for (var i = 0; i < idsToDelete.length; i++) {\n        if (computedStates[i + 1].error) {\n          // Stop if error is found. Commit actions up to error.\n          excess = i;\n          idsToDelete = stagedActionIds.slice(1, excess + 1);\n          break;\n        } else {\n          delete actionsById[idsToDelete[i]];\n        }\n      }\n\n      skippedActionIds = skippedActionIds.filter(function (id) {\n        return idsToDelete.indexOf(id) === -1;\n      });\n      stagedActionIds = [0].concat(stagedActionIds.slice(excess + 1));\n      committedState = computedStates[excess].state;\n      computedStates = computedStates.slice(excess);\n      currentStateIndex = currentStateIndex > excess ? currentStateIndex - excess : 0;\n    }\n\n    function computePausedAction(shouldInit) {\n      var _extends2;\n\n      var computedState = void 0;\n      if (shouldInit) {\n        computedState = computedStates[currentStateIndex];\n        monitorState = monitorReducer(monitorState, liftedAction);\n      } else {\n        computedState = computeNextEntry(reducer, liftedAction.action, computedStates[currentStateIndex].state, false);\n      }\n      if (!options.pauseActionType || nextActionId === 1) {\n        return {\n          monitorState: monitorState,\n          actionsById: { 0: liftAction(INIT_ACTION) },\n          nextActionId: 1,\n          stagedActionIds: [0],\n          skippedActionIds: [],\n          committedState: computedState.state,\n          currentStateIndex: 0,\n          computedStates: [computedState],\n          isLocked: isLocked,\n          isPaused: true\n        };\n      }\n      if (shouldInit) {\n        if (currentStateIndex === stagedActionIds.length - 1) {\n          currentStateIndex++;\n        }\n        stagedActionIds = [].concat(stagedActionIds, [nextActionId]);\n        nextActionId++;\n      }\n      return {\n        monitorState: monitorState,\n        actionsById: _extends({}, actionsById, (_extends2 = {}, _extends2[nextActionId - 1] = liftAction({ type: options.pauseActionType }), _extends2)),\n        nextActionId: nextActionId,\n        stagedActionIds: stagedActionIds,\n        skippedActionIds: skippedActionIds,\n        committedState: committedState,\n        currentStateIndex: currentStateIndex,\n        computedStates: [].concat(computedStates.slice(0, stagedActionIds.length - 1), [computedState]),\n        isLocked: isLocked,\n        isPaused: true\n      };\n    }\n\n    // By default, agressively recompute every state whatever happens.\n    // This has O(n) performance, so we'll override this to a sensible\n    // value whenever we feel like we don't have to recompute the states.\n    var minInvalidatedStateIndex = 0;\n\n    switch (liftedAction.type) {\n      case ActionTypes.PERFORM_ACTION:\n        {\n          if (isLocked) return liftedState || initialLiftedState;\n          if (isPaused) return computePausedAction();\n\n          // Auto-commit as new actions come in.\n          if (options.maxAge && stagedActionIds.length === options.maxAge) {\n            commitExcessActions(1);\n          }\n\n          if (currentStateIndex === stagedActionIds.length - 1) {\n            currentStateIndex++;\n          }\n          var actionId = nextActionId++;\n          // Mutation! This is the hottest path, and we optimize on purpose.\n          // It is safe because we set a new key in a cache dictionary.\n          actionsById[actionId] = liftedAction;\n          stagedActionIds = [].concat(stagedActionIds, [actionId]);\n          // Optimization: we know that only the new action needs computing.\n          minInvalidatedStateIndex = stagedActionIds.length - 1;\n          break;\n        }\n      case ActionTypes.RESET:\n        {\n          // Get back to the state the store was created with.\n          actionsById = { 0: liftAction(INIT_ACTION) };\n          nextActionId = 1;\n          stagedActionIds = [0];\n          skippedActionIds = [];\n          committedState = initialCommittedState;\n          currentStateIndex = 0;\n          computedStates = [];\n          break;\n        }\n      case ActionTypes.COMMIT:\n        {\n          // Consider the last committed state the new starting point.\n          // Squash any staged actions into a single committed state.\n          actionsById = { 0: liftAction(INIT_ACTION) };\n          nextActionId = 1;\n          stagedActionIds = [0];\n          skippedActionIds = [];\n          committedState = computedStates[currentStateIndex].state;\n          currentStateIndex = 0;\n          computedStates = [];\n          break;\n        }\n      case ActionTypes.ROLLBACK:\n        {\n          // Forget about any staged actions.\n          // Start again from the last committed state.\n          actionsById = { 0: liftAction(INIT_ACTION) };\n          nextActionId = 1;\n          stagedActionIds = [0];\n          skippedActionIds = [];\n          currentStateIndex = 0;\n          computedStates = [];\n          break;\n        }\n      case ActionTypes.TOGGLE_ACTION:\n        {\n          var _ret = function () {\n            // Toggle whether an action with given ID is skipped.\n            // Being skipped means it is a no-op during the computation.\n            var actionId = liftedAction.id;\n\n            var index = skippedActionIds.indexOf(actionId);\n            if (index === -1) {\n              skippedActionIds = [actionId].concat(skippedActionIds);\n            } else {\n              skippedActionIds = skippedActionIds.filter(function (id) {\n                return id !== actionId;\n              });\n            }\n            // Optimization: we know history before this action hasn't changed\n            minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);\n            return 'break';\n          }();\n\n          if (_ret === 'break') break;\n        }\n      case ActionTypes.SET_ACTIONS_ACTIVE:\n        {\n          // Toggle whether an action with given ID is skipped.\n          // Being skipped means it is a no-op during the computation.\n          var start = liftedAction.start;\n          var end = liftedAction.end;\n          var active = liftedAction.active;\n\n          var actionIds = [];\n          for (var i = start; i < end; i++) {\n            actionIds.push(i);\n          }if (active) {\n            skippedActionIds = (0, _difference2.default)(skippedActionIds, actionIds);\n          } else {\n            skippedActionIds = (0, _union2.default)(skippedActionIds, actionIds);\n          }\n\n          // Optimization: we know history before this action hasn't changed\n          minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n          break;\n        }\n      case ActionTypes.JUMP_TO_STATE:\n        {\n          // Without recomputing anything, move the pointer that tell us\n          // which state is considered the current one. Useful for sliders.\n          currentStateIndex = liftedAction.index;\n          // Optimization: we know the history has not changed.\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n      case ActionTypes.JUMP_TO_ACTION:\n        {\n          // Jumps to a corresponding state to a specific action.\n          // Useful when filtering actions.\n          var _index = stagedActionIds.indexOf(liftedAction.actionId);\n          if (_index !== -1) currentStateIndex = _index;\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n      case ActionTypes.SWEEP:\n        {\n          // Forget any actions that are currently being skipped.\n          stagedActionIds = (0, _difference2.default)(stagedActionIds, skippedActionIds);\n          skippedActionIds = [];\n          currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n          break;\n        }\n      case ActionTypes.REORDER_ACTION:\n        {\n          // Recompute actions in a new order.\n          var _actionId = liftedAction.actionId;\n          var idx = stagedActionIds.indexOf(_actionId);\n          // do nothing in case the action is already removed or trying to move the first action\n          if (idx < 1) break;\n          var beforeActionId = liftedAction.beforeActionId;\n          var newIdx = stagedActionIds.indexOf(beforeActionId);\n          if (newIdx < 1) {\n            // move to the beginning or to the end\n            var count = stagedActionIds.length;\n            newIdx = beforeActionId > stagedActionIds[count - 1] ? count : 1;\n          }\n          var diff = idx - newIdx;\n\n          if (diff > 0) {\n            // move left\n            stagedActionIds = [].concat(stagedActionIds.slice(0, newIdx), [_actionId], stagedActionIds.slice(newIdx, idx), stagedActionIds.slice(idx + 1));\n            minInvalidatedStateIndex = newIdx;\n          } else if (diff < 0) {\n            // move right\n            stagedActionIds = [].concat(stagedActionIds.slice(0, idx), stagedActionIds.slice(idx + 1, newIdx), [_actionId], stagedActionIds.slice(newIdx));\n            minInvalidatedStateIndex = idx;\n          }\n          break;\n        }\n      case ActionTypes.IMPORT_STATE:\n        {\n          if (Array.isArray(liftedAction.nextLiftedState)) {\n            // recompute array of actions\n            actionsById = { 0: liftAction(INIT_ACTION) };\n            nextActionId = 1;\n            stagedActionIds = [0];\n            skippedActionIds = [];\n            currentStateIndex = liftedAction.nextLiftedState.length;\n            computedStates = [];\n            committedState = liftedAction.preloadedState;\n            minInvalidatedStateIndex = 0;\n            // iterate through actions\n            liftedAction.nextLiftedState.forEach(function (action) {\n              actionsById[nextActionId] = liftAction(action);\n              stagedActionIds.push(nextActionId);\n              nextActionId++;\n            });\n          } else {\n            var _liftedAction$nextLif = liftedAction.nextLiftedState;\n            // Completely replace everything.\n\n            monitorState = _liftedAction$nextLif.monitorState;\n            actionsById = _liftedAction$nextLif.actionsById;\n            nextActionId = _liftedAction$nextLif.nextActionId;\n            stagedActionIds = _liftedAction$nextLif.stagedActionIds;\n            skippedActionIds = _liftedAction$nextLif.skippedActionIds;\n            committedState = _liftedAction$nextLif.committedState;\n            currentStateIndex = _liftedAction$nextLif.currentStateIndex;\n            computedStates = _liftedAction$nextLif.computedStates;\n\n\n            if (liftedAction.noRecompute) {\n              minInvalidatedStateIndex = Infinity;\n            }\n          }\n\n          break;\n        }\n      case ActionTypes.LOCK_CHANGES:\n        {\n          isLocked = liftedAction.status;\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n      case ActionTypes.PAUSE_RECORDING:\n        {\n          isPaused = liftedAction.status;\n          if (isPaused) {\n            return computePausedAction(true);\n          }\n          // Commit when unpausing\n          actionsById = { 0: liftAction(INIT_ACTION) };\n          nextActionId = 1;\n          stagedActionIds = [0];\n          skippedActionIds = [];\n          committedState = computedStates[currentStateIndex].state;\n          currentStateIndex = 0;\n          computedStates = [];\n          break;\n        }\n      case '@@redux/INIT':\n        {\n          if (options.shouldHotReload === false) {\n            actionsById = { 0: liftAction(INIT_ACTION) };\n            nextActionId = 1;\n            stagedActionIds = [0];\n            skippedActionIds = [];\n            committedState = computedStates.length === 0 ? initialCommittedState : computedStates[currentStateIndex].state;\n            currentStateIndex = 0;\n            computedStates = [];\n          }\n\n          // Recompute states on hot reload and init.\n          minInvalidatedStateIndex = 0;\n\n          if (options.maxAge && stagedActionIds.length > options.maxAge) {\n            // States must be recomputed before committing excess.\n            computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, options.shouldCatchErrors);\n\n            commitExcessActions(stagedActionIds.length - options.maxAge);\n\n            // Avoid double computation.\n            minInvalidatedStateIndex = Infinity;\n          }\n\n          break;\n        }\n      default:\n        {\n          // If the action is not recognized, it's a monitor action.\n          // Optimization: a monitor action can't change history.\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n    }\n\n    computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, options.shouldCatchErrors);\n    monitorState = monitorReducer(monitorState, liftedAction);\n    return {\n      monitorState: monitorState,\n      actionsById: actionsById,\n      nextActionId: nextActionId,\n      stagedActionIds: stagedActionIds,\n      skippedActionIds: skippedActionIds,\n      committedState: committedState,\n      currentStateIndex: currentStateIndex,\n      computedStates: computedStates,\n      isLocked: isLocked,\n      isPaused: isPaused\n    };\n  };\n}\n\n/**\n * Provides an app's view into the state of the lifted store.\n */\nfunction unliftState(liftedState) {\n  var computedStates = liftedState.computedStates;\n  var currentStateIndex = liftedState.currentStateIndex;\n  var state = computedStates[currentStateIndex].state;\n\n  return state;\n}\n\n/**\n * Provides an app's view into the lifted store.\n */\nfunction unliftStore(liftedStore, liftReducer) {\n  var _extends3;\n\n  var lastDefinedState = void 0;\n\n  function getState() {\n    var state = unliftState(liftedStore.getState());\n    if (state !== undefined) {\n      lastDefinedState = state;\n    }\n    return lastDefinedState;\n  }\n\n  return _extends({}, liftedStore, (_extends3 = {\n\n    liftedStore: liftedStore,\n\n    dispatch: function dispatch(action) {\n      liftedStore.dispatch(liftAction(action));\n      return action;\n    },\n\n\n    getState: getState,\n\n    replaceReducer: function replaceReducer(nextReducer) {\n      liftedStore.replaceReducer(liftReducer(nextReducer));\n    }\n  }, _extends3[_symbolObservable2.default] = function () {\n    return _extends({}, liftedStore[_symbolObservable2.default](), {\n      subscribe: function subscribe(observer) {\n        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = liftedStore.subscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    });\n  }, _extends3));\n}\n\n/**\n * Redux instrumentation store enhancer.\n */\nfunction instrument() {\n  var monitorReducer = arguments.length <= 0 || arguments[0] === undefined ? function () {\n    return null;\n  } : arguments[0];\n  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  /* eslint-disable no-eq-null */\n  if (options.maxAge != null && options.maxAge < 2) {\n    /* eslint-enable */\n    throw new Error('DevTools.instrument({ maxAge }) option, if specified, ' + 'may not be less than 2.');\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n\n      function liftReducer(r) {\n        if (typeof r !== 'function') {\n          if (r && typeof r.default === 'function') {\n            throw new Error('Expected the reducer to be a function. ' + 'Instead got an object with a \"default\" field. ' + 'Did you pass a module instead of the default export? ' + 'Try passing require(...).default instead.');\n          }\n          throw new Error('Expected the reducer to be a function.');\n        }\n        return liftReducerWith(r, initialState, monitorReducer, options);\n      }\n\n      var liftedStore = createStore(liftReducer(reducer), enhancer);\n      if (liftedStore.liftedStore) {\n        throw new Error('DevTools instrumentation should not be applied more than once. ' + 'Check your store configuration.');\n      }\n\n      return unliftStore(liftedStore, liftReducer);\n    };\n  };\n}"]}]