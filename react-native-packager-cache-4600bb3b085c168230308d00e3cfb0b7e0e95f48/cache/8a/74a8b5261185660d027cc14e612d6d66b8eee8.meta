["74b94fadfc15ee10c34111a1dd1758b205821791","009f6d7e2708cb4e9e3bdf81d6af1d3db929bd9d",["react","./NavigationAnimatedValueSubscription","fbjs/lib/invariant"],[36,96,163],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-navigation-experimental-compat/src/NavigationPointerEventsContainer.js"],"names":["React","require","NavigationAnimatedValueSubscription","invariant","MIN_POSITION_OFFSET","create","Component","Container","props","context","_pointerEvents","_computePointerEvents","_onPositionChange","bind","_onComponentRef","_bindPosition","_positionListener","remove","nextProps","component","_component","setNativeProps","position","pointerEvents","navigationState","scene","isStale","index","offset","__getAnimatedValue","Math","abs","module","exports"],"mappings":";AA+BA;;AAEA,IAAMA,QAAQC,OAAR,SAAN;AACA,IAAMC,sCAAsCD,QAAQ,uCAAR,CAA5C;;AAEA,IAAME,YAAYF,OAAZ,sBAAN;;AAQA,IAAMG,sBAAsB,IAA5B;;AAOA,SAASC,MAAT,CACEC,SADF,EAEmB;AAAA,MAEXC,SAFW;AAAA;;AAYf,uBAAYC,KAAZ,EAA0BC,OAA1B,EAAwC;AAAA;;AAAA,oIAChCD,KADgC,EACzBC,OADyB;;AAEtC,YAAKC,cAAL,GAAsB,MAAKC,qBAAL,EAAtB;AAFsC;AAGvC;;AAfc;AAAA;AAAA,2CAiBY;AACzB,aAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,aAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACD;AApBc;AAAA;AAAA,0CAsBW;AACxB,aAAKE,aAAL,CAAmB,KAAKP,KAAxB;AACD;AAxBc;AAAA;AAAA,6CA0Bc;AAC3B,aAAKQ,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBC,MAAvB,EAA1B;AACD;AA5Bc;AAAA;AAAA,gDA8BWC,SA9BX,EA8BmC;AAChD,aAAKH,aAAL,CAAmBG,SAAnB;AACD;AAhCc;AAAA;AAAA,+BAkCe;AAC5B,aAAKR,cAAL,GAAsB,KAAKC,qBAAL,EAAtB;AACA,eACE,oBAAC,SAAD,2BACM,KAAKH,KADX;AAEE,yBAAe,KAAKE,cAFtB;AAGE,0BAAgB,KAAKI;AAHvB,WADF;AAOD;AA3Cc;AAAA;AAAA,sCA6CCK,SA7CD,EA6CuB;AACpC,aAAKC,UAAL,GAAkBD,SAAlB;AACA,YAAIA,SAAJ,EAAe;AACbhB,oBACE,OAAOgB,UAAUE,cAAjB,KAAoC,UADtC,EAEE,kDAFF;AAID;AACF;AArDc;AAAA;AAAA,oCAuDDb,KAvDC,EAuD0C;AACvD,aAAKQ,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBC,MAAvB,EAA1B;AACA,aAAKD,iBAAL,GAAyB,IAAKd,mCAAL,CACvBM,MAAMc,QADiB,EAEvB,KAAKV,iBAFkB,CAAzB;AAID;AA7Dc;AAAA;AAAA,0CA+DW;AACxB,YAAI,KAAKQ,UAAT,EAAqB;AACnB,cAAMG,gBAAgB,KAAKZ,qBAAL,EAAtB;AACA,cAAI,KAAKD,cAAL,KAAwBa,aAA5B,EAA2C;AACzC,iBAAKb,cAAL,GAAsBa,aAAtB;AACA,iBAAKH,UAAL,CAAgBC,cAAhB,CAA+B,EAACE,4BAAD,EAA/B;AACD;AACF;AACF;AAvEc;AAAA;AAAA,8CAyEiB;AAAA,qBAK1B,KAAKf,KALqB;AAAA,YAE5BgB,eAF4B,UAE5BA,eAF4B;AAAA,YAG5BF,QAH4B,UAG5BA,QAH4B;AAAA,YAI5BG,KAJ4B,UAI5BA,KAJ4B;;;AAO9B,YAAIA,MAAMC,OAAN,IAAiBF,gBAAgBG,KAAhB,KAA0BF,MAAME,KAArD,EAA4D;AAE1D,iBAAOF,MAAME,KAAN,GAAcH,gBAAgBG,KAA9B,GACL,UADK,GAEL,MAFF;AAGD;;AAED,YAAMC,SAASN,SAASO,kBAAT,KAAgCL,gBAAgBG,KAA/D;AACA,YAAIG,KAAKC,GAAL,CAASH,MAAT,IAAmBxB,mBAAvB,EAA4C;AAI1C,iBAAO,UAAP;AACD;;AAED,eAAO,MAAP;AACD;AAhGc;AAAA;AAAA,IAEOJ,MAAMM,SAFb;;AAkGjB,SAAQC,SAAR;AACD;;AAEDyB,OAAOC,OAAP,GAAiB;AACf5B;AADe,CAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @flow\n */\n'use strict';\n\nconst React = require('react');\nconst NavigationAnimatedValueSubscription = require('./NavigationAnimatedValueSubscription');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type  {\n  NavigationSceneRendererProps,\n} from './NavigationTypeDefinition';\n\ntype Props = NavigationSceneRendererProps;\n\nconst MIN_POSITION_OFFSET = 0.01;\n\n/**\n * Create a higher-order component that automatically computes the\n * `pointerEvents` property for a component whenever navigation position\n * changes.\n */\nfunction create(\n  Component: ReactClass<any>,\n): ReactClass<any> {\n\n  class Container extends React.Component<any, Props, any> {\n\n    _component: any;\n    _onComponentRef: (view: any) => void;\n    _onPositionChange: (data: {value: number}) => void;\n    _pointerEvents: string;\n    _positionListener: ?NavigationAnimatedValueSubscription;\n\n    props: Props;\n\n    constructor(props: Props, context: any) {\n      super(props, context);\n      this._pointerEvents = this._computePointerEvents();\n    }\n\n    componentWillMount(): void {\n      this._onPositionChange = this._onPositionChange.bind(this);\n      this._onComponentRef = this._onComponentRef.bind(this);\n    }\n\n    componentDidMount(): void {\n      this._bindPosition(this.props);\n    }\n\n    componentWillUnmount(): void {\n      this._positionListener && this._positionListener.remove();\n    }\n\n    componentWillReceiveProps(nextProps: Props): void {\n      this._bindPosition(nextProps);\n    }\n\n    render(): React.Element<any>  {\n      this._pointerEvents = this._computePointerEvents();\n      return (\n        <Component\n          {...this.props}\n          pointerEvents={this._pointerEvents}\n          onComponentRef={this._onComponentRef}\n        />\n      );\n    }\n\n    _onComponentRef(component: any): void {\n      this._component = component;\n      if (component) {\n        invariant(\n          typeof component.setNativeProps === 'function',\n          'component must implement method `setNativeProps`',\n        );\n      }\n    }\n\n    _bindPosition(props: NavigationSceneRendererProps): void {\n      this._positionListener && this._positionListener.remove();\n      this._positionListener = new  NavigationAnimatedValueSubscription(\n        props.position,\n        this._onPositionChange,\n      );\n    }\n\n    _onPositionChange(): void {\n      if (this._component) {\n        const pointerEvents = this._computePointerEvents();\n        if (this._pointerEvents !== pointerEvents) {\n          this._pointerEvents = pointerEvents;\n          this._component.setNativeProps({pointerEvents});\n        }\n      }\n    }\n\n    _computePointerEvents(): string {\n      const {\n        navigationState,\n        position,\n        scene,\n      } = this.props;\n\n      if (scene.isStale || navigationState.index !== scene.index) {\n        // The scene isn't focused.\n        return scene.index > navigationState.index ?\n          'box-only' :\n          'none';\n      }\n\n      const offset = position.__getAnimatedValue() - navigationState.index;\n      if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n        // The positon is still away from scene's index.\n        // Scene's children should not receive touches until the position\n        // is close enough to scene's index.\n        return 'box-only';\n      }\n\n      return 'auto';\n    }\n  }\n  return  Container;\n}\n\nmodule.exports = {\n  create,\n};\n"]}]