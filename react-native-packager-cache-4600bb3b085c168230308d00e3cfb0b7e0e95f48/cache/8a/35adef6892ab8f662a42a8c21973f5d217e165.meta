["3705f9f2c9e4995ae9e95ace2a1d1936248e4a03","b019a9d328809dffff5e2521e05a722b6ac01263",["react","react-native","@shoutem/ui","@shoutem/theme","@shoutem/animation"],[135,232,268,306,351],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/components/Switch.js"],"names":["PropTypes","bool","func","object","shape","Switch","props","timingDriver","onSwitchPressed","bind","setValue","value","nextProps","onValueChange","toValue","style","container","containerWidth","width","thumb","propTypes","AnimatedSwitch","StyledSwitch"],"mappings":";;;;;;;AAAA;;;;AAIA;;AAEA;;AAEA;;AACA;;uBAEsC,gBAAMA,S;IAApCC,I,oBAAAA,I;IAAMC,I,oBAAAA,I;IAAMC,M,oBAAAA,M;IAAQC,K,oBAAAA,K;IAEtBC,M;;;AAeJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4HACXA,KADW;;AAGjB,UAAKC,YAAL,GAAoB,6BAApB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;;AAEA,UAAKC,QAAL,CAAcJ,MAAMK,KAApB;AANiB;AAOlB;;;;8CAEyBC,S,EAAW;AACnC,UAAGA,UAAUD,KAAV,KAAoB,KAAKL,KAAL,CAAWK,KAAlC,EAAyC;AACvC;AACD;;AAED,WAAKD,QAAL,CAAcE,UAAUD,KAAxB;AACD;;;sCAEiB;AAAA,mBACiB,KAAKL,KADtB;AAAA,UACRK,KADQ,UACRA,KADQ;AAAA,UACDE,aADC,UACDA,aADC;;;AAGhBA,oBAAc,CAACF,KAAf;AACD;;;6BAEQA,K,EAAO;AACd,WAAKJ,YAAL,CAAkBO,OAAlB,CAA0BH,QAAQ,CAAR,GAAY,CAAtC;AACD;;;6BAEQ;AAAA,UACCI,KADD,GACW,KAAKT,KADhB,CACCS,KADD;;;AAGP,aACE;AAAA;AAAA;AACE,mBAAS,KAAKP,eADhB;AAEE,qBAAU;AAFZ;AAIE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,6BAAc,MADhB;AAEE,sBAAQ,KAAKD,YAFf;AAGE,qBAAOQ,MAAMC;AAHf;AAKE;AACE,6BAAc,MADhB;AAEE,gCAAkB,EAAEC,gBAAgBF,MAAMC,SAAN,CAAgBE,KAAlC,EAFpB;AAGE,sBAAQ,KAAKX,YAHf;AAIE,qBAAOQ,MAAMI;AAJf;AALF;AADF;AAJF,OADF;AAqBD;;;4BAjEMC,S,GAAY;AAEjBT,SAAOV,IAFU;;AAIjBY,iBAAeX,IAJE;;AAMjBa,SAAOX,MAAM;AAEXY,eAAWb,MAFA;;AAIXgB,WAAOhB;AAJI,GAAN;AANU,C;;;AAoErB,IAAMkB,iBAAiB,iCAAiBhB,MAAjB,CAAvB;AACA,IAAMiB,eAAe,yBAAa,mBAAb,EAAkCD,cAAlC,CAArB;;QAGkBhB,M,GAAhBiB,Y","sourcesContent":["import React, {\n  Component,\n} from 'react';\n\nimport { TouchableWithoutFeedback } from 'react-native';\n\nimport { View } from '@shoutem/ui';\n\nimport { connectStyle } from '@shoutem/theme';\nimport { connectAnimation, TimingDriver } from '@shoutem/animation';\n\nconst { bool, func, object, shape } = React.PropTypes;\n\nclass Switch extends Component {\n  static propTypes = {\n    // True when switch is on, false otherwise\n    value: bool,\n    // Called when switch is toggled on and off\n    onValueChange: func,\n    // Styles for the container and underlying thumb\n    style: shape({\n      // Container style\n      container: object,\n      // Thumb style\n      thumb: object,\n    }),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.timingDriver = new TimingDriver();\n    this.onSwitchPressed = this.onSwitchPressed.bind(this);\n\n    this.setValue(props.value);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.value === this.props.value) {\n      return;\n    }\n\n    this.setValue(nextProps.value);\n  }\n\n  onSwitchPressed() {\n    const { value, onValueChange } = this.props;\n\n    onValueChange(!value);\n  }\n\n  setValue(value) {\n    this.timingDriver.toValue(value ? 1 : 0);\n  }\n\n  render() {\n    const { style } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={this.onSwitchPressed}\n        styleName=\"clear\"\n      >\n        <View>\n          <View\n            animationName=\"mute\"\n            driver={this.timingDriver}\n            style={style.container}\n          >\n            <View\n              animationName=\"turn\"\n              animationOptions={{ containerWidth: style.container.width }}\n              driver={this.timingDriver}\n              style={style.thumb}\n            />\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst AnimatedSwitch = connectAnimation(Switch);\nconst StyledSwitch = connectStyle('shoutem.ui.Switch')(AnimatedSwitch);\n\nexport {\n  StyledSwitch as Switch,\n};\n"]}]