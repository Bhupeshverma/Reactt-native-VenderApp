["e393b341202ca7e0746387973ff50f666dccc642","6d5a41ed345acc48ece070d517882e44fa1a43e6",["react","react-native","@shoutem/theme","lodash","@shoutem/animation","./ScrollDriverProvider.js"],[139,236,275,317,415,475],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/components/ScrollView/ScrollView.js"],"names":["ScrollView","props","context","animationDriver","driver","useNativeDriver","setWrappedInstance","bind","driverProvider","primary","setAnimationDriver","newProps","newContext","component","wrappedInstance","style","contentContainerStyle","scrollViewProps","propTypes","contextTypes","PropTypes","object","childContextTypes","DriverProvider","StyledScrollView","getRNScrollViewComponent","get","prototype","scrollTo","coordinates","scrollView","scrollToEnd","animation"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA;;AAEA;;IAEMA,U;;;AAgBJ,sBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,oIACpBD,KADoB,EACbC,OADa;;AAE1B,UAAKC,eAAL,GAAuBF,MAAMG,MAAN,IAAgB,4BAAiB,EAAEC,iBAAiB,IAAnB,EAAjB,CAAvC;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,OAA1B;AAH0B;AAI3B;;;;sCAEiB;AAChB,aAAO;AACLJ,yBAAiB,KAAKA;AADjB,OAAP;AAGD;;;yCAEoB;AAAA,UACXK,cADW,GACQ,KAAKN,OADb,CACXM,cADW;AAAA,UAEXC,OAFW,GAEC,KAAKR,KAFN,CAEXQ,OAFW;;AAGnB,UAAID,cAAJ,EAAoB;AAClBA,uBAAeE,kBAAf,CAAkC,KAAKP,eAAvC,EAAwDM,OAAxD;AACD;AACF;;;8CAEyBE,Q,EAAUC,U,EAAY;AAC9C,UAAID,SAASP,MAAT,IAAmB,KAAKD,eAAL,KAAyBQ,SAASP,MAAzD,EAAiE;AAC/D,aAAKD,eAAL,GAAuBQ,SAASP,MAAhC;AACD,OAFD,MAEO,IAAIQ,WAAWT,eAAX,IAA8B,KAAKA,eAAL,KAAyBS,WAAWT,eAAtE,EAAuF;AAC5F,aAAKA,eAAL,GAAuBS,WAAWT,eAAlC;AACD;AACF;;;uCAEkBU,S,EAAW;AAC5B,WAAKC,eAAL,GAAuBD,SAAvB;AACD;;;6BAEQ;AAAA,UACCZ,KADD,GAC4B,IAD5B,CACCA,KADD;AAAA,UACQE,eADR,GAC4B,IAD5B,CACQA,eADR;AAAA,yBAEgBF,KAFhB,CAECc,KAFD;AAAA,UAECA,KAFD,gCAES,EAFT;;AAGP,UAAMC,iDACDD,MAAMC,qBADL,CAAN;AAGA,aAAOD,MAAMC,qBAAb;;AAEA,aACE,oDAAU,UAAV;AACE,aAAK,KAAKV,kBADZ;AAEE,+BAAuBU;AAFzB,SAGMb,gBAAgBc,eAHtB,EAIMhB,KAJN,EADF;AAQD;;;4BA/DMiB,S,4BACF,sBAASlB,UAAT,CAAoBkB,S,UAGlBC,Y,GAAe;AACpBhB,yCADoB;AAEpBK,kBAAgB,gBAAMY,SAAN,CAAgBC;AAFZ,C,SAKfC,iB,GAAoB;AACzBnB;AADyB,C,SAIpBoB,c;;;AAqDT,IAAMC,mBAAmB,yBAAa,uBAAb,EAAsCxB,UAAtC,CAAzB;;AAEA,SAASyB,wBAAT,CAAkCvB,OAAlC,EAA2C;AAMzC,SAAO,iBAAEwB,GAAF,CAAMxB,OAAN,EAAe,4CAAf,CAAP;AACD;;AAEDsB,iBAAiBG,SAAjB,CAA2BC,QAA3B,GAAsC,SAASA,QAAT,CAAkBC,WAAlB,EAA+B;AACnE,MAAMC,aAAaL,yBAAyB,IAAzB,CAAnB;AACA,MAAIK,UAAJ,EAAgB;AACdA,eAAWF,QAAX,CAAoBC,WAApB;AACD;AACF,CALD;;AAOAL,iBAAiBG,SAAjB,CAA2BI,WAA3B,GAAyC,SAASA,WAAT,CAAqBC,SAArB,EAAgC;AACvE,MAAMF,aAAaL,yBAAyB,IAAzB,CAAnB;AACA,MAAIK,UAAJ,EAAgB;AACdA,eAAWC,WAAX,CAAuBC,SAAvB;AACD;AACF,CALD;;QAQsBhC,U,GAApBwB,gB","sourcesContent":["import React, { Component } from 'react';\nimport { Animated } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport _ from 'lodash';\n\nimport { ScrollDriver, DriverShape } from '@shoutem/animation';\n\nimport { ScrollDriverProvider } from './ScrollDriverProvider.js';\n\nclass ScrollView extends Component {\n  static propTypes = {\n    ...Animated.ScrollView.propTypes,\n  };\n\n  static contextTypes = {\n    animationDriver: DriverShape,\n    driverProvider: React.PropTypes.object,\n  };\n\n  static childContextTypes = {\n    animationDriver: DriverShape,\n  };\n\n  static DriverProvider = ScrollDriverProvider;\n\n  constructor(props, context) {\n    super(props, context);\n    this.animationDriver = props.driver || new ScrollDriver({ useNativeDriver: true });\n    this.setWrappedInstance = this.setWrappedInstance.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      animationDriver: this.animationDriver,\n    };\n  }\n\n  componentWillMount() {\n    const { driverProvider } = this.context;\n    const { primary } = this.props;\n    if (driverProvider) {\n      driverProvider.setAnimationDriver(this.animationDriver, primary);\n    }\n  }\n\n  componentWillReceiveProps(newProps, newContext) {\n    if (newProps.driver && this.animationDriver !== newProps.driver) {\n      this.animationDriver = newProps.driver;\n    } else if (newContext.animationDriver && this.animationDriver !== newContext.animationDriver) {\n      this.animationDriver = newContext.animationDriver;\n    }\n  }\n\n  setWrappedInstance(component) {\n    this.wrappedInstance = component;\n  }\n\n  render() {\n    const { props, animationDriver } = this;\n    const { style = {} } = props;\n    const contentContainerStyle = {\n      ...style.contentContainerStyle,\n    };\n    delete style.contentContainerStyle;\n\n    return (\n      <Animated.ScrollView\n        ref={this.setWrappedInstance}\n        contentContainerStyle={contentContainerStyle}\n        {...animationDriver.scrollViewProps}\n        {...props}\n      />\n    );\n  }\n}\n\nconst StyledScrollView = connectStyle('shoutem.ui.ScrollView')(ScrollView);\n\nfunction getRNScrollViewComponent(context) {\n  // wrappedInstance.wrappedInstance._component:\n  //   1st wrappedInstance -> StyledScrollView\n  //   2nd wrappedInstance -> ScrollView (Shoutem UI)\n  //   _component -> Animated.ScrollView\n  // more info about _component: https://stackoverflow.com/questions/42051368/scrollto-is-undefined-on-animated-scrollview\n  return _.get(context, 'wrappedInstance.wrappedInstance._component');\n}\n\nStyledScrollView.prototype.scrollTo = function scrollTo(coordinates) {\n  const scrollView = getRNScrollViewComponent(this);\n  if (scrollView) {\n    scrollView.scrollTo(coordinates);\n  }\n};\n\nStyledScrollView.prototype.scrollToEnd = function scrollToEnd(animation) {\n  const scrollView = getRNScrollViewComponent(this);\n  if (scrollView) {\n    scrollView.scrollToEnd(animation);\n  }\n};\n\nexport {\n  StyledScrollView as ScrollView,\n};\n"]}]