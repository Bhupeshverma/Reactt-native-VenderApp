Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logIn = logIn;

var _axios = require('axios');

var _axios2 = babelHelpers.interopRequireDefault(_axios);

var _reactNative = require('react-native');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _types = require('./types');

function unAuthorized() {
  return {
    type: _types.UNAUTHORIZED
  };
}

function isLoggingIn() {
  return {
    type: _types.IS_LOGGING_IN
  };
}

function loggedIn(data) {
  return {
    type: _types.IS_LOGGED_IN,
    payload: data
  };
}

function recievedError() {
  return {
    type: _types.RECIEVED_ERROR
  };
}
function changeLogOutStatus() {
  return {
    type: _types.CHANGE_LOG_OUT_STATUS
  };
}

function logIn(email, password) {

  console.log(JSON.stringify({ user_name: '' + email, password: '' + password }, undefined, 2));
  var data = JSON.stringify({ "user_name": '' + email, "password": '' + password }, undefined, 2);

  return function (dispatch) {

    dispatch(isLoggingIn());

    return _axios2.default.post('http://crm-dev.streetstylestore.com/webservice/login.php', data).then(function (response) {
      dispatch(loggedIn(response));
      dispatch(changeLogOutStatus());
    }).catch(function (error) {
      if (error.response) {
        if (error.response.status === 401) {
          dispatch(unAuthorized());
        }
      } else if (error.request) {
        dispatch(recievedError());
      } else {
        dispatch(recievedError());
      }
    });
  };
}