Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _class, _temp;

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _InlineGallery = require('../../components/InlineGallery');

var Gallery = (_temp = _class = function (_Component) {
  babelHelpers.inherits(Gallery, _Component);

  function Gallery(props) {
    babelHelpers.classCallCheck(this, Gallery);

    var _this = babelHelpers.possibleConstructorReturn(this, (Gallery.__proto__ || Object.getPrototypeOf(Gallery)).call(this, props));

    _this.state = {
      selectedIndex: 0
    };

    _this.onIndexSelected = _this.onIndexSelected.bind(_this);
    _this.handlePhotoPress = _this.handlePhotoPress.bind(_this);
    return _this;
  }

  babelHelpers.createClass(Gallery, [{
    key: 'onIndexSelected',
    value: function onIndexSelected(selectedIndex) {
      this.setState({ selectedIndex: selectedIndex });
    }
  }, {
    key: 'handlePhotoPress',
    value: function handlePhotoPress() {
      var _props = this.props,
          data = _props.data,
          handlePhotoPress = _props.handlePhotoPress;
      var selectedIndex = this.state.selectedIndex;


      if (!handlePhotoPress) {
        console.log('There is no "handlePhotoPress" handler for RichMediaGallery photo.');
        return;
      }

      handlePhotoPress(data, selectedIndex);
    }
  }, {
    key: 'render',
    value: function render() {
      var selectedIndex = this.state.selectedIndex;


      return _react2.default.createElement(_InlineGallery.InlineGallery, babelHelpers.extends({
        onPress: this.handlePhotoPress,
        onIndexSelected: this.onIndexSelected,
        selectedIndex: selectedIndex
      }, this.props));
    }
  }]);
  return Gallery;
}(_react.Component), _class.propTypes = babelHelpers.extends({}, _InlineGallery.InlineGallery.propTypes, {
  handlePhotoPress: _react2.default.PropTypes.func
}), _temp);
exports.default = Gallery;