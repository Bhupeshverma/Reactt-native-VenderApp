["8e938550308d23288c924e91da07291671c7cec8","8bd25d4ebd01dc815465f21143084d8b984842e3",["react","react-native","@shoutem/theme","../index"],[138,235,274,315],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/components/Touchable.js"],"names":["Touchable","props","style","touchableOpacity","touchableNativeFeedback","OS","styleName","children","Component","propTypes","object","StyledTouchable"],"mappings":";;;;;;;AAAA;;;;AACA;;AAEA;;AAEA;;IAaMA,S;;;;;;;;;;6BAOK;AACP,UAAMC,QAAQ,KAAKA,KAAnB;AACA,UAAMC,iCAAaD,MAAMC,KAAnB,CAAN;AACA,aAAOA,MAAMC,gBAAb;AACA,aAAOD,MAAME,uBAAb;;AAEA,UAAI,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,eACE;AAAA;AAAA,mCACMJ,KADN;AAEE,mBAAOA,MAAMC,KAAN,CAAYE;AAFrB;AAIE;AAAA;AAAA;AACE,2BADF;AAEE,qBAAOF,KAFT;AAGE,yBAAWD,MAAMK;AAHnB;AAKGL,kBAAMM;AALT;AAJF,SADF;AAcD;;AAED,aACE;AAAA;AAAA,iCACMN,KADN;AAEE,0CACKC,KADL,EAEKD,MAAMC,KAAN,CAAYC,gBAFjB;AAFF;AAOGF,cAAMM;AAPT,OADF;AAWD;;;EAzCqB,gBAAMC,S,UACrBC,S,4BACF,wBAAiBA,S,EACjB,+BAAwBA,S;AAC3BP,SAAO,iBAAUQ;;;;AAwCrB,IAAMC,kBAAkB,yBAAa,sBAAb,EAAqC;AAC3DP,2BAAyB,EADkC;AAE3DD,oBAAkB;AAFyC,CAArC,EAGrBH,SAHqB,CAAxB;;QAMqBA,S,GAAnBW,e","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Platform } from 'react-native';\n\nimport { connectStyle } from '@shoutem/theme';\n\nimport {\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  View,\n} from '../index';\n\n/**\n * A universal touchable component with a\n * platform specific feedback. This\n * component displays a TouchableOpacity on\n * iOS, and a TouchableNativeFeedback on\n * Android.\n */\nclass Touchable extends React.Component {\n  static propTypes = {\n    ...TouchableOpacity.propTypes,\n    ...TouchableNativeFeedback.propTypes,\n    style: PropTypes.object,\n  };\n\n  render() {\n    const props = this.props;\n    const style = { ...props.style };\n    delete style.touchableOpacity;\n    delete style.touchableNativeFeedback;\n\n    if (Platform.OS === 'android') {\n      return (\n        <TouchableNativeFeedback\n          {...props}\n          style={props.style.touchableNativeFeedback}\n        >\n          <View\n            virtual\n            style={style}\n            styleName={props.styleName}\n          >\n            {props.children}\n          </View>\n        </TouchableNativeFeedback>\n      );\n    }\n\n    return (\n      <TouchableOpacity\n        {...props}\n        style={{\n          ...style,\n          ...props.style.touchableOpacity,\n        }}\n      >\n        {props.children}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst StyledTouchable = connectStyle('shoutem.ui.Touchable', {\n  touchableNativeFeedback: {},\n  touchableOpacity: {},\n})(Touchable);\n\nexport {\n  StyledTouchable as Touchable,\n};\n"]}]