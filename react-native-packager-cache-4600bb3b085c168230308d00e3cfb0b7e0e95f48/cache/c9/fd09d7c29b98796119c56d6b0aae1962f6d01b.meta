["bc2a4e29bc2c22b2f5dd6e0e34ea40fa67026bc6","45ca11c8e0303d9dd225074c783707f0705b15b6",["prop-types","react","react-native","../config/fonts","../helpers/normalizeText"],[91,195,292,331,440],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/text/Text.js"],"names":["styles","create","text","select","android","regular","bold","TextElement","style","props","children","h1","h2","h3","h4","fontFamily","rest","fontSize","propTypes","any","bool","string"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA,IAAMA,SAAS,wBAAWC,MAAX,CAAkB;AAC/BC,iCACK,sBAASC,MAAT,CAAgB;AACjBC,sCACK,gBAAMA,OAAN,CAAcC,OADnB;AADiB,GAAhB,CADL,CAD+B;AAQ/BC,iCACK,sBAASH,MAAT,CAAgB;AACjBC,sCACK,gBAAMA,OAAN,CAAcE,IADnB;AADiB,GAAhB,CADL;AAR+B,CAAlB,CAAf;;AAiBA,IAAMC,cAAc,SAAdA,WAAc,QAAS;AAAA,MACnBC,KADmB,GACsCC,KADtC,CACnBD,KADmB;AAAA,MACZE,QADY,GACsCD,KADtC,CACZC,QADY;AAAA,MACFC,EADE,GACsCF,KADtC,CACFE,EADE;AAAA,MACEC,EADF,GACsCH,KADtC,CACEG,EADF;AAAA,MACMC,EADN,GACsCJ,KADtC,CACMI,EADN;AAAA,MACUC,EADV,GACsCL,KADtC,CACUK,EADV;AAAA,MACcC,UADd,GACsCN,KADtC,CACcM,UADd;AAAA,MAC6BC,IAD7B,wCACsCP,KADtC;;;AAG3B,SACE;AAAA;AAAA;AACE,aAAO,CACLT,OAAOE,IADF,EAELS,MAAM,EAAEM,UAAU,6BAAU,EAAV,CAAZ,EAFD,EAGLL,MAAM,EAAEK,UAAU,6BAAU,EAAV,CAAZ,EAHD,EAILJ,MAAM,EAAEI,UAAU,6BAAU,EAAV,CAAZ,EAJD,EAKLH,MAAM,EAAEG,UAAU,6BAAU,EAAV,CAAZ,EALD,EAMLN,MAAMX,OAAOM,IANR,EAOLM,MAAMZ,OAAOM,IAPR,EAQLO,MAAMb,OAAOM,IARR,EASLQ,MAAMd,OAAOM,IATR,EAULS,cAAc,EAAEA,sBAAF,EAVT,EAWLP,SAASA,KAXJ;AADT,OAcMQ,IAdN;AAgBGN;AAhBH,GADF;AAoBD,CAvBD;;AAyBAH,YAAYW,SAAZ,GAAwB;AACtBV,SAAO,oBAAUW,GADK;AAEtBR,MAAI,oBAAUS,IAFQ;AAGtBR,MAAI,oBAAUQ,IAHQ;AAItBP,MAAI,oBAAUO,IAJQ;AAKtBN,MAAI,oBAAUM,IALQ;AAMtBL,cAAY,oBAAUM,MANA;AAOtBX,YAAU,oBAAUS;AAPE,CAAxB;;kBAUeZ,W","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text, StyleSheet, Platform } from 'react-native';\nimport fonts from '../config/fonts';\nimport normalize from '../helpers/normalizeText';\n\nconst styles = StyleSheet.create({\n  text: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.regular,\n      },\n    }),\n  },\n  bold: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n});\n\nconst TextElement = props => {\n  const { style, children, h1, h2, h3, h4, fontFamily, ...rest } = props;\n\n  return (\n    <Text\n      style={[\n        styles.text,\n        h1 && { fontSize: normalize(40) },\n        h2 && { fontSize: normalize(34) },\n        h3 && { fontSize: normalize(28) },\n        h4 && { fontSize: normalize(22) },\n        h1 && styles.bold,\n        h2 && styles.bold,\n        h3 && styles.bold,\n        h4 && styles.bold,\n        fontFamily && { fontFamily },\n        style && style,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Text>\n  );\n};\n\nTextElement.propTypes = {\n  style: PropTypes.any,\n  h1: PropTypes.bool,\n  h2: PropTypes.bool,\n  h3: PropTypes.bool,\n  h4: PropTypes.bool,\n  fontFamily: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default TextElement;\n"]}]