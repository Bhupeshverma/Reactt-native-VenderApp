Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Logout = Logout;

var _types = require('./types');

var _axios = require('axios');

var _axios2 = babelHelpers.interopRequireDefault(_axios);

function isLoggingOut() {
    return {
        type: _types.IS_LOGGING_OUT
    };
}

function loggedOut() {
    return {
        type: _types.LOGGED_OUT
    };
}

function recievedLoggingOutError() {
    return {
        type: _types.LOGGING_OUT_ERROR
    };
}

function changeproductstatus() {
    return {
        type: _types.CHANGE_PRODUCT_STATUS
    };
}

function changefetchdatastatus() {
    return {
        type: _types.CHANGE_FETCHDATA_STATUS
    };
}

function changesavedstatus() {
    return {
        type: _types.CHANGE_SAVED_DATA_STATUS
    };
}

function Logout() {

    return function (dispatch, getState) {

        dispatch(isLoggingOut());
        var sessionID = getState().auth.sessionID;

        console.log(sessionID);

        var data = JSON.stringify({ "session": '' + sessionID }, undefined, 2);
        console.log(data);

        return _axios2.default.post('http://crm.streetstylestore.com/webservice/logout.php', data).then(function (response) {
            console.log(response.status);
            if (response.status === 200) {
                dispatch(loggedOut(response));
                dispatch(changefetchdatastatus());
                dispatch(changeproductstatus());
                dispatch(changesavedstatus());
            }
        }).catch(function (error) {
            if (error.response) {
                if (error.response.status === 401) {
                    dispatch(recievedLoggingOutError());
                }
            } else if (error.request) {
                dispatch(recievedLoggingOutError());
            } else {
                dispatch(recievedLoggingOutError());
            }
        });
    };
}