Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpringDriver = undefined;

var _reactNative = require('react-native');

var _DriverBase2 = require('./DriverBase');

var SpringDriver = exports.SpringDriver = function (_DriverBase) {
  babelHelpers.inherits(SpringDriver, _DriverBase);

  function SpringDriver(options) {
    babelHelpers.classCallCheck(this, SpringDriver);

    var _this = babelHelpers.possibleConstructorReturn(this, (SpringDriver.__proto__ || Object.getPrototypeOf(SpringDriver)).call(this));

    _this.animationOptions = babelHelpers.extends({
      friction: 7,
      tension: 40
    }, options);

    _this.toValue = _this.toValue.bind(_this);
    return _this;
  }

  babelHelpers.createClass(SpringDriver, [{
    key: 'toValue',
    value: function toValue(endValue, onFinish) {
      _reactNative.Animated.spring(this.value, babelHelpers.extends({
        toValue: endValue
      }, this.animationOptions)).start(onFinish);
    }
  }]);
  return SpringDriver;
}(_DriverBase2.DriverBase);