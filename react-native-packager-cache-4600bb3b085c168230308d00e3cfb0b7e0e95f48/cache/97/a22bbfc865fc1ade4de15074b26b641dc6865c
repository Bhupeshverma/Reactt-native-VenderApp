var _react=require("react");var _react2=babelHelpers.interopRequireDefault(_react);
var _reactNative=require("react-native");










var _Overlay=require("./components/Overlay");var _Overlay2=babelHelpers.interopRequireDefault(_Overlay);
var _Sheet=require("./components/Sheet");var _Sheet2=babelHelpers.interopRequireDefault(_Sheet);
var _Button=require("./components/Button");var _Button2=babelHelpers.interopRequireDefault(_Button);

var styles=_reactNative.StyleSheet.create({
actionSheetContainer:{
flex:1,
paddingTop:10,
paddingBottom:0,
justifyContent:"flex-end",
backgroundColor:'rgba(0, 0, 0, 0.5)'},

buttonContainer:{
overflow:'hidden',
backgroundColor:'white',
paddingBottom:5,
paddingTop:5}});var



RNShare=function(){function RNShare(){babelHelpers.classCallCheck(this,RNShare);}babelHelpers.createClass(RNShare,null,[{key:"open",value:function open(
options){
return new Promise(function(resolve,reject){
if(_reactNative.Platform.OS==="ios"){
_reactNative.ActionSheetIOS.showShareActionSheetWithOptions(options,function(error){
return reject({error:error});
},function(success,activityType){
if(success){
return resolve({
app:activityType});

}else{
reject({error:"User did not share"});
}
});
}else{
_reactNative.NativeModules.RNShare.open(options,function(e){
return reject({error:e});
},function(e){
resolve({
message:e});

});
}
});
}},{key:"shareSingle",value:function shareSingle(
options){
if(_reactNative.Platform.OS==="ios"||_reactNative.Platform.OS==="android"){
return new Promise(function(resolve,reject){
_reactNative.NativeModules.RNShare.shareSingle(options,function(e){
return reject({error:e});
},function(e){
return resolve({
message:e});

});
});
}else{
throw new Exception("not implemented");
}
}}]);return RNShare;}();var

ShareSheet=function(_React$Component){babelHelpers.inherits(ShareSheet,_React$Component);function ShareSheet(){babelHelpers.classCallCheck(this,ShareSheet);return babelHelpers.possibleConstructorReturn(this,(ShareSheet.__proto__||Object.getPrototypeOf(ShareSheet)).apply(this,arguments));}babelHelpers.createClass(ShareSheet,[{key:"componentDidMount",value:function componentDidMount()
{var _this2=this;
_reactNative.BackHandler.addEventListener('hardwareBackPress',function(){
if(_this2.props.visible){
_this2.props.onCancel();
return true;
}
return false;
});
}},{key:"render",value:function render()
{
return(
_react2.default.createElement(_Overlay2.default,babelHelpers.extends({visible:this.props.visible},this.props),
_react2.default.createElement(_reactNative.View,{style:styles.actionSheetContainer},
_react2.default.createElement(_reactNative.TouchableOpacity,{
style:{flex:1},
onPress:this.props.onCancel}),

_react2.default.createElement(_Sheet2.default,{visible:this.props.visible},
_react2.default.createElement(_reactNative.View,{style:styles.buttonContainer},
this.props.children)))));





}}]);return ShareSheet;}(_react2.default.Component);



module.exports=RNShare;
module.exports.Overlay=_Overlay2.default;
module.exports.Sheet=_Sheet2.default;
module.exports.Button=_Button2.default;
module.exports.ShareSheet=ShareSheet;