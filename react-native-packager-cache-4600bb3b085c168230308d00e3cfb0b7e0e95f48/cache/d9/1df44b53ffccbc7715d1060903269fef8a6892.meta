["5e6476e7821cca40c37444341c1faed7fca59e47","033bddce68d6811f6b121780b94f34dc77e1b1fc",["react","react-native","./Font","./Notifications"],[128,225,263,304],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/expo/src/registerRootComponent.js"],"names":["registerRootComponent","wrapWithExpoRoot","AppRootComponent","setStyleAttributePreprocessor","props","exp","notification","_setInitialNotification","Component","component","registerComponent"],"mappings":";;;kBAqCwBA,qB;;AAnCxB;;;;AACA;;AAEA;;AACA;;;;AAaA,SAASC,gBAAT,CACEC,gBADF,EAEoB;AAClB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2CACuB;AACnB,gCAAWC,6BAAX,CAAyC,YAAzC;;AAEA,YAAI,KAAKC,KAAL,CAAWC,GAAX,CAAeC,YAAnB,EAAiC;AAC/B,kCAAcC,uBAAd,CAAsC,KAAKH,KAAL,CAAWC,GAAX,CAAeC,YAArD;AACD;AACF;AAPH;AAAA;AAAA,+BASW;AACP,eAAO,8BAAC,gBAAD,EAAsB,KAAKF,KAA3B,CAAP;AACD;AAXH;AAAA;AAAA,IAAuC,gBAAMI,SAA7C;AAaD;;AAEc,SAASR,qBAAT,CACbS,SADa,EAEP;AACN,2BAAYC,iBAAZ,CAA8B,MAA9B,EAAsC;AAAA,WAAMT,iBAAiBQ,SAAjB,CAAN;AAAA,GAAtC;AACD","sourcesContent":["// @flow\n\nimport React, { type ComponentType } from 'react';\nimport { AppRegistry, StyleSheet } from 'react-native';\n\nimport { processFontFamily } from './Font';\nimport Notifications from './Notifications';\n\ntype InitialProps = {\n  exp: {\n    notification?: Object,\n    errorRecovery?: Object,\n    [string]: any,\n  },\n  shell?: boolean,\n  shellManifestUrl?: string,\n  [string]: any,\n};\n\nfunction wrapWithExpoRoot<P: InitialProps>(\n  AppRootComponent: ComponentType<P>\n): ComponentType<P> {\n  return class ExpoRootComponent extends React.Component<P> {\n    componentWillMount() {\n      StyleSheet.setStyleAttributePreprocessor('fontFamily', processFontFamily);\n\n      if (this.props.exp.notification) {\n        Notifications._setInitialNotification(this.props.exp.notification);\n      }\n    }\n\n    render() {\n      return <AppRootComponent {...this.props} />;\n    }\n  };\n}\n\nexport default function registerRootComponent(\n  component: ComponentType<*>\n): void {\n  AppRegistry.registerComponent('main', () => wrapWithExpoRoot(component));\n}\n"]}]