["f47fe01df1004342ecf03e9259c3027308c0fb97","f292535cfc8b4469a25ce95256b3d8132193b7db",["react","react-native"],[119,216],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/animation/src/components/ZoomableComponent.js"],"names":["makeZoomable","getDistanceBetweenTwoPoints","x1","x","y1","y","x2","y2","dx","Math","abs","dy","sqrt","pow","middle1D","p1","p2","middle2D","maxOffset","offset","windowDimension","imageDimension","max","getOffsetByZoom","width","height","zoom","componentWidth","componentHeight","xDiff","yDiff","left","top","ComponentToBeDecorated","ZoomDecorator","props","_onLayout","bind","state","minZoom","layoutKnown","isZooming","isMoving","initialDistance","initialX","initialY","offsetTop","offsetLeft","initialTop","initialLeft","initialTopWithoutZoom","initialLeftWithoutZoom","initialZoom","_panResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","evt","gesture","touches","nativeEvent","touch1","touch2","length","processPinch","onZoom","isMoveSmall","processTouch","pageX","pageY","onPanResponderTerminationRequest","onPanResponderRelease","onPress","setState","onPanResponderTerminate","onShouldBlockNativeResponder","point1","point2","distance","center","offsetByZoom","touchZoom","easeInEaseOut","zoomedWidth","zoomedHeight","event","layout","style","otherProps","panHandlers","position","propTypes","number","isRequired","object","func"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n  PropTypes,\n} from 'react';\n\nimport {\n  View,\n  PanResponder,\n  LayoutAnimation,\n} from 'react-native';\n\nfunction getDistanceBetweenTwoPoints({ x: x1, y: y1 }, { x: x2, y: y2 }) {\n  const dx = Math.abs(x1 - x2);\n  const dy = Math.abs(y1 - y2);\n\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n}\n\nfunction middle1D(p1, p2) {\n  return p1 > p2 ? p1 - (p1 - p2) / 2 : p2 - (p2 - p1) / 2;\n}\n\nfunction middle2D({ x: x1, y: y1 }, { x: x2, y: y2 }) {\n  return {\n    x: middle1D(x1, x2),\n    y: middle1D(y1, y2),\n  };\n}\n\nfunction maxOffset(offset, windowDimension, imageDimension) {\n  const max = windowDimension - imageDimension;\n  if (max >= 0) {\n    return 0;\n  }\n\n  return offset < max ? max : offset;\n}\n\nfunction getOffsetByZoom({ width, height, zoom }, { componentWidth, componentHeight }) {\n  const xDiff = componentWidth * zoom - width;\n  const yDiff = componentHeight * zoom - height;\n\n  return {\n    left: -xDiff / 2,\n    top: -yDiff / 2,\n  };\n}\n\n/**\n * makeZoomable\n *\n * makes the provided component zoomable.\n *\n * @param ComponentToBeDecorated\n * @returns zoomable component\n */\nexport default function makeZoomable(ComponentToBeDecorated) {\n  /**\n   * ZoomDecorator renders the ComponentToBeDecorated within a view with PanResponder.\n   * It creates the zoom and move effect by detecting pinch and move gestures performed\n   * within the view and updates the style of the decorated component with new values\n   * for width, height and absolute position.\n   */\n  class ZoomDecorator extends Component {\n    static propTypes = {\n      componentWidth: PropTypes.number.isRequired,\n      componentHeight: PropTypes.number.isRequired,\n      style: PropTypes.object,\n      onPress: PropTypes.func,\n      onZoom: PropTypes.func,\n    }\n\n    constructor(props) {\n      super(props);\n      this._onLayout = this._onLayout.bind(this);\n      this.state = {\n        zoom: null,\n        minZoom: null,\n        layoutKnown: false, // has the layout been calculated\n        isZooming: false, // is the component being zoomed at the moment\n        isMoving: false, // is the component being moved at the moment\n        initialDistance: null,\n        initialX: null,\n        initialY: null,\n        offsetTop: 0,\n        offsetLeft: 0,\n        initialTop: 0,\n        initialLeft: 0,\n        initialTopWithoutZoom: 0,\n        initialLeftWithoutZoom: 0,\n        initialZoom: 1,\n        top: 0,\n        left: 0,\n      };\n    }\n\n    componentWillMount() {\n      this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: () => true,\n        onStartShouldSetPanResponderCapture: () => true,\n        onMoveShouldSetPanResponder: () => true,\n        onMoveShouldSetPanResponderCapture: () => true,\n        onPanResponderGrant: () => {},\n        onPanResponderMove: (evt, gesture) => {\n          const touches = evt.nativeEvent.touches;\n          const touch1 = touches[0];\n          const touch2 = touches[1];\n\n          if (touches.length === 2) {\n            this.processPinch(touch1, touch2);\n            if (this.props.onZoom) this.props.onZoom();\n          } else if (touches.length === 1 && !this.state.isZooming && !this.isMoveSmall(gesture)) {\n            // Process touch only if touch (move) is very small so that we can ignore it,\n            // and consider that small move it isn't panning.\n            // small touch will be processed by calling props.onPress()\n            // in onPanResponderRelease()\n            this.processTouch(touch1.pageX, touch1.pageY);\n          }\n        },\n\n        onPanResponderTerminationRequest: () => false,\n        // Due to changes in RN>0.26, onPanResponderTerminationRequest should be\n        // set false, as with `true`,\n        // Modal takes over PanResponder handlers and PanResponder then doesn't work :(\n        onPanResponderRelease: () => {\n          if (!this.state.isMoving && !this.state.isZooming && this.props.onPress) {\n            this.props.onPress();\n          }\n          this.setState({\n            isZooming: false,\n            isMoving: false,\n          });\n        },\n        onPanResponderTerminate: () => {},\n        onShouldBlockNativeResponder: () => true,\n      });\n    }\n\n    isMoveSmall(gesture) {\n      return Math.abs(gesture.dx) < 2 && Math.abs(gesture.dy) < 2;\n    }\n\n    processPinch(touch1, touch2) {\n      const point1 = {\n        x: touch1.pageX,\n        y: touch1.pageY,\n      };\n\n      const point2 = {\n        x: touch2.pageX,\n        y: touch2.pageY,\n      };\n\n      const distance = getDistanceBetweenTwoPoints(point1, point2);\n      const center = middle2D(point1, point2);\n\n      if (!this.state.isZooming) {\n        const offsetByZoom = getOffsetByZoom(this.state, this.props);\n        this.setState({\n          isZooming: true,\n          initialDistance: distance,\n          initialX: center.x,\n          initialY: center.y,\n          initialTop: this.state.top,\n          initialLeft: this.state.left,\n          initialZoom: this.state.zoom,\n          initialTopWithoutZoom: this.state.top - offsetByZoom.top,\n          initialLeftWithoutZoom: this.state.left - offsetByZoom.left,\n        });\n      } else {\n        const touchZoom = distance / this.state.initialDistance;\n        const zoom = touchZoom * this.state.initialZoom > this.state.minZoom\n          ? touchZoom * this.state.initialZoom : this.state.minZoom;\n\n        const offsetByZoom = getOffsetByZoom(this.state, this.props);\n        const left = (this.state.initialLeftWithoutZoom * touchZoom) + offsetByZoom.left;\n        const top = (this.state.initialTopWithoutZoom * touchZoom) + offsetByZoom.top;\n\n        LayoutAnimation.easeInEaseOut();\n        this.setState({\n          zoom,\n          left: left > 0 ? 0 : maxOffset(left, this.state.width, this.props.componentWidth * zoom),\n          top: top > 0 ? 0 : maxOffset(top, this.state.height, this.props.componentHeight * zoom),\n        });\n      }\n    }\n\n    processTouch(x, y) {\n      if (!this.state.isMoving) {\n        this.setState({\n          isMoving: true,\n          initialX: x,\n          initialY: y,\n          initialTop: this.state.top,\n          initialLeft: this.state.left,\n        });\n      } else {\n        const left = this.state.initialLeft + x - this.state.initialX;\n        const top = this.state.initialTop + y - this.state.initialY;\n\n        const zoomedWidth = this.props.componentWidth * this.state.zoom;\n        const zoomedHeight = this.props.componentHeight * this.state.zoom;\n\n        LayoutAnimation.easeInEaseOut();\n        this.setState({\n          left: left > 0 ? 0 : maxOffset(left, this.state.width, zoomedWidth),\n          top: top > 0 ? 0 : maxOffset(top, this.state.height, zoomedHeight),\n        });\n      }\n    }\n\n    _onLayout(event) {\n      const layout = event.nativeEvent.layout;\n\n      if (layout.width === this.state.width && layout.height === this.state.height) {\n        return;\n      }\n\n      const zoom = layout.width / this.props.componentWidth;\n\n      const offsetTop = layout.height > this.props.componentHeight * zoom\n        ? (layout.height - this.props.componentHeight * zoom) / 2\n        : 0;\n\n      this.setState({\n        layoutKnown: true,\n        width: layout.width,\n        height: layout.height,\n        zoom,\n        offsetTop,\n        minZoom: zoom,\n      });\n    }\n\n    render() {\n      const { style, ...otherProps } = this.props;\n      return (\n        <View\n          style={style}\n          onLayout={this._onLayout}\n          {...this._panResponder.panHandlers}\n        >\n          <ComponentToBeDecorated\n            style={[style, {\n              position: 'absolute',\n              top: this.state.offsetTop + this.state.top,\n              left: this.state.offsetLeft + this.state.left,\n              width: this.props.componentWidth * this.state.zoom,\n              height: this.props.componentHeight * this.state.zoom,\n            }]}\n            {...otherProps}\n          />\n        </View>\n      );\n    }\n  }\n\n  return ZoomDecorator;\n}\n\n"]}]