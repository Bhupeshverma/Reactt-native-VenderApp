["3786a30d008bc2712ae566740b475b9459713882","79146e646a6e9095b0a8e340dc5ad7280f0c9896",["react","fbjs/lib/invariant","./PlatformHelpers","./NavigationActions","./addNavigationHelpers"],[132,227,349,405,549],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-navigation/src/createNavigationContainer.js"],"names":["createNavigationContainer","Component","containerOptions","NavigationContainer","props","subs","_handleOpenURL","url","parsedUrl","_urlToPathAndParams","path","params","action","router","getActionForPathAndParams","dispatch","state","_isStateful","nav","getStateForAction","setState","_onNavigationStateChange","_validateProps","init","navigation","screenProps","containerProps","keys","Object","length","join","delimiter","uriPrefix","split","prevNav","onNavigationStateChange","console","group","log","groupEnd","newState","lastState","nextProps","addEventListener","back","getInitialURL","then","removeEventListener","remove","_navigation"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport invariant from 'fbjs/lib/invariant';\nimport { BackAndroid, Linking } from './PlatformHelpers';\nimport NavigationActions from './NavigationActions';\nimport addNavigationHelpers from './addNavigationHelpers';\n\nimport type {\n  NavigationRoute,\n  NavigationAction,\n  NavigationState,\n  NavigationScreenProp,\n  NavigationNavigatorProps,\n} from './TypeDefinition';\n\ntype NavigationContainerProps = {\n  uriPrefix?: string | RegExp,\n  onNavigationStateChange?: (\n    NavigationState,\n    NavigationState,\n    NavigationAction\n  ) => void,\n};\n\ntype Props<T> = NavigationContainerProps & NavigationNavigatorProps<T>;\n\ntype State = {\n  nav: ?NavigationState,\n};\n\n/**\n * Create an HOC that injects the navigation and manages the navigation state\n * in case it's not passed from above.\n * This allows to use e.g. the StackNavigator and TabNavigator as root-level\n * components.\n */\nexport default function createNavigationContainer<T: *>(\n  Component: ReactClass<NavigationNavigatorProps<T>>,\n  containerOptions?: {}\n) {\n  invariant(\n    typeof containerOptions === 'undefined',\n    'containerOptions.URIPrefix has been removed. Pass the uriPrefix prop to the navigator instead'\n  );\n\n  class NavigationContainer extends React.Component<void, Props<T>, State> {\n    state: State;\n    props: Props<T>;\n\n    subs: ?{\n      remove: () => void,\n    } = null;\n\n    static router = Component.router;\n\n    constructor(props: Props<T>) {\n      super(props);\n\n      this._validateProps(props);\n\n      this.state = {\n        nav: this._isStateful()\n          ? Component.router.getStateForAction(NavigationActions.init())\n          : null,\n      };\n    }\n\n    _isStateful(): boolean {\n      return !this.props.navigation;\n    }\n\n    _validateProps(props: Props<T>) {\n      if (this._isStateful()) {\n        return;\n      }\n\n      const { navigation, screenProps, ...containerProps } = props;\n\n      const keys = Object.keys(containerProps);\n\n      invariant(\n        keys.length === 0,\n        'This navigator has both navigation and container props, so it is ' +\n          `unclear if it should own its own state. Remove props: \"${keys.join(', ')}\" ` +\n          'if the navigator should get its state from the navigation prop. If the ' +\n          'navigator should maintain its own state, do not pass a navigation prop.'\n      );\n    }\n\n    _urlToPathAndParams(url: string) {\n      const params = {};\n      const delimiter = this.props.uriPrefix || '://';\n      let path = url.split(delimiter)[1];\n      if (!path) {\n        path = url;\n      }\n      return {\n        path,\n        params,\n      };\n    }\n\n    _handleOpenURL = (url: string) => {\n      const parsedUrl = this._urlToPathAndParams(url);\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const action = Component.router.getActionForPathAndParams(path, params);\n        if (action) {\n          this.dispatch(action);\n        }\n      }\n    };\n\n    _onNavigationStateChange(\n      prevNav: NavigationState,\n      nav: NavigationState,\n      action: NavigationAction\n    ) {\n      if (\n        typeof this.props.onNavigationStateChange === 'undefined' &&\n        this._isStateful()\n      ) {\n        /* eslint-disable no-console */\n        if (console.group) {\n          console.group('Navigation Dispatch: ');\n          console.log('Action: ', action);\n          console.log('New State: ', nav);\n          console.log('Last State: ', prevNav);\n          console.groupEnd();\n        } else {\n          console.log('Navigation Dispatch: ', {\n            action,\n            newState: nav,\n            lastState: prevNav,\n          });\n        }\n        /* eslint-enable no-console */\n        return;\n      }\n\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    componentWillReceiveProps(nextProps: *) {\n      this._validateProps(nextProps);\n    }\n\n    componentDidMount() {\n      if (!this._isStateful()) {\n        return;\n      }\n\n      this.subs = BackAndroid.addEventListener('backPress', () =>\n        this.dispatch(NavigationActions.back())\n      );\n\n      Linking.addEventListener('url', ({ url }: { url: string }) => {\n        this._handleOpenURL(url);\n      });\n\n      Linking.getInitialURL().then(\n        (url: string) => url && this._handleOpenURL(url)\n      );\n    }\n\n    componentWillUnmount() {\n      Linking.removeEventListener('url', this._handleOpenURL);\n      this.subs && this.subs.remove();\n    }\n\n    dispatch = (action: NavigationAction) => {\n      const { state } = this;\n      if (!this._isStateful()) {\n        return false;\n      }\n      const nav = Component.router.getStateForAction(action, state.nav);\n      if (nav && nav !== state.nav) {\n        this.setState({ nav }, () =>\n          this._onNavigationStateChange(state.nav, nav, action)\n        );\n        return true;\n      }\n      return false;\n    };\n\n    _navigation: ?NavigationScreenProp<NavigationRoute, NavigationAction>;\n\n    render() {\n      let navigation = this.props.navigation;\n      if (this._isStateful()) {\n        if (!this._navigation || this._navigation.state !== this.state.nav) {\n          this._navigation = addNavigationHelpers({\n            dispatch: this.dispatch,\n            state: this.state.nav,\n          });\n        }\n        navigation = this._navigation;\n      }\n      return <Component {...this.props} navigation={navigation} />;\n    }\n  }\n\n  return NavigationContainer;\n}\n"]}]