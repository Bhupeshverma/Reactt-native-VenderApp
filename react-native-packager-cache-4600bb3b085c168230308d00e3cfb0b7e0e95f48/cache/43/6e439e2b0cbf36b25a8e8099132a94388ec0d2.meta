["9da29a976e255c694e230a1bff8d64e5109f1a09","ab059f3a70c58b8c20a002a0bea1f43a31cc75c7",["react","../src/connectStyle","../src/StyleProvider","../src/resolveIncludes","react-native"],[136,234,361,493,548],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/theme/examples/Shapes.js"],"names":["theme","variables","circle","width","circleRadius","height","borderRadius","backgroundColor","marginTop","squareSize","alignItems","justifyContent","container","flex","title","color","fontSize","input","Shapes","props","context","updateThemeVariable","bind","themeVariables","state","key","val","setState","resolveTheme","screenStyle","Component","propTypes","PropTypes","object","defaultProps","Screen","style","StyledScreen","StyledView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport connectStyle from '../src/connectStyle';\nimport StyleProvider from '../src/StyleProvider';\nimport { INCLUDE } from '../src/resolveIncludes';\nimport { View, Text } from 'react-native';\n\nconst theme = (variables = {}) => ({\n  circle: {\n    width: variables.circleRadius,\n    height: variables.circleRadius,\n    borderRadius: variables.circleRadius,\n    backgroundColor: '#fff',\n  },\n  'developer.project.screen': {\n    'developer.project.view': {\n\n      'developer.project.view': {\n        '.nestedCircle': {\n          [INCLUDE]: ['circle'],\n        },\n      },\n\n      '.square': {\n        marginTop: 10,\n        width: variables.squareSize,\n        height: variables.squareSize,\n        backgroundColor: 'green',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n\n      '.circle': {\n        [INCLUDE]: ['circle'],\n      },\n    },\n    container: {\n      marginTop: 50,\n      alignItems: 'center',\n      flex: 1,\n    },\n    title: {\n      color: variables.color,\n      fontSize: variables.fontSize,\n    },\n    input: {\n      width: 100,\n      height: 50,\n      backgroundColor: 'red',\n    },\n  },\n});\n\nexport  default class Shapes extends React.Component {\n  static propTypes = {\n    themeVariables: React.PropTypes.object,\n    screenStyle: React.PropTypes.object,\n  };\n\n  static defaultProps = {\n    themeVariables: {},\n    screenStyle: {},\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.updateThemeVariable = this.updateThemeVariable.bind(this);\n\n    const themeVariables = {\n      color: 'navy',\n      fontSize: 18,\n      squareSize: 250,\n      circleRadius: 100,\n      ...props.themeVariables,\n    };\n\n    this.state = {\n      themeVariables,\n    };\n  }\n\n  updateThemeVariable(key, val) {\n    const themeVariables = { ...this.state.themeVariables, [key]: val };\n    this.setState({ themeVariables });\n  }\n\n  resolveTheme(themeVariables) {\n    return theme(themeVariables);\n  }\n\n  render() {\n    const { themeVariables } = this.state;\n    return (\n      <StyleProvider style={this.resolveTheme(themeVariables)}>\n        <StyledScreen style={this.props.screenStyle} />\n      </StyleProvider>\n    );\n  }\n}\n\nfunction Screen({ style }) {\n  // connectStyle creates HOC which pass theme style to component by it style name automatically\n  return (\n    <StyledView style={style.container} virtual>\n      <Text style={style.title}>Theme Screen</Text>\n\n      <StyledView styleName=\"square\">\n        {/* Circle styleName is not applied because it is not nested properly in theme */}\n        <StyledView styleName=\"circle\" />\n        <StyledView styleName=\"nestedCircle\" />\n      </StyledView>\n\n      {/* Virtual prop make component pass parent style rules to children */}\n      <StyledView styleName=\"square\" virtual style={{ backgroundColor: 'navy' }}>\n        <StyledView styleName=\"circle\" />\n      </StyledView>\n\n    </StyledView>\n  );\n}\n\nScreen.propTypes = {\n  style: React.PropTypes.object,\n};\n\n// Component style name - developer.project.screen\n// Second argument is optional, additional component specific style.\nconst StyledScreen = connectStyle('developer.project.screen')(Screen);\nconst StyledView = connectStyle('developer.project.view')(View);\n"]}]