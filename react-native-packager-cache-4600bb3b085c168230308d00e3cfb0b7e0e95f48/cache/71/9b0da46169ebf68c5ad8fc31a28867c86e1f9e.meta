["d943982a0504955ee4405ad01a2bb3b5928e94e2","f26e6b40a95692d07845a79971540162949e7721",["prop-types","react","react-native","../helpers/getIconType","../config/ViewPropTypes"],[91,195,292,337,465],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/icons/Icon.js"],"names":["Icon","type","props","name","size","color","iconStyle","component","underlayColor","reverse","raised","containerStyle","reverseColor","onPress","attributes","Component","styles","button","borderRadius","height","width","backgroundColor","alignItems","justifyContent","propTypes","string","number","func","bool","style","defaultProps","create","margin","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  Text as NativeText,\n} from 'react-native';\nimport getIconType from '../helpers/getIconType';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst Icon = props => {\n  const {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    component,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    onPress,\n    ...attributes\n  } = props;\n\n  let Component = View;\n  if (onPress) {\n    Component = TouchableHighlight;\n  }\n  if (component) {\n    Component = component;\n  }\n  let Icon;\n  if (!type) {\n    Icon = getIconType('material');\n  } else {\n    Icon = getIconType(type);\n  }\n  return (\n    <Component\n      underlayColor={reverse ? color : underlayColor || color}\n      style={[\n        (reverse || raised) && styles.button,\n        (reverse || raised) && {\n          borderRadius: size + 4,\n          height: size * 2 + 4,\n          width: size * 2 + 4,\n        },\n        raised && styles.raised,\n        {\n          backgroundColor: reverse ? color : raised ? 'white' : 'transparent',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        containerStyle && containerStyle,\n      ]}\n      onPress={onPress}\n      {...attributes}\n    >\n      <Icon\n        style={[{ backgroundColor: 'transparent' }, iconStyle && iconStyle]}\n        size={size}\n        name={name}\n        color={reverse ? reverseColor : color}\n      />\n    </Component>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  component: PropTypes.func,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  iconStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'white',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n      android: {\n        elevation: 2,\n      },\n    }),\n  },\n});\n\nexport default Icon;\n"]}]