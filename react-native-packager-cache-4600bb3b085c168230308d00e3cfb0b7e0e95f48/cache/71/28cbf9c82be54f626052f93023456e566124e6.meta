["7c4fabe1e20080947214cb90bc196c970634e18b","1ce6dede9040ec6a0db0aa097ae5c438d2497b33",["react-native"],[42],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-navigation-experimental-compat/src/NavigationPagerStyleInterpolator.js"],"names":["I18nManager","require","forInitial","props","navigationState","scene","focused","index","opacity","dir","translate","transform","translateX","translateY","forHorizontal","layout","position","isMeasured","inputRange","width","initWidth","outputRange","isRTL","interpolate","shadowColor","shadowRadius","scale","module","exports"],"mappings":";AA+BA;;AAEA,IAAMA,cAAcC,wBAAwBD,WAA5C;;AAwBA,SAASE,UAAT,CAAoBC,KAApB,EAAiE;AAAA,MAE7DC,eAF6D,GAI3DD,KAJ2D,CAE7DC,eAF6D;AAAA,MAG7DC,KAH6D,GAI3DF,KAJ2D,CAG7DE,KAH6D;;;AAM/D,MAAMC,UAAUF,gBAAgBG,KAAhB,KAA0BF,MAAME,KAAhD;AACA,MAAMC,UAAUF,UAAU,CAAV,GAAc,CAA9B;;AAEA,MAAMG,MAAMJ,MAAME,KAAN,GAAcH,gBAAgBG,KAA9B,GAAsC,CAAtC,GAA0C,CAAC,CAAvD;AACA,MAAMG,YAAYJ,UAAU,CAAV,GAAe,UAAUG,GAA3C;AACA,SAAO;AACLD,oBADK;AAELG,eAAW,CACT,EAAEC,YAAYF,SAAd,EADS,EAET,EAAEG,YAAYH,SAAd,EAFS;AAFN,GAAP;AAOD;;AAED,SAASI,aAAT,CAAuBX,KAAvB,EAAoE;AAAA,MAEhEY,MAFgE,GAK9DZ,KAL8D,CAEhEY,MAFgE;AAAA,MAGhEC,QAHgE,GAK9Db,KAL8D,CAGhEa,QAHgE;AAAA,MAIhEX,KAJgE,GAK9DF,KAL8D,CAIhEE,KAJgE;;;AAOlE,MAAI,CAACU,OAAOE,UAAZ,EAAwB;AACtB,WAAOf,WAAWC,KAAX,CAAP;AACD;;AAED,MAAMI,QAAQF,MAAME,KAApB;AACA,MAAMW,aAAa,CAACX,QAAQ,CAAT,EAAYA,KAAZ,EAAmBA,QAAQ,CAA3B,CAAnB;AACA,MAAMY,QAAQJ,OAAOK,SAArB;AACA,MAAMC,cAAcrB,YAAYsB,KAAZ,GACjB,CAAC,CAACH,KAAF,EAAS,CAAT,EAAYA,KAAZ,CADiB,GAEjB,CAACA,KAAD,EAAQ,CAAR,EAAW,CAACA,KAAZ,CAFH;;AAIA,MAAMP,aAAaI,SAASO,WAAT,CAAqB;AACtCL,0BADsC;AAEtCG;AAFsC,GAArB,CAAnB;;AAKA,SAAO;AACLb,aAAU,CADL;AAELgB,iBAAa,aAFR;AAGLC,kBAAc,CAHT;AAILd,eAAW,CACT,EAAEe,OAAO,CAAT,EADS,EAET,EAAEd,sBAAF,EAFS,EAGT,EAAEC,YAAY,CAAd,EAHS;AAJN,GAAP;AAUD;;AAEDc,OAAOC,OAAP,GAAiB;AACfd;AADe,CAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Facebook, Inc. (\"Facebook\") owns all right, title and interest, including\n * all intellectual property and other proprietary rights, in and to the React\n * Native CustomComponents software (the \"Software\").  Subject to your\n * compliance with these terms, you are hereby granted a non-exclusive,\n * worldwide, royalty-free copyright license to (1) use and copy the Software;\n * and (2) reproduce and distribute the Software as part of your own software\n * (\"Your Software\").  Facebook reserves all rights not expressly granted to\n * you in this license agreement.\n *\n * THE SOFTWARE AND DOCUMENTATION, IF ANY, ARE PROVIDED \"AS IS\" AND ANY EXPRESS\n * OR IMPLIED WARRANTIES (INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) ARE DISCLAIMED.\n * IN NO EVENT SHALL FACEBOOK OR ITS AFFILIATES, OFFICERS, DIRECTORS OR\n * EMPLOYEES BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @flow\n */\n'use strict';\n\nconst I18nManager = require('react-native').I18nManager;\n\nimport type  {\n  NavigationSceneRendererProps,\n} from './NavigationTypeDefinition';\n\n/**\n * Utility that builds the style for the card in the cards list.\n *\n * +-------------+-------------+-------------+\n * |             |             |             |\n * |             |             |             |\n * |             |             |             |\n * |    Next     |   Focused   |  Previous   |\n * |    Card     |    Card     |    Card     |\n * |             |             |             |\n * |             |             |             |\n * |             |             |             |\n * +-------------+-------------+-------------+\n */\n\n/**\n * Render the initial style when the initial layout isn't measured yet.\n */\nfunction forInitial(props: NavigationSceneRendererProps): Object {\n  const {\n    navigationState,\n    scene,\n  } = props;\n\n  const focused = navigationState.index === scene.index;\n  const opacity = focused ? 1 : 0;\n  // If not focused, move the scene to the far away.\n  const dir = scene.index > navigationState.index ? 1 : -1;\n  const translate = focused ? 0 : (1000000 * dir);\n  return {\n    opacity,\n    transform: [\n      { translateX: translate },\n      { translateY: translate },\n    ],\n  };\n}\n\nfunction forHorizontal(props: NavigationSceneRendererProps): Object {\n  const {\n    layout,\n    position,\n    scene,\n  } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n\n  const index = scene.index;\n  const inputRange = [index - 1, index, index + 1];\n  const width = layout.initWidth;\n  const outputRange = I18nManager.isRTL ?\n    ([-width, 0, width]: Array<number>) :\n    ([width, 0, -width]: Array<number>);\n\n  const translateX = position.interpolate({\n    inputRange,\n    outputRange,\n  });\n\n  return {\n    opacity : 1,\n    shadowColor: 'transparent',\n    shadowRadius: 0,\n    transform: [\n      { scale: 1 },\n      { translateX },\n      { translateY: 0 },\n    ],\n  };\n}\n\nmodule.exports = {\n  forHorizontal,\n};\n"]}]