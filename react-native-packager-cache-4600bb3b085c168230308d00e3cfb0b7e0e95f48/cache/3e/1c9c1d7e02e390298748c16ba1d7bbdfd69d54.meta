["47411628a882eb4ee0bccfd8e9baf419e7707dbf","1f68f4a58f043fbfe03d2582897dd7f88b7ea22a",["./random/random-from-seed"],[44],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/shortid/lib/alphabet.js"],"names":["randomFromSeed","require","ORIGINAL","alphabet","previousSeed","shuffled","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","characters","setSeed","seed","shuffle","sourceArray","targetArray","r","nextValue","characterIndex","Math","floor","push","splice","getShuffled","lookup","index","alphabetShuffled","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiBC,QAAQ,2BAAR,CAArB;;AAEA,IAAIC,WAAW,kEAAf;AACA,IAAIC,QAAJ;AACA,IAAIC,YAAJ;;AAEA,IAAIC,QAAJ;;AAEA,SAASC,KAAT,GAAiB;AACbD,eAAW,KAAX;AACH;;AAED,SAASE,aAAT,CAAuBC,UAAvB,EAAmC;AAC/B,QAAI,CAACA,UAAL,EAAiB;AACb,YAAIL,aAAaD,QAAjB,EAA2B;AACvBC,uBAAWD,QAAX;AACAI;AACH;AACD;AACH;;AAED,QAAIE,eAAeL,QAAnB,EAA6B;AACzB;AACH;;AAED,QAAIK,WAAWC,MAAX,KAAsBP,SAASO,MAAnC,EAA2C;AACvC,cAAM,IAAIC,KAAJ,CAAU,yCAAyCR,SAASO,MAAlD,GAA2D,oCAA3D,GAAkGD,WAAWC,MAA7G,GAAsH,eAAtH,GAAwID,UAAlJ,CAAN;AACH;;AAED,QAAIG,SAASH,WAAWI,KAAX,CAAiB,EAAjB,EAAqBC,MAArB,CAA4B,UAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAwB;AAC9D,eAAOD,QAAQC,IAAIC,WAAJ,CAAgBH,IAAhB,CAAf;AACF,KAFY,CAAb;;AAIA,QAAIH,OAAOF,MAAX,EAAmB;AACf,cAAM,IAAIC,KAAJ,CAAU,yCAAyCR,SAASO,MAAlD,GAA2D,wDAA3D,GAAsHE,OAAOO,IAAP,CAAY,IAAZ,CAAhI,CAAN;AACH;;AAEDf,eAAWK,UAAX;AACAF;AACH;;AAED,SAASa,UAAT,CAAoBX,UAApB,EAAgC;AAC5BD,kBAAcC,UAAd;AACA,WAAOL,QAAP;AACH;;AAED,SAASiB,OAAT,CAAiBC,IAAjB,EAAuB;AACnBrB,mBAAeqB,IAAf,CAAoBA,IAApB;AACA,QAAIjB,iBAAiBiB,IAArB,EAA2B;AACvBf;AACAF,uBAAeiB,IAAf;AACH;AACJ;;AAED,SAASC,OAAT,GAAmB;AACf,QAAI,CAACnB,QAAL,EAAe;AACXI,sBAAcL,QAAd;AACH;;AAED,QAAIqB,cAAcpB,SAASS,KAAT,CAAe,EAAf,CAAlB;AACA,QAAIY,cAAc,EAAlB;AACA,QAAIC,IAAIzB,eAAe0B,SAAf,EAAR;AACA,QAAIC,cAAJ;;AAEA,WAAOJ,YAAYd,MAAZ,GAAqB,CAA5B,EAA+B;AAC3BgB,YAAIzB,eAAe0B,SAAf,EAAJ;AACAC,yBAAiBC,KAAKC,KAAL,CAAWJ,IAAIF,YAAYd,MAA3B,CAAjB;AACAe,oBAAYM,IAAZ,CAAiBP,YAAYQ,MAAZ,CAAmBJ,cAAnB,EAAmC,CAAnC,EAAsC,CAAtC,CAAjB;AACH;AACD,WAAOH,YAAYN,IAAZ,CAAiB,EAAjB,CAAP;AACH;;AAED,SAASc,WAAT,GAAuB;AACnB,QAAI3B,QAAJ,EAAc;AACV,eAAOA,QAAP;AACH;AACDA,eAAWiB,SAAX;AACA,WAAOjB,QAAP;AACH;;AAOD,SAAS4B,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAIC,mBAAmBH,aAAvB;AACA,WAAOG,iBAAiBD,KAAjB,CAAP;AACH;;AAEDE,OAAOC,OAAP,GAAiB;AACblB,gBAAYA,UADC;AAEbE,UAAMD,OAFO;AAGba,YAAQA,MAHK;AAIb5B,cAAU2B;AAJG,CAAjB","sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n"]}]