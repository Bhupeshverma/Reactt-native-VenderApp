Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Spinner = undefined;

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _theme = require('@shoutem/theme');

var Spinner = function (_React$Component) {
  babelHelpers.inherits(Spinner, _React$Component);

  function Spinner() {
    babelHelpers.classCallCheck(this, Spinner);
    return babelHelpers.possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).apply(this, arguments));
  }

  babelHelpers.createClass(Spinner, [{
    key: 'render',
    value: function render() {
      var style = this.props.style;

      var indicatorStyle = babelHelpers.extends({}, style);
      delete indicatorStyle.size;
      delete indicatorStyle.color;

      return _react2.default.createElement(_reactNative.ActivityIndicator, {
        animating: true,
        color: style.color,
        size: style.size,
        style: indicatorStyle
      });
    }
  }]);
  return Spinner;
}(_react2.default.Component);

Spinner.propTypes = {
  style: _react2.default.PropTypes.object
};

var StyledSpinner = (0, _theme.connectStyle)('shoutem.ui.Spinner', {
  size: 'small'
})(Spinner);

exports.Spinner = StyledSpinner;