Object.defineProperty(exports,"__esModule",{value:true});exports.View=undefined;var _react=require("react");var _react2=babelHelpers.interopRequireDefault(_react);
var _reactNative=require("react-native");

var _theme=require("@shoutem/theme");
var _animation=require("@shoutem/animation");

var _LinearGradient=require("../components/LinearGradient");var

View=function(_Component){babelHelpers.inherits(View,_Component);function View(){babelHelpers.classCallCheck(this,View);return babelHelpers.possibleConstructorReturn(this,(View.__proto__||Object.getPrototypeOf(View)).apply(this,arguments));}babelHelpers.createClass(View,[{key:"render",value:function render()
{
var style=babelHelpers.extends({},this.props.style);
var gradient=null;

if(style.backgroundGradient){
gradient=
_react2.default.createElement(_LinearGradient.LinearGradient,{
styleName:"fill-parent",
style:style.backgroundGradient});



// This is not a valid RN View style
delete style.backgroundGradient;
}


return(
_react2.default.createElement(_reactNative.View,babelHelpers.extends({},this.props,{style:style}),
gradient,
this.props.children));


}}]);return View;}(_react.Component);


View.propTypes=babelHelpers.extends({},
_reactNative.View.propTypes,{
style:_react2.default.PropTypes.object});


var AnimatedView=(0,_animation.connectAnimation)(View);
var StyledView=(0,_theme.connectStyle)('shoutem.ui.View')(AnimatedView);exports.


View=StyledView;