["b6d115174601123b967b6b878a2beb5c8230eafe","7e97d472ac7863b2ad609ef27c240179931017ef",["sc-errors"],[23],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/socketcluster-client/lib/response.js"],"names":["scErrors","require","InvalidActionError","Response","socket","id","sent","prototype","_respond","responseData","send","encode","end","data","rid","undefined","error","err","dehydrateError","callback","module","exports"],"mappings":"AAAA,IAAIA,WAAWC,OAAX,aAAJ;AACA,IAAIC,qBAAqBF,SAASE,kBAAlC;;AAEA,IAAIC,WAAW,SAAXA,QAAW,CAAUC,MAAV,EAAkBC,EAAlB,EAAsB;AACnC,OAAKD,MAAL,GAAcA,MAAd;AACA,OAAKC,EAAL,GAAUA,EAAV;AACA,OAAKC,IAAL,GAAY,KAAZ;AACD,CAJD;;AAMAH,SAASI,SAAT,CAAmBC,QAAnB,GAA8B,UAAUC,YAAV,EAAwB;AACpD,MAAI,KAAKH,IAAT,EAAe;AACb,UAAM,IAAIJ,kBAAJ,CAAuB,cAAc,KAAKG,EAAnB,GAAwB,wBAA/C,CAAN;AACD,GAFD,MAEO;AACL,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKF,MAAL,CAAYM,IAAZ,CAAiB,KAAKN,MAAL,CAAYO,MAAZ,CAAmBF,YAAnB,CAAjB;AACD;AACF,CAPD;;AASAN,SAASI,SAAT,CAAmBK,GAAnB,GAAyB,UAAUC,IAAV,EAAgB;AACvC,MAAI,KAAKR,EAAT,EAAa;AACX,QAAII,eAAe;AACjBK,WAAK,KAAKT;AADO,KAAnB;AAGA,QAAIQ,SAASE,SAAb,EAAwB;AACtBN,mBAAaI,IAAb,GAAoBA,IAApB;AACD;AACD,SAAKL,QAAL,CAAcC,YAAd;AACD;AACF,CAVD;;AAYAN,SAASI,SAAT,CAAmBS,KAAnB,GAA2B,UAAUA,KAAV,EAAiBH,IAAjB,EAAuB;AAChD,MAAI,KAAKR,EAAT,EAAa;AACX,QAAIY,MAAMjB,SAASkB,cAAT,CAAwBF,KAAxB,CAAV;;AAEA,QAAIP,eAAe;AACjBK,WAAK,KAAKT,EADO;AAEjBW,aAAOC;AAFU,KAAnB;AAIA,QAAIJ,SAASE,SAAb,EAAwB;AACtBN,mBAAaI,IAAb,GAAoBA,IAApB;AACD;;AAED,SAAKL,QAAL,CAAcC,YAAd;AACD;AACF,CAdD;;AAgBAN,SAASI,SAAT,CAAmBY,QAAnB,GAA8B,UAAUH,KAAV,EAAiBH,IAAjB,EAAuB;AACnD,MAAIG,KAAJ,EAAW;AACT,SAAKA,KAAL,CAAWA,KAAX,EAAkBH,IAAlB;AACD,GAFD,MAEO;AACL,SAAKD,GAAL,CAASC,IAAT;AACD;AACF,CAND;;AAQAO,OAAOC,OAAP,CAAelB,QAAf,GAA0BA,QAA1B","sourcesContent":["var scErrors = require('sc-errors');\nvar InvalidActionError = scErrors.InvalidActionError;\n\nvar Response = function (socket, id) {\n  this.socket = socket;\n  this.id = id;\n  this.sent = false;\n};\n\nResponse.prototype._respond = function (responseData) {\n  if (this.sent) {\n    throw new InvalidActionError('Response ' + this.id + ' has already been sent');\n  } else {\n    this.sent = true;\n    this.socket.send(this.socket.encode(responseData));\n  }\n};\n\nResponse.prototype.end = function (data) {\n  if (this.id) {\n    var responseData = {\n      rid: this.id\n    };\n    if (data !== undefined) {\n      responseData.data = data;\n    }\n    this._respond(responseData);\n  }\n};\n\nResponse.prototype.error = function (error, data) {\n  if (this.id) {\n    var err = scErrors.dehydrateError(error);\n\n    var responseData = {\n      rid: this.id,\n      error: err\n    };\n    if (data !== undefined) {\n      responseData.data = data;\n    }\n\n    this._respond(responseData);\n  }\n};\n\nResponse.prototype.callback = function (error, data) {\n  if (error) {\n    this.error(error, data);\n  } else {\n    this.end(data);\n  }\n};\n\nmodule.exports.Response = Response;\n"]}]