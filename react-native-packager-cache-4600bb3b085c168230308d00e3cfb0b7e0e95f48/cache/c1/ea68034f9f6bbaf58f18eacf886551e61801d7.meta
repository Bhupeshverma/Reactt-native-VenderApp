["1b7338122fe2d116e8ca3e913edc0f844ea50456","bda04a24774c8be78f5a59750264c08cb1e83151",["react","react-native","prop-types"],[167,264,307],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-hero/components/Hero.js"],"names":["_createPositionStyle","zIndex","top","updateWidthState","component","window","setState","width","Hero","props","state","source","opacity","height","minHeight","undefined","resizeMode","nextProps","overlayStyles","backgroundColor","colorOverlay","colorOpacity","position","self","transparentBg","contentStyles","updateViewHeight","event","overlayHeight","nativeEvent","layout","overlayWidth","fullWidth","get","addEventListener","renderOverlay","renderHeroOverlay","renderColorOverlay","propTypes","func","string","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Image, StyleSheet, View, Dimensions } from 'react-native';\nimport PropTypes from 'prop-types';\n\n// _createPositionStyle :: Number -> Object\nexport const _createPositionStyle = (zIndex=1) => ({\n  top: 0,\n  zIndex\n});\n\n// updateWidthState :: Component, Window -> _\nconst updateWidthState = (component, window) => {\n  if (!component) return;\n  component.setState({\n    width: window.width\n  });\n}\n\nexport default class Hero extends Component {\n  static propTypes = {\n    renderOverlay: PropTypes.func,\n    resizeMode: PropTypes.string,\n    colorOpacity: PropTypes.number,\n    minHeight: PropTypes.number,\n    fullWidth: PropTypes.bool\n  };\n\n  static defaultProps = {\n    fullWidth: true\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: this.props.source,\n      opacity: 0,\n      height: this.props.minHeight || undefined,\n      resizeMode: this.props.resizeMode || 'cover'\n    };\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.source !== this.props.source) {\n      this.setState({\n        source: this.props.source\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      opacity: 1\n    });\n  };\n\n  renderColorOverlay() {\n    let overlayStyles = [{\n      height: this.state.height,\n      width: '100%',\n      backgroundColor: this.props.colorOverlay || 'transparent',\n      opacity: this.props.colorOpacity || .30\n    }, _createPositionStyle(1), { position: 'absolute'}];\n\n    return (this.props.colorOverlay) ?\n      <View style={overlayStyles}></View> :\n      null;\n  };\n\n  renderHeroOverlay() {\n    const self = this;\n    const transparentBg = { backgroundColor: 'transparent' };\n    const contentStyles = (this.props.colorOverlay) ?\n      [transparentBg, _createPositionStyle(2)] :\n      transparentBg;\n\n    const updateViewHeight = (event) => {\n      const overlayHeight = event.nativeEvent.layout.height;\n      const overlayWidth = event.nativeEvent.layout.width;\n      if (self.props.minHeight) return;\n      if (overlayHeight !== self.state.height) {\n        self.setState({\n          height: overlayHeight\n        });\n      }\n\n      // Initial width state set\n      if ((this.props.fullWidth === true) && (!self.state.width)) {\n        updateWidthState(self, Dimensions.get('window'));\n\t// This requires RN ^0.43 + React ^16, may consider alternative updating method for better\n\t// backwards compatability\n        Dimensions.addEventListener('change', (window) => updateWidthState(self, window));\n      }\n    };\n\n    return (\n      <View\n        onLayout={(event) => updateViewHeight(event)}\n        style={contentStyles}>\n          {this.props.renderOverlay()}\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <View style={{opacity: this.state.opacity}}>\n        <Image\n          source={this.state.source}\n          resizeMode={this.state.resizeMode}\n          style={{height: this.state.height, width: (this.state.width || '100%') }}>\n            {this.renderHeroOverlay()}\n            {this.renderColorOverlay()}\n        </Image>\n      </View>\n    )\n  };\n}\n"]}]