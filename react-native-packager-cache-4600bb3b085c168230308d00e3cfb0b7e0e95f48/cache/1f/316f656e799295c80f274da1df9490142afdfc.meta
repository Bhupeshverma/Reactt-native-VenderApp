["20d36b8782e0df9d2bf1a828c44ba9c978a0104c","7fca3111b95e8cc15f4c93534a3bc53a0972ec04",["prop-types","react","react-native","../config/colors","../text/Text","@expo/vector-icons/MaterialIcons","../helpers/getIconType","../helpers/normalizeText","../config/ViewPropTypes"],[91,195,292,332,435,539,679,807,941],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/react-native-elements/src/buttons/Button.js"],"names":["log","console","Button","disabled","props","loading","loadingRight","activityIndicatorStyle","buttonStyle","borderRadius","title","onPress","icon","iconComponent","secondary","secondary2","secondary3","primary1","primary2","backgroundColor","color","fontSize","underlayColor","raised","textStyle","large","iconRight","fontWeight","disabledStyle","fontFamily","containerViewStyle","rounded","outline","transparent","textNumberOfLines","textEllipsizeMode","allowFontScaling","attributes","Component","iconElement","Icon","type","size","styles","style","loadingElement","OS","background","Ripple","baseFont","stylesObject","text","smallFont","textOptions","numberOfLines","ellipsizeMode","container","button","small","paddingHorizontal","padding","borderWidth","borderColor","propTypes","string","any","object","bool","number","marginLeft","marginRight","primary","justifyContent","alignItems","flexDirection","marginHorizontal","height","select","ios","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","android","elevation","create"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  TouchableNativeFeedback,\n  TouchableHighlight,\n  StyleSheet,\n  View,\n  Platform,\n  ActivityIndicator,\n  Text as NativeText,\n} from 'react-native';\nimport colors from '../config/colors';\nimport Text from '../text/Text';\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons';\nimport getIconType from '../helpers/getIconType';\nimport normalize from '../helpers/normalizeText';\nimport ViewPropTypes from '../config/ViewPropTypes';\n\nconst log = () => {\n  console.log('please attach method to this component'); //eslint-disable-line no-console\n};\n\nconst Button = props => {\n  const {\n    disabled,\n    loading,\n    loadingRight,\n    activityIndicatorStyle,\n    buttonStyle,\n    borderRadius,\n    title,\n    onPress,\n    icon,\n    iconComponent,\n    secondary,\n    secondary2,\n    secondary3,\n    primary1,\n    primary2,\n    backgroundColor,\n    color,\n    fontSize,\n    underlayColor,\n    raised,\n    textStyle,\n    large,\n    iconRight,\n    fontWeight,\n    disabledStyle,\n    fontFamily,\n    containerViewStyle,\n    rounded,\n    outline,\n    transparent,\n    textNumberOfLines,\n    textEllipsizeMode,\n    allowFontScaling,\n    ...attributes\n  } = props;\n  let { Component } = props;\n\n  let iconElement;\n  if (icon) {\n    let Icon;\n    if (iconComponent) {\n      Icon = iconComponent;\n    } else if (!icon.type) {\n      Icon = MaterialIcon;\n    } else {\n      Icon = getIconType(icon.type);\n    }\n    iconElement = (\n      <Icon\n        {...icon}\n        color={icon.color || 'white'}\n        size={icon.size || (large ? 26 : 18)}\n        style={[\n          iconRight ? styles.iconRight : styles.icon,\n          icon.style && icon.style,\n        ]}\n      />\n    );\n  }\n  let loadingElement;\n  if (loading) {\n    loadingElement = (\n      <ActivityIndicator\n        animating={true}\n        style={[styles.activityIndicatorStyle, activityIndicatorStyle]}\n        color={color || 'white'}\n        size={(large && 'large') || 'small'}\n      />\n    );\n  }\n  if (!Component && Platform.OS === 'ios') {\n    Component = TouchableHighlight;\n  }\n  if (!Component && Platform.OS === 'android') {\n    Component = TouchableNativeFeedback;\n  }\n  if (!Component) {\n    Component = TouchableHighlight;\n  }\n\n  if (Platform.OS === 'android' && (borderRadius && !attributes.background)) {\n    attributes.background = TouchableNativeFeedback.Ripple(\n      'ThemeAttrAndroid',\n      true\n    );\n  }\n\n  const baseFont = {\n    color: (textStyle && textStyle.color) || color || stylesObject.text.color,\n    size: (textStyle && textStyle.fontSize) ||\n      fontSize ||\n      (!large && stylesObject.smallFont.fontSize) ||\n      stylesObject.text.fontSize,\n  };\n\n  let textOptions = {};\n  if (textNumberOfLines) {\n    textOptions.numberOfLines = textNumberOfLines;\n    if (textEllipsizeMode) {\n      textOptions.ellipsizeMode = textEllipsizeMode;\n    }\n  }\n\n  return (\n    <View\n      style={[styles.container, raised && styles.raised, containerViewStyle]}\n    >\n      <Component\n        underlayColor={underlayColor || 'transparent'}\n        onPress={onPress || log}\n        disabled={disabled || false}\n        {...attributes}\n      >\n        <View\n          style={[\n            styles.button,\n            secondary && { backgroundColor: colors.secondary },\n            secondary2 && { backgroundColor: colors.secondary2 },\n            secondary3 && { backgroundColor: colors.secondary3 },\n            primary1 && { backgroundColor: colors.primary1 },\n            primary2 && { backgroundColor: colors.primary2 },\n            backgroundColor && { backgroundColor: backgroundColor },\n            borderRadius && { borderRadius },\n            !large && styles.small,\n            rounded && {\n              borderRadius: baseFont.size * 3.8,\n              paddingHorizontal: !large\n                ? stylesObject.small.padding * 1.5\n                : stylesObject.button.padding * 1.5,\n            },\n            outline && {\n              borderWidth: 1,\n              backgroundColor: 'transparent',\n              borderColor: baseFont.color,\n            },\n            transparent && {\n              borderWidth: 0,\n              backgroundColor: 'transparent',\n            },\n            buttonStyle && buttonStyle,\n            disabled && { backgroundColor: colors.disabled },\n            disabled && disabledStyle && disabledStyle,\n          ]}\n        >\n          {icon && !iconRight && iconElement}\n          {loading && !loadingRight && loadingElement}\n          <Text\n            style={[\n              styles.text,\n              color && { color },\n              !large && styles.smallFont,\n              fontSize && { fontSize },\n              textStyle && textStyle,\n              fontWeight && { fontWeight },\n              fontFamily && { fontFamily },\n            ]}\n            {...textOptions}\n            allowFontScaling={allowFontScaling}\n          >\n            {title}\n          </Text>\n          {loading && loadingRight && loadingElement}\n          {icon && iconRight && iconElement}\n        </View>\n      </Component>\n    </View>\n  );\n};\n\nButton.propTypes = {\n  buttonStyle: ViewPropTypes.style,\n  title: PropTypes.string,\n  onPress: PropTypes.any,\n  icon: PropTypes.object,\n  iconComponent: PropTypes.any,\n  secondary: PropTypes.bool,\n  secondary2: PropTypes.bool,\n  secondary3: PropTypes.bool,\n  primary1: PropTypes.bool,\n  primary2: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  color: PropTypes.string,\n  fontSize: PropTypes.any,\n  underlayColor: PropTypes.string,\n  raised: PropTypes.bool,\n  textStyle: NativeText.propTypes.style,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  activityIndicatorStyle: ViewPropTypes.style,\n  loadingRight: PropTypes.bool,\n  Component: PropTypes.any,\n  borderRadius: PropTypes.number,\n  large: PropTypes.bool,\n  iconRight: PropTypes.bool,\n  fontWeight: PropTypes.string,\n  disabledStyle: ViewPropTypes.style,\n  fontFamily: PropTypes.string,\n  containerViewStyle: ViewPropTypes.style,\n  rounded: PropTypes.bool,\n  outline: PropTypes.bool,\n  transparent: PropTypes.bool,\n  allowFontScaling: PropTypes.bool,\n  textNumberOfLines: PropTypes.number,\n  textEllipsizeMode: PropTypes.string,\n};\n\nconst stylesObject = {\n  container: {\n    backgroundColor: 'transparent',\n    marginLeft: 15,\n    marginRight: 15,\n  },\n  button: {\n    padding: 19,\n    backgroundColor: colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  text: {\n    color: 'white',\n    fontSize: normalize(16),\n  },\n  icon: {\n    marginRight: 10,\n  },\n  iconRight: {\n    marginLeft: 10,\n  },\n  small: {\n    padding: 12,\n  },\n  smallFont: {\n    fontSize: normalize(14),\n  },\n  activityIndicatorStyle: {\n    marginHorizontal: 10,\n    height: 0,\n  },\n  raised: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n      android: {\n        backgroundColor: '#fff',\n        elevation: 2,\n      },\n    }),\n  },\n};\n\nconst styles = StyleSheet.create(stylesObject);\n\nexport default Button;\n"]}]