["94b0db20573a52eeeab0135a2755df63aaf57fe1","559549be7da34c2095748588cdba4e468f9203cb",["react","react-native","@shoutem/theme","lodash","../Html","../elements/Img","./Inline"],[130,227,266,308,401,433,476],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/ui/html/elements/A.js"],"names":["A","props","context","onPress","bind","renderElement","href","handleLinkPress","console","log","element","style","inlineImage","merge","attributes","lightbox","Component","propTypes","PropTypes","func","string","openLinkPress","openURL","catch","err","Anchor","EnhancedA"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA;;AACA;;AACA;;IAEMA,C;;;AAOJ,aAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kHACpBD,KADoB,EACbC,OADa;;AAE1B,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,OAArB;AAH0B;AAI3B;;;;8BAES;AAAA,mBAC0B,KAAKH,KAD/B;AAAA,UACAK,IADA,UACAA,IADA;AAAA,UACMC,eADN,UACMA,eADN;;;AAGR,UAAI,CAACA,eAAL,EAAsB;AACpBC,gBAAQC,GAAR,CAAY,4DAAZ;AACA;AACD;;AAEDF,sBAAgBD,IAAhB;AACD;;;kCAEaI,O,EAASC,K,EAAO;AAAA,UACpBN,aADoB,GACF,KAAKJ,KADH,CACpBI,aADoB;;;AAG5B,UAAI,gBAAMK,OAAN,CAAJ,EAAoB;AAElB,YAAME,cAAc,iBAAEC,KAAF,CAAQ,EAAR,EAAYH,OAAZ,EAAqB,EAAEI,YAAY,EAAEC,UAAU,KAAZ,EAAd,EAArB,CAApB;AACA,eAAOV,cAAcO,WAAd,EAA2BD,KAA3B,EAAkCN,aAAlC,CAAP;AACD;;AAED,aAAOA,cAAcK,OAAd,EAAuBC,KAAvB,EAA8BN,aAA9B,CAAP;AACD;;;6BAEQ;AAIP,aAAO,uEAAY,KAAKJ,KAAjB,IAAwB,SAAS,KAAKE,OAAtC,EAA+C,eAAe,KAAKE,aAAnE,IAAP;AACD;;;EAzCa,gBAAMW,S,UACbC,S;AAELV,mBAAiB,gBAAMW,SAAN,CAAgBC,I;AACjCb,QAAM,gBAAMY,SAAN,CAAgBE;;;;AAwC1B,SAASC,aAAT,CAAuBL,SAAvB,EAAkC;AAChC,SAAO,UAAUf,KAAV,EAAiB;AACtB,aAASM,eAAT,CAAyBD,IAAzB,EAA+B;AAC7B,2BAAQgB,OAAR,CAAgBhB,IAAhB,EACGiB,KADH,CACS;AAAA,eAAOf,QAAQC,GAAR,CAAY,mBAAZ,EAAiCe,GAAjC,CAAP;AAAA,OADT;AAED;;AAED,WAAO,8BAAC,SAAD,2BAAevB,KAAf,IAAsB,iBAAiBM,eAAvC,IAAP;AACD,GAPD;AAQD;;AAGD,IAAMkB,SAAS,iDAAgCzB,CAAhC,CAAf;QAEYA,C,GAAVyB,M;;AAIF,IAAMC,YAAYL,cAAcrB,CAAd,CAAlB;kBACe,yBAAa,mBAAb,EAAkC,iDAAgC0B,SAAhC,CAAlC,C","sourcesContent":["import React from 'react';\nimport { Linking } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport _ from 'lodash';\n\nimport { ElementPropTypes, combineMappers, mapElementProps } from '../Html';\nimport { isImg } from '../elements/Img';\nimport { Inline } from './Inline';\n\nclass A extends React.Component {\n  static propTypes = {\n    ...ElementPropTypes,\n    handleLinkPress: React.PropTypes.func,\n    href: React.PropTypes.string,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.onPress = this.onPress.bind(this);\n    this.renderElement = this.renderElement.bind(this);\n  }\n\n  onPress() {\n    const { href, handleLinkPress } = this.props;\n\n    if (!handleLinkPress) {\n      console.log('No \"handleLinkPress\" handle defined on the anchor element.');\n      return;\n    }\n\n    handleLinkPress(href);\n  }\n\n  renderElement(element, style) {\n    const { renderElement } = this.props;\n\n    if (isImg(element)) {\n      // In the A element image can not be previewed because it opens a link.\n      const inlineImage = _.merge({}, element, { attributes: { lightbox: false } });\n      return renderElement(inlineImage, style, renderElement);\n    }\n\n    return renderElement(element, style, renderElement);\n  }\n\n  render() {\n    // Because the anchor has dynamic display nature\n    // it can not use the TouchableOpacity component to wrap the children.\n    // The TouchableOpacity component can not be nested within the \"Text\" component.\n    return <Inline {...this.props} onPress={this.onPress} renderElement={this.renderElement} />;\n  }\n}\n\nfunction openLinkPress(Component) {\n  return function (props) {\n    function handleLinkPress(href) {\n      Linking.openURL(href)\n        .catch(err => console.log('An error occurred', err));\n    }\n\n    return <Component {...props} handleLinkPress={handleLinkPress} />;\n  }\n}\n\n// Named export to customize Anchor\nconst Anchor = combineMappers(mapElementProps)(A);\nexport {\n  Anchor as A,\n}\n\n// Default export with added link press handle\nconst EnhancedA = openLinkPress(A);\nexport default connectStyle('shoutem.ui.Html.a')(combineMappers(mapElementProps)(EnhancedA));\n"]}]