["b5e458077c4bf19b1fef9e37fe70d93a47668744","420758c188d6dcdee08d6e7d79c985f76821cfd2",["react-native"],[122],{"version":3,"sources":["/home/ziddi/Desktop/Bhupesh/venders/node_modules/@shoutem/animation/src/components/measure.js"],"names":["findNodeHandle","measure","measuredComponent","props","context","bind","handleMeasure","state","layout","x","y","width","height","pageX","pageY","setState","requestAnimationFrame","Component"],"mappings":";;;;;AAAA;;;;AAEA,IAAMA,iBAAiB,sBAAYA,cAAnC;;AAEO,IAAMC,4BAAU,SAAVA,OAAU,YAAa;AAAA,MAC5BC,iBAD4B;AAAA;;AAEhC,+BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,oJACpBD,KADoB,EACbC,OADa;;AAE1B,YAAKH,OAAL,GAAe,MAAKA,OAAL,CAAaI,IAAb,OAAf;AACA,YAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,OAArB;AACA,YAAKE,KAAL;AAEEC,gBAAQ;AACNC,aAAG,CADG;AAENC,aAAG,CAFG;AAGNC,iBAAO,CAHD;AAINC,kBAAQ,CAJF;AAKNC,iBAAO,CALD;AAMNC,iBAAO;AAND;AAFV;AAJ0B;AAe3B;;AAjB+B;AAAA;AAAA,oCAmBlBL,CAnBkB,EAmBfC,CAnBe,EAmBZC,KAnBY,EAmBLC,MAnBK,EAmBGC,KAnBH,EAmBUC,KAnBV,EAmBiB;AAC/C,aAAKC,QAAL,CAAc,EAAEP,QAAQ,EAAEC,IAAF,EAAKC,IAAL,EAAQE,cAAR,EAAgBD,YAAhB,EAAuBE,YAAvB,EAA8BC,YAA9B,EAAV,EAAd;AACD;AArB+B;AAAA;AAAA,gCAuBtB;AACR,+BAAUb,OAAV,CAAkBD,eAAe,IAAf,CAAlB,EAAwC,KAAKM,aAA7C;AACD;AAzB+B;AAAA;AAAA,0CA2BZ;AAClBU,8BAAsB,KAAKf,OAA3B;AACA,YAAI,oJAAmC,UAAvC,EAAmD;AACjD;AACD;AACF;AAhC+B;AAAA;AAAA,IACFgB,SADE;;AAmClC,SAAOf,iBAAP;AACD,CApCM","sourcesContent":["import ReactNative, { UIManager } from 'react-native';\n\nconst findNodeHandle = ReactNative.findNodeHandle;\n\nexport const measure = Component => {\n  class measuredComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n      this.measure = this.measure.bind(this);\n      this.handleMeasure = this.handleMeasure.bind(this);\n      this.state = {\n        ...super.state,\n        layout: {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n          pageX: 0,\n          pageY: 0,\n        }\n      };\n    }\n\n    handleMeasure(x, y, width, height, pageX, pageY) {\n      this.setState({ layout: { x, y, height, width, pageX, pageY } });\n    };\n\n    measure() {\n      UIManager.measure(findNodeHandle(this), this.handleMeasure);\n    }\n\n    componentDidMount() {\n      requestAnimationFrame(this.measure);\n      if (typeof super.componentDidMount === 'function') {\n        super.componentDidMount();\n      }\n    }\n  }\n\n  return measuredComponent;\n}\n"]}]